{"version":3,"sources":["aws-exports.js","utils/S3Handler.ts","utils/ImageViewer.tsx","auth/auth-context.tsx","utils/BackDrop.tsx","utils/index.ts","app/AppThemer.tsx","app/AppFooter.tsx","app/AppHeader.tsx","app/AppLayout.tsx","common/Snackbar.tsx","auth/components/styles.tsx","auth/components/AuthButton.tsx","auth/components/AuthPasswordField.tsx","auth/components/AuthLayout.tsx","auth/components/AuthPhoneField.tsx","auth/SignIn.tsx","auth/components/AuthEmailField.tsx","auth/components/AuthReEnterPasswordField.tsx","auth/SignUp.tsx","auth/components/AuthCodeField.tsx","auth/ConfirmSignUp.tsx","auth/ConfirmSignUpEmail.tsx","auth/ResetPassword.tsx","auth/ConfirmResetPassword.tsx","auth/Auth.tsx","profilepage/LocationSearchInput.tsx","profilepage/util.ts","profilepage/AddressForm.tsx","profilepage/EmployeeBackgroundCheck.tsx","app/AppHomeLayout.tsx","graphql/mutations.js","graphql/queries.js","utils/Stripe.ts","profilepage/Stripe/CardSetupForm.tsx","profilepage/Stripe/Stripe.tsx","profilepage/Checkout.tsx","ticket/CreateTicket.tsx","graphql/subscriptions.js","ticket/AlertDialog.tsx","utils/ExpertViewer.tsx","ticket/util.ts","ticket/ResponsiveDialog.tsx","ticket/TicketList.tsx","chat/chat1.tsx","chat/ChatList.tsx","app/App.tsx","serviceWorker.ts","index.tsx","utils/DialogTitle.tsx"],"names":["awsmobile","region","ampConfig","aws_user_files_s3_bucket_region","bucket","aws_user_files_s3_bucket","uploadImage","file","a","fileName","name","mimeType","type","key","uuid","fileForUpload","Storage","put","contentType","console","log","getImages","imageFiles","promises","map","getImage","Promise","all","result","get","avatarUrl","getCacheImage","images","fileUrl","Cache","getItem","expires","Date","getTime","setItem","handleImageUpload","compress","imageFile","Blob","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","useStyles","makeStyles","theme","createStyles","container","padding","ImageViewer","inputimages","openPop","closeAlert","React","useState","scroll","setScroll","useContext","AuthContext","setImages","classes","useEffect","files","JSON","parse","fetchData","handleClose","descriptionElementRef","useRef","descriptionElement","current","focus","open","fullScreen","onClose","aria-labelledby","aria-describedby","id","className","currElement","index","src","alt","createContext","user","provider","email","phoneNumber","userId","accountType","isAuthenticated","signUp","reject","confirmSignUp","resendSignUp","signIn","signOut","resetPassword","confirmResetPassword","AuthContextProvider","children","setUser","setProvider","setEmail","setName","setphoneNumber","setUserId","setAccountType","history","useHistory","getUserData","Hub","listen","data","payload","event","push","localStorage","Auth","currentAuthenticatedUser","then","email1","attributes","name1","provider1","username","catch","err","useCallback","userEmail","password","resolve","phone_number","message","code","forgotPassword","newPassword","forgotPasswordSubmit","Provider","value","backdrop","zIndex","drawer","color","TVBackdrop","props","onClick","defaultTheme","typography","fontFamily","join","createMuiTheme","Themer","ThemeProvider","NoSsr","Copyright","Typography","variant","align","Link","href","getFullYear","footer","spacing","marginTop","backgroundColor","Footer","useTheme","Container","maxWidth","appBar","boxShadow","appBarBefore","border","menuButton","marginRight","spacer","flexGrow","Header","header","authContext","setOpenCart","authLink","IconButton","aria-label","AppBar","position","Toolbar","edge","root","display","flexDirection","minHeight","main","marginBottom","Layout","title","document","CssBaseline","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","alignItems","MySnackbarContentWrapper","Icon","SnackbarContent","clsx","action","useStyles2","margin","SnackBar","setMessage","setOpen","reason","bar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","form","width","textfield","paper","avatar","secondary","submit","links","btn","btnFederated","grey","btnElems","gridTemplateColumns","btnIcon","gridColumnEnd","btnLabel","height","justifyContent","textTransform","input","AuthButton","disabled","Button","fullWidth","AuthPasswordField","setPassword","showPassword","setShowPassword","valid","setValid","hint","setHint","delay","hintString","FormHelperText","FormControl","required","InputLabel","htmlFor","OutlinedInput","onChange","e","target","clearTimeout","setTimeout","isValid","test","length","endAdornment","InputAdornment","onMouseDown","preventDefault","Visibility","VisibilityOff","labelWidth","AuthLayout","Avatar","component","AuthPhoneField","setPhoneNumber","TextField","label","autoComplete","helperText","InputProps","startAdornment","currentTarget","AuthSignIn","disable","setDisable","setError","setErrorMsg","onSubmit","submitHandler","noValidate","Grid","item","xs","AuthEmailField","AuthReEnterPasswordField","authpass","setRePassword","AuthSignUp","rePassword","radio","setRadio","formattedPhone","replace","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","setCode","AuthConfirmSignUp","location","state","setSuccessMsg","AuthCodeField","AuthConfirmSignUpEmail","AuthReset","routes","exact","path","SignIn","SignUp","ConfirmSignUp","ConfirmSignUpEmail","ResetPassword","ConfirmResetPassword","Fragment","LocationSearchInput","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","status","setValue","clearSuggestions","handleSelect","description","getGeocode","address","results","geometry","lat","lng","latitudes","toString","longitudes","googleAddressReturn","getLatLng","suggestion","structured_formatting","main_text","secondary_text","stripAddress","address_components","street_number","filter","ll","types","includes","route","postal_code","country","administrative_area_level_1","locality","administrative_area_level_2","address1","long_name","city","county","zip","formatted_address","buttons","button","marginLeft","AddressForm","handleInputChange","setValues","values","handleNext","valuessss","pictures","nextButton","stringify","setLoaded","S3path","picture","firstName","lastName","middelName","address2","aboutme","setPictures","onDrop","loaded","gutterBottom","sm","multiline","rows","style","withPreview","withIcon","imgExtension","maxFileSize","direction","justify","currencies","EmployeeBackgroundCheck","routingNumber","bankAccountNumber","ssn","reroutingNumber","rebankAccountNumber","setErrorA","errorA","undefined","backgroundcheck","secondaryPayment","secondaryPaymentType","dob","payment","md","Divider","max","toISOString","slice","select","SelectProps","native","option","backButton","top","bottom","paddingBottom","appBarSpacer","mixins","toolbar","stickToBottom","paddingLeft","paddingRight","paddingTop","rootB","HomeLayout","Paper","square","BottomNavigation","newValue","BottomNavigationAction","createConvo","gql","createTicket","updateTicket","assignExpertToTicket","createMessage","updateUser","registerUser","registerFullEmployee","updateEmployee","createConvoLink","updateConvoLink","getUser","getEmployee","getFullUser","getFullEmployee","getConvo","getOpenTicket","getUserConversations","getEmployeeConversations","createCustomer","myInit","response","body","phone","headers","API","post","customerId","url","customerKey","intent","client_secret","CardSetupForm","stripe","useStripe","elements","useElements","handleSubmit","keys","confirmCardSetup","payment_method","card","getElement","CardNumberElement","billing_details","setupIntent","useMemo","base","letterSpacing","invalid","cardNumber","expiry","cvc","onReady","onBlur","onFocus","stripePromise","loadStripe","Stripe","layout","breakpoints","up","stepper","Checkout","activeStep","setActiveStep","setAddress","setPayment","isCreate","setisCreate","isEmp","setisEmp","setBackdrop","steps","op","graphql","graphqlOperation","commentData","cardInfo","updateProfile","paymentV","registered","active","zipcode","handleBack","AppHomeLayout","Stepper","Step","StepLabel","step","Error","getStepContent","Backdrop","CircularProgress","time","date","fontWeight","lineHeight","CreateTicket","createNewTicket","ticketUserInfo","newId","countAndId","price","daytime","content","destination","source","ownerUploadImages","ticketUserId","terms","hour","min","non","dayTime","setDayTime","handleDayTimeChange","destAddress","setDestAddress","handleCheckedChange","checked","Tooltip","Checkbox","Select","inputProps","onCreateMessage","onCreateTicket","onUpdatedTicket","customIcons","1","2","3","4","5","withStyles","iconFilled","iconHover","Rating","IconContainer","other","AlertDialog","textValue","setTextValue","handleOperation","Dialog","keepMounted","DialogTitle","DialogContent","DialogContentText","autoFocus","Box","mb","borderColor","defaultValue","getLabelText","IconContainerComponent","DialogActions","ExpertViewer","employee","emp","setEmp","launchNewConversation","expertid","chat","conversation","owner","convoLinkUserId","convoLinkConversationId","service","convoLinkEmployeeId","ownerConvLink","serviceConvLink","ownerConvLinkConf","serviceConvLinkConf","mm","xy","findConverationWithUser","expertId","setIsEmployee","employeeConversations","items","convoLinks","convoLink","find","c","associated","some","conversationName","userConversations","startConvoWithUser","conversationInfo","AcceptTicket","close","formEdit","setFormEdit","setclosedComment","closedComment","acceptTicket","authid","ticketEmployeeInfo","ticketEmployeeId","openAlert","setOpenAlert","alertType","setAlertType","comments","closedTime","toUTCString","openUserImage","setOpenUserImage","imageListen","openExpert","setExpert","expertShow","chatWithExpert","currentId","otherId","conv","pathname","dividers","InputLabelProps","shrink","Chip","clickable","deleteIcon","background","subHeader","inline","rating","buttonCart","buttonGird","cartLabel","borderRadius","absolute","right","fab","chipTop","TicketList","cartValue","openErrands","setOpenErrands","ownerrands","setOwnerrands","completedJob","setCompletedJob","setIsAuth","handleListClick","setSelectedItem","setOpenBuy","openBuy","selectedItem","isEmployee","useReducer","errand","updated","forEach","element","filtered","el","i","dispatch","unsubscribe","acceptedJobs","getuser","employeeTickets","closed","jobsByStatus","createdSub","subscribe","next","todoData","updatedsubscription","userTickets","errands","Object","List","subheader","ListSubheader","ListItem","ListItemText","Fab","Title","context","Component","uploadFile","InputMessage","messageInput","ownerInput","ownerAvatarInput","handleFileChange","startsWith","reader","FileReader","self","onload","setState","popoverOpen","filePreviewSrc","this","readAsDataURL","handleSendMessage","bind","sendMessageLoading","imgBtnClass","loadingClass","isLoading","sendButtonIcon","accept","Popover","placement","isOpen","PopoverHeader","aria-hidden","PopoverBody","ref","ownerAvatar","placeholder","MessageList","messages","reverse","messageItem","sender","senderAvatar","MessageItem","prevProps","prevState","prevMsg","nodebugImage","currMsg","checkFileUrl","nonFile","Array","isArray","messageRight","messagePosition","dangerouslySetInnerHTML","__html","ChatBox","prop","sendMessage","senderUsername","ChatRoom","trim","sendMes","isSent","chatbot","messageConversationId","selectedConv","convId","newMessage","users","chatBoxes","ChatList","converstaions","setConverstaions","flag","setFlagValue","setSelectedConv","setOwnerAvatar","useLocation","otherUser","useravatar","dense","ListItemAvatar","App","PrivateRoute","rest","render","to","Boolean","window","hostname","match","AwsConfig","config","Amplify","configure","app","basename","process","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister","closeButton","disableTypography"],"mappings":"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","file":"static/js/main.b1b50d42.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:780660c0-fe39-4799-8b55-aa24ea58f027\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_FrdnQ508F\",\n    \"aws_user_pools_web_client_id\": \"36ple9cs7k9q8ub2cmvu5kec13\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://ntirg4wvdfhq5penwxblokjri4.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"stripeapi\",\n            \"endpoint\": \"https://15xvd10j24.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        }\n    ],\n    \"aws_user_files_s3_bucket\": \"ondemandappd2a9576520ae431a98cad954a5d551bc211754-dev\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\"\n};\n\n\nexport default awsmobile;\n","import ampConfig from '../aws-exports'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport imageCompression from 'browser-image-compression';\nimport { Storage, Cache} from 'aws-amplify'\n\nconst {\n  aws_user_files_s3_bucket_region: region,\n  aws_user_files_s3_bucket: bucket\n} = ampConfig;\n\n\nasync function uploadImage(file: any) {\n\n    if (file) {\n        \n        const { name: fileName, type: mimeType } = file  \n        const key = `${uuid()}${fileName}`\n        const fileForUpload = {\n            bucket,\n            key,\n            region,\n        }\n\n        try {\n            await Storage.put(key ,file, {\n                contentType: mimeType\n            })\n          console.log('successfully stored user data!')\n          return fileForUpload;\n        } catch (err) {\n          console.log('error: ', err)\n        }\n    }\n}\n\nexport async function getImages(imageFiles: any[]) {\n    console.log('getImages!', imageFiles);\n\n    // map array to promises\n    const promises = imageFiles.map(getImage);\n    // wait until all promises are resolved\n    const result = await Promise.all(promises);\n    console.log('getImages!', result);\n    return result;\n}\n\nasync function getImage(imageFiles: any) {\n    const avatarUrl = await Storage.get(imageFiles.key )\n    return avatarUrl;\n}\n\nexport async function getCacheImage(images: any) {\n  let fileUrl = Cache.getItem(images.key)\n\t\t  if (fileUrl) {\n      console.log(`Retrieved cached url for ${images.key}: ${fileUrl}`)\n      return fileUrl[0];\n\t\t  }\n\t\n\t\t  fileUrl = await getImages([images]);\n\t\t  console.log(`Retrieved fetched url for ${images.key}: ${fileUrl}`)\n\n\t\t  const expires = new Date(new Date().getTime() + 14*60000).getTime();\n      Cache.setItem(images.key, fileUrl, { expires })\n      \n      return fileUrl[0];\n}\n\n\nexport async function handleImageUpload(imageFiles: any[]) {\n\n  // map array to promises\n  const promises = imageFiles.map(compress);\n  // wait until all promises are resolved\n  const result = await Promise.all(promises);\n  console.log('Done!', result);\n  return result;\n}\n\nasync function compress(imageFile: any) {\n\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        const options = {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1920,\n          useWebWorker: false\n        }\n        try {\n          const compressedFile = await imageCompression(imageFile, options);\n          console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n          console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n          return await uploadImage(compressedFile); // write your own logic\n        } catch (error) {\n            console.log(error);\n          }\n\n  }","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  inputimages: string;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ImageViewer: React.SFC<AcceptProps> = ({inputimages, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const files = JSON.parse(inputimages);\n      const result = await getImages(files);\n      console.log(\"images\", result);\n      //@ts-ignore\n      setImages(result);\n    };\n    fetchData();\n  }, []);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return (\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Ticket Details</DialogTitle>\n        <div className={classes.container}>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog>\n  );\n}\n\nexport default ImageViewer;","import React, { useState, useCallback, useEffect } from 'react'\nimport { Auth, Hub } from 'aws-amplify'\nimport { useHistory } from 'react-router-dom'\n\nexport interface AuthContextProps {\n  user: any\n  provider: string\n  name: string\n  email: string,\n  phoneNumber: string,\n  userId: string,\n  accountType: string,\n  isAuthenticated(): boolean\n  signUp(username: string, password: string, phoneNumber: string, accountType: string): Promise<any>\n  confirmSignUp(phoneNumber: string, code: string): Promise<any>\n  resendSignUp(phoneNumber: string): Promise<any>\n  signIn(phoneNumber: string, password: string): Promise<any>\n  signOut(): Promise<any>\n  resetPassword(phoneNumber: string): Promise<any>\n  confirmResetPassword(\n    phoneNumber: string,\n    newPassword: string,\n    code: string\n  ): Promise<any>\n}\n\nexport const AuthContext = React.createContext<AuthContextProps>({\n  user: null,\n  provider: '',\n  name: '',\n  email: '',\n  phoneNumber: '',\n  userId: '',\n  accountType: '',\n  isAuthenticated: () => false,\n  signUp: () => new Promise(reject => reject(0)),\n  confirmSignUp: () => new Promise(reject => reject(0)),\n  resendSignUp: () => new Promise(reject => reject(0)),\n  signIn: () => new Promise(reject => reject(0)),\n  signOut: () => new Promise(reject => reject(0)),\n  resetPassword: () => new Promise(reject => reject(0)),\n  confirmResetPassword: () => new Promise(reject => reject(0))\n})\n\nexport interface AuthContextProviderProps {\n  children: any\n}\n\nconst AuthContextProvider: React.SFC<AuthContextProviderProps> = ({\n  children\n}) => {\n  const [user, setUser] = useState<any>(null)\n  const [provider, setProvider] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n  const [name, setName] = useState<string>('')\n  const [phoneNumber, setphoneNumber] = useState<string>('')\n  const [userId, setUserId] = useState<string>('')\n  const [accountType, setAccountType] = useState<string>('')\n\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('checking for authenticated user...')\n    getUserData()\n  }, [])\n\n  useEffect(() => {\n    Hub.listen('auth', data => {\n      const { payload } = data\n      switch (payload.event) {\n        case 'signIn':\n          getUserData()\n          history.push('/')\n          break\n        case 'signOut':\n          setUser(null)\n          setProvider('')\n          localStorage.setItem('provider', '')\n          setEmail('')\n          setName('')\n          setphoneNumber('')\n          setUserId('')\n          history.push('/')\n          break\n      }\n    })\n  }, [])\n\n  const getUserData = () => {\n    Auth.currentAuthenticatedUser()\n      .then(data => {\n        console.log('current', data)\n        setUser(data)\n        const email1 = data.email || data.attributes.email || ''\n        const name1 = data.name || data.attributes.email || ''\n        const provider1 = localStorage.getItem('provider') || ''\n\n        setUserId(data.username)\n        setEmail(email1)\n        setName(name1)\n        setProvider(provider1)\n        setAccountType(data.attributes[\"custom:account_type\"])\n\n        // console.log('email:', email1, email)\n        // console.log('name:', name1)\n        // console.log('provider:', provider1)\n         console.log('provider:', accountType,data.attributes, data.attributes[\"custom:account_type\"])\n\n\n      })\n      .catch(err => {\n        console.log('no current authenticated user')\n      })\n  }\n\n  const isAuthenticated = (): boolean => user !== null\n\n  const signUp = useCallback((userEmail: string, password: string, phoneNumber: string, accountType: string) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.signUp({\n          username: \"+1\"+phoneNumber,\n          password: password,\n          attributes: {\n            email: userEmail,          \n            phone_number: \"+1\"+phoneNumber,\n            'custom:account_type': accountType\n        },\n        })\n        console.log(user)\n        resolve(user)\n      } catch (err) {\n        console.log(err)\n        let message: string = 'An internal error occurred.'\n        switch (err.code) {\n          case 'UserNotConfirmedException':\n          case 'PasswordResetRequiredException':\n          case 'NotAuthorizedException':\n          case 'UserNotFoundException':\n          case 'UsernameExistsException':\n            message = err.message\n            break\n          default:\n            console.log(err)\n            break\n        }\n        reject(message)\n      }\n    })\n  }, [])\n\n  const confirmSignUp = useCallback((phoneNumber: string, code: string) => {\n    console.log('confirm sign up', phoneNumber, code)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.confirmSignUp(\"+1\"+phoneNumber, code)\n        resolve(user)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const signIn = useCallback((phoneNumber: string, password: string) => {\n    console.log('sign in', phoneNumber, password)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const data = await Auth.signIn({\n          username: \"+1\"+phoneNumber,\n          password: password\n        })\n        localStorage.setItem('provider', 'email')\n        console.log(data)\n        resolve(data)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const resendSignUp = useCallback((phoneNumber: string) => {\n    console.log('resend sign up', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.resendSignUp(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const signOut = useCallback(() => {\n    console.log('sign out')\n    return new Promise((resolve, reject) => {\n      Auth.signOut()\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const resetPassword = useCallback((phoneNumber: string) => {\n    console.log('reset password', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.forgotPassword(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const confirmResetPassword = useCallback(\n    (phoneNumber: string, newPassword: string, code: string) => {\n      console.log('confirm reset password', phoneNumber, code, newPassword)\n      return new Promise((resolve, reject) => {\n        Auth.forgotPasswordSubmit(\"+1\"+phoneNumber, code, newPassword)\n          .then(data => resolve(data))\n          .catch(err => {\n            const message = err.message || 'An internal error occurred.'\n            reject(message)\n          })\n      })\n    },\n    []\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        provider: provider,\n        name: name,\n        email: email,\n        phoneNumber: phoneNumber,\n        accountType: accountType,\n        userId: userId,\n        isAuthenticated: isAuthenticated,\n        signUp: signUp,\n        confirmSignUp: confirmSignUp,\n        resendSignUp: resendSignUp,\n        signIn: signIn,\n        signOut: signOut,\n        resetPassword: resetPassword,\n        confirmResetPassword: confirmResetPassword\n      }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\n interface TVBackdropProps {\n    open: boolean;\n  }\n\n export const TVBackdrop: React.SFC<TVBackdropProps> = (props) => {\n  const classes = useStyles();\n  //const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    //setOpen(false);\n  };\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n","export * from './DialogTitle';\nexport * from './S3Handler';\nexport * from './ImageViewer';\nexport * from './model';\nexport * from './BackDrop';","import React from 'react'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core'\nimport NoSsr from '@material-ui/core/NoSsr'\n\nconst defaultTheme = {\n  typography: {\n    fontFamily: ['Roboto', 'sans-serif'].join(',')\n  }\n}\nconst theme = createMuiTheme(defaultTheme)\n\nexport interface ThemerProps {\n  children: any\n}\n\nconst Themer: React.SFC<ThemerProps> = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>{children}</NoSsr>\n    </ThemeProvider>\n  )\n}\n\nexport default Themer\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'TravTail ™ '}\n      <Link\n        color='inherit'\n        href='https://travtail.com/'>\n        \n      </Link>\n      {new Date().getFullYear()}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    footer: {\n      padding: theme.spacing(2),\n      marginTop: 'auto',\n      backgroundColor: '#f6f6f6'\n    }\n  })\n)\n\nexport interface FooterProps {}\n\nconst Footer: React.SFC<FooterProps> = () => {\n  const classes = useStyles(useTheme())\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth='sm'>\n        <Copyright />\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nimport { Toolbar, AppBar, IconButton, Button } from '@material-ui/core'\nimport HomeIcon from '@material-ui/icons/Home'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { AuthContext } from '../auth/auth-context'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: { boxShadow: 'none', backgroundColor: 'transparent' },\n    appBarBefore: { backgroundColor: '#fff', border: 1 },\n\n    menuButton: {\n      marginRight: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    }\n  })\n)\n\nexport interface HeaderProps {\n  header?: string;\n}\n\nconst Header: React.SFC<HeaderProps> = ({ header }) => {\n  const classes = useStyles(useTheme())\n  const authContext = useContext(AuthContext);\n  const history = useHistory()\n\n  const [openCart, setOpenCart] = React.useState(false);\n\n  const buyButton = () => {\n    setOpenCart(true)\n  };\n\n  const closeBuyButton = () => {\n    setOpenCart(false)\n  };\n\n  let authLink = authContext.isAuthenticated() ? (\n    <div>\n      <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => history.push('/chat')}\n>\n    <NotificationsIcon color='action'/>\n</IconButton>\n\n{ header ?(<IconButton aria-label=\"show 17 new notifications\" color=\"inherit\"\n    className={classes.menuButton}\n    onClick={buyButton}\n>\n    <AddShoppingCartIcon color='action'/>\n</IconButton>) : null}\n\n    { <IconButton  color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => authContext.signOut()}>\n    <ExitToAppIcon color='action'/>\n</IconButton> \n}\n    </div>\n  ) : null\n\n  return (\n    <AppBar position='fixed' className={authContext.isAuthenticated() ? classes.appBarBefore :classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge='start'\n          className={classes.menuButton}\n          onClick={() => history.push('/')}\n          color='inherit'\n          aria-label='home'>\n          <HomeIcon color='action' />\n        </IconButton>\n        <div className={classes.spacer}></div>\n        {authLink}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React, { useEffect } from 'react'\n\nimport Themer from './AppThemer'\nimport Footer from './AppFooter'\nimport Header from './AppHeader'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    main: {\n      // marginTop: theme.spacing(8),// sign In  top\n      marginBottom: theme.spacing(2)\n    }\n  })\n)\n\nexport interface LayoutProps {\n  title: string\n  children: any\n}\n\nconst Layout: React.SFC<LayoutProps> = ({ title, children }) => {\n  const classes = useStyles(useTheme())\n\n  useEffect(() => {\n    document.title = title\n  }, [title])\n\n  return (\n    <Themer>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header />\n        <Container className={classes.main} maxWidth='sm'>\n          {children}\n        </Container>\n        <Footer />\n      </div>\n    </Themer>\n  )\n}\n\nexport default Layout\n","import React, { SyntheticEvent, useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { amber, green } from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nexport interface Props {\n  className: string\n  message: string\n  onClose: () => void\n  variant: keyof typeof variantIcon\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n  const classes = useStyles1()\n  const { className, message, onClose, variant } = props\n  const Icon = variantIcon[variant]\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nconst useStyles2 = makeStyles((theme: Theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}))\n\nexport interface SnackBarProps {\n  variant: keyof typeof variantIcon\n  message: string\n  setMessage: (message: string) => void\n}\n\nconst SnackBar: React.SFC<SnackBarProps> = ({\n  variant,\n  message,\n  setMessage\n}) => {\n  const classes = useStyles2()\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    setOpen(message === '' ? false : true)\n  }, [message])\n\n  useEffect(() => {\n    !open && setMessage('')\n  }, [open])\n\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const bar = (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}>\n      <MySnackbarContentWrapper\n        onClose={handleClose}\n        className={classes.margin}\n        variant={variant}\n        message={message}\n      />\n    </Snackbar>\n  )\n\n  return <div>{bar}</div>\n}\n\nexport default SnackBar","import {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme: Theme = useTheme()) =>\n  createStyles({\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    textfield: {\n      margin: theme.spacing(2, 0, 0),\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    links: {\n      padding: '0px 5px'\n    },\n    btn: {\n      width: '100%',\n      maxWidth: '260px',\n      marginTop: theme.spacing(2)\n    },\n    btnFederated: {\n      backgroundColor: 'white',\n      color: theme.palette.grey[600]\n    },\n    btnElems: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    },\n    btnIcon: {\n      display: 'flex',\n      gridColumnEnd: 'span 2'\n    },\n    btnLabel: {\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      gridColumnEnd: 'span 10',\n      textTransform: 'none'\n    },\n    input: {\n      padding : '11.5px 10px'\n    },\n    container: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    }\n  })\n)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { useStyles } from './styles'\n\nexport interface AuthButtonProps {\n  children: any\n  disabled: boolean\n}\n\nconst AuthButton: React.SFC<AuthButtonProps> = ({ children, disabled }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      type='submit'\n      disabled={disabled}\n      fullWidth\n      variant='contained'\n      color='primary'\n      size='large'\n      className={classes.submit}>\n      {children}\n    </Button>\n  )\n}\n\nexport default AuthButton\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n  setPassword: (password: string) => void\n}\n\nconst AuthPasswordField: React.SFC<AuthPasswordFieldProps> = ({\n  setPassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      setPassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-password' error={!valid}>\n        Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthPasswordField\n","import React from 'react'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport { useStyles } from './styles'\n\nexport interface AuthLayoutProps {\n  title: string\n  children: any\n}\n\nconst AuthLayout: React.SFC<AuthLayoutProps> = ({ title, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Container maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          {title}\n        </Typography>\n        {children}\n      </div>\n    </Container>\n  )\n}\n\nexport default AuthLayout\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nexport interface AuthPhoneFieldProps {\n  setPhoneNumber: (phoneNumber: string) => void\n}\n\nconst AuthPhoneField: React.SFC<AuthPhoneFieldProps> = ({ setPhoneNumber }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (phoneNumber: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(phoneNumber)\n      console.log(\"phone\",phoneNumber);\n      setValid(isValid)\n      setHint(\n        isValid ? '' : phoneNumber.length > 0 ? 'Invalid phone number.' : 'Enter phoneNumber.'\n      )\n      setPhoneNumber(isValid ? phoneNumber : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='phoneNumber'\n      label='Phone Number'\n      name='phoneNumber'\n      autoComplete='phoneNumber'\n      helperText={hint}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\">+1</InputAdornment>,\n      }}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthPhoneField\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthSignInProps {}\n\nconst AuthSignIn: React.SFC<AuthSignInProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && password))\n  }, [phoneNumber, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .signIn(phoneNumber, password)\n      .then(data => {\n        console.log('sign in success!')\n      })\n      .catch(err => {\n        if(\"User is not confirmed.\" === err){\n          setError(\"Your account is not confirmed. Confirm your account by clicking the confirm sign up link above\")\n          return\n        }else if(\"User does not exist.\" === err) {\n          setError(\"This account does not exist. Please signup using the sign up link above.\")\n        }else {\n          setError(err);\n        }\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Sign In'>\n      <AuthLayout title='Sign In'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthButton disabled={disable}>Sign In</AuthButton>\n          <Grid container>\n            <Grid item xs={5} className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/resetpassword')}\n                variant='body2'>\n                Forget Password\n              </Link>\n            </Grid>\n            <Grid item xs={4} className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup/confirmemail')}\n                variant='body2'>\n                {'Confirm Sign Up'}\n              </Link>\n            </Grid>\n            <Grid item  xs={3}className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup')}\n                variant='body2'>\n                Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignIn\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setEmail: (email: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setEmail }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (email: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)\n      setValid(isValid)\n      setHint(\n        isValid ? '' : email.length > 0 ? 'Invalid email.' : 'Enter email.'\n      )\n      setEmail(isValid ? email : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='email'\n      label='Email Address'\n      name='email'\n      autoComplete='email'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n    authpass: string;\n    setRePassword: (rePassword: string) => void\n}\n\nconst AuthReEnterPasswordField: React.SFC<AuthPasswordFieldProps> = ({ authpass,\nsetRePassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      if(authpass !== password){\n        setValid(false)\n        setHint('Password mismatch');\n      }\n      setRePassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-re-password' error={!valid}>\n        Re Enter Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-re-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthReEnterPasswordField\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { AuthContext } from './auth-context'\nimport AuthLayout from './components/AuthLayout'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthReEnterPasswordField from './components/AuthReEnterPasswordField'\nimport AuthPhoneField from './components/AuthPhoneField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthButton from './components/AuthButton'\nimport { useStyles } from './components/styles'\n\nexport interface AuthSignUpProps {}\n\nconst AuthSignUp: React.SFC<AuthSignUpProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [rePassword, setRePassword] = useState<string>('')\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n\n\n  const [radio, setRadio] = React.useState('');\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRadio((event.target as HTMLInputElement).value);\n  };\n\n  useEffect(() => {\n    setDisable(!(email && password && phoneNumber && radio))\n    if(password !== rePassword)\n{\n  setDisable(true)\n}\n  }, [email, password, rePassword, phoneNumber, radio])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault();\n    const formattedPhone = phoneNumber.replace( /^\\D+/g, '');\n    authContext\n      .signUp(email, password, formattedPhone, radio)\n      .then(data => {\n        history.push('/auth/signup/confirm', formattedPhone)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='Sign Up'>\n      <AuthLayout title='Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthEmailField setEmail={email => setEmail(email)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthReEnterPasswordField authpass={password} setRePassword={rePassword => setRePassword(rePassword)} />\n\n\n          <FormControl  className={classes.form}  component=\"fieldset\">\n      <FormLabel component=\"legend\">Account Type</FormLabel>\n      <RadioGroup row aria-label=\"position\"  value={radio} onChange={handleRadioChange}>\n      <FormControlLabel value=\"Customer\" control={<Radio />} label=\"Customer\" />\n          <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Service Provider\" />\n      </RadioGroup>\n    </FormControl>\n\n\n          <AuthButton disabled={disable}>Sign Up</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth')}\n                variant='body2'>\n                {'Sign In'}\n              </Link>\n            </Grid>\n            <Grid item className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup/confirmemail')}\n                variant='body2'>\n                {'Confirm Sign Up'}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignUp\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setCode: (code: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setCode }) => {\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (code: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = code.length === 6\n      setHint(isValid ? '' : 'Incorrect code length.')\n      setCode(isValid ? code : '')\n      delay = null\n    }, 300)\n  }\n\n  return (\n    <TextField\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='confirmation'\n      label='Confirmation Code'\n      name='confirmation'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const phoneNumber = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!code)\n  }, [code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthConfirmSignUpEmailProps {}\n\nconst AuthConfirmSignUpEmail: React.SFC<AuthConfirmSignUpEmailProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && code))\n  }, [phoneNumber, code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUpEmail\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from './auth-context'\nimport Layout from '../app/AppLayout'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthResetProps {}\n\nconst AuthReset: React.SFC<AuthResetProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [error, setError] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [email, setEmail] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!phoneNumber)\n  }, [phoneNumber])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .resetPassword(phoneNumber)\n      .then(data => {\n        console.log('response', data, phoneNumber)\n        history.push('/auth/resetpassword/confirm', phoneNumber)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Reset Password'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthButton disabled={disable}>Reset</AuthButton>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthReset\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [password, setPassword] = useState<string>('')\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const email = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!(code && password))\n  }, [code, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmResetPassword(email, password, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(email)\n      .then(data => {\n        setMessage('Code resent to your email.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Reset'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useContext, useEffect } from 'react'\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nimport { AuthContext } from './auth-context'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport ConfirmSignUp from './ConfirmSignUp'\nimport ConfirmSignUpEmail from './ConfirmSignUpEmail'\nimport ResetPassword from './ResetPassword'\nimport ConfirmResetPassword from './ConfirmResetPassword'\n\nexport interface AuthProps {}\n\nconst Auth: React.SFC<AuthProps> = () => {\n  const authContext = useContext(AuthContext)\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('authenticated?', authContext.isAuthenticated())\n    if (authContext.isAuthenticated()) {\n      history.push('/')\n    }\n  }, [])\n\n  authContext.isAuthenticated() && history.push('/')\n\n  const routes = authContext.isAuthenticated() ? null : (\n    <Switch>\n      <Route exact path='/auth' component={SignIn} />\n      <Route exact path='/auth/signup' component={SignUp} />\n      <Route exact path='/auth/signup/confirm' component={ConfirmSignUp} />\n      <Route\n        exact\n        path='/auth/signup/confirmemail'\n        component={ConfirmSignUpEmail}\n      />\n      <Route exact path='/auth/resetpassword' component={ResetPassword} />\n      <Route\n        exact\n        path='/auth/resetpassword/confirm'\n        component={ConfirmResetPassword}\n      />\n    </Switch>\n  )\n\n  return <React.Fragment>{routes}</React.Fragment>\n}\n\nexport default Auth\n","import React, { useRef } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng, GeocodeResult } from 'use-places-autocomplete';\n//import useOnclickOutside from 'react-cool-onclickoutside';\nimport TextField from '@material-ui/core/TextField';\n\n interface LocationSearchProps {\n    googleAddressReturn: (value: GeocodeResult) => void;\n    label: string;\n  }\n  \n    const LocationSearchInput: React.SFC<LocationSearchProps> = (props) => {        \n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: { /* Define search scope here */ },\n    debounce: 500\n  });\n   const ref = useRef();\n//   useOnclickOutside(ref, () => {\n//     // When user clicks outside of the component, we can dismiss\n//     // the searched suggestions by calling this method\n//     clearSuggestions();\n//   });\n\n  const handleInput = (e: any) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  // @ts-ignore\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter as \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then(results => \n        {\n            console.log(results);\n            const { lat, lng } =  results[0].geometry.location\n            console.log('📍 Coordinates: ', results[0].geometry.location);\n\n            results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            return getLatLng(results[0]).then(({ lat, lng }) => {\n                console.log('📍 getLatLng: ', results);\n\n                results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            })\n            \n        })\n      .catch(error => {\n        console.log('😱 Error: ', error)\n      });\n\n  };\n\n  const renderSuggestions = () =>\n    data.map(suggestion => {\n      const {\n        id,\n        structured_formatting: { main_text, secondary_text }\n      } = suggestion;\n\n      return (\n        <li\n          key={id}\n          onClick={handleSelect(suggestion)}\n        >\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div>\n\n    <TextField\n            required\n            label={props.label}\n            fullWidth\n            disabled={!ready}\n            onChange={handleInput}\n            value={value}\n            autoComplete=\"billing address-level2\"\n          />\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n      {status === 'OK' && <ul>{renderSuggestions()}</ul>}\n    </div>\n  );\n};\n\nexport default LocationSearchInput;","import { GeocoderResult} from './model';\n\nexport const stripAddress = (result : GeocoderResult[] ) => {\n\n    var address_components = [\n        {\n           \"long_name\" : \"924\",\n           \"short_name\" : \"924\",\n           \"types\" : [ \"street_number\" ]\n        },\n        {\n           \"long_name\" : \"Players Court\",\n           \"short_name\" : \"Players Ct\",\n           \"types\" : [ \"route\" ]\n        },\n        {\n           \"long_name\" : \"Players Club of Brentwood\",\n           \"short_name\" : \"Players Club of Brentwood\",\n           \"types\" : [ \"neighborhood\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Nashville\",\n           \"short_name\" : \"Nashville\",\n           \"types\" : [ \"locality\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Davidson County\",\n           \"short_name\" : \"Davidson County\",\n           \"types\" : [ \"administrative_area_level_2\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Tennessee\",\n           \"short_name\" : \"TN\",\n           \"types\" : [ \"administrative_area_level_1\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"United States\",\n           \"short_name\" : \"US\",\n           \"types\" : [ \"country\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"37211\",\n           \"short_name\" : \"37211\",\n           \"types\" : [ \"postal_code\" ]\n        }\n     ]\n     \n     address_components= result[0].address_components;\n    const street_number =  address_components.filter(ll => {\n     if(ll.types.includes(\"street_number\")){\n           return true;\n     }\n     return false;\n     });\n     \n    const route= address_components.filter(ll => {\n     if(ll.types.includes(\"route\")){\n        return true;\n  }\n  return false;\n  });\n\n  const postal_code= address_components.filter(ll => {\n    if(ll.types.includes(\"postal_code\")){\n       return true;\n }\n return false;\n });\n\n const country= address_components.filter(ll => {\n    if(ll.types.includes(\"country\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_1= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_1\")){\n       return true;\n }\n return false;\n });\n\n const locality= address_components.filter(ll => {\n    if(ll.types.includes(\"locality\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_2= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_2\")){\n       return true;\n }\n return false;\n });\n\n\n     let address = {\n        address1 : street_number[0] ? street_number[0].long_name: ''+' '+\n        route[0]? route[0].long_name: '',\n        city : locality[0] ? locality[0].long_name : '',\n        county : administrative_area_level_2[0].long_name,\n        state:  administrative_area_level_1[0].long_name,\n        country : country[0].long_name,\n        zip : postal_code[0].long_name,\n       latitudes: result[0].latitudes,\n       longitudes :  result[0].longitudes,\n       formatted_address:  result[0].formatted_address\n      }\n     console.log('address',address);\n     return address;\n}","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport { GeocoderResult} from './model';\nimport LocationSearchInput from './LocationSearchInput';\nimport {stripAddress} from './util';\nimport ImageUploader from 'react-images-upload';\nimport {handleImageUpload, getImages, TVBackdrop} from '../utils';\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport interface AddressFormProps {\n  address: string;\n  nextButton: (value: string) => void\n}\n\n  const AddressForm: React.SFC<AddressFormProps> = (props) => {\n    const authContext = React.useContext(AuthContext)\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nconst handleNext = async() => {\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n\n  if( props.address){\n    const address = JSON.parse(props.address)\n    const valuessss = {...values, pictures: address.pictures, phoneNumber: phone_number, email: email}\n    props.nextButton(JSON.stringify(valuessss));\n\n  }else {\n    setLoaded(true)\n\n    console.log(\"value\",values, pictures);\n    if(pictures.length >0){\n     const S3path = await handleImageUpload(pictures); \n     console.log(\"S3path\",S3path);\n     const valuessss = {...values, pictures: JSON.stringify(S3path),\n      phoneNumber: phone_number, email: email\n    }\n     props.nextButton(JSON.stringify(valuessss));\n    }else {\n     // props.nextButton(JSON.stringify(values));\n     // setLoaded(false)\n     setError(\"picture missing\");\n    }\n    setLoaded(false)\n  }\n}\n\nReact.useEffect(() => {\n\n  const fetchData = async (inputimages: string) => {\n    const address = JSON.parse(inputimages)\n\n    let picture = null;\n    if(address.pictures){\n      const files = JSON.parse(address.pictures);\n      picture = await getImages(files);\n      console.log(\"images\", picture);\n    }\n   \n    setValues({...address, pictures: picture});\n    setLoaded(false)\n  };\n\n  if(props.address){\n    setLoaded(true)\n    fetchData(props.address);\n  } \n\n}, [props.address]);\n\n\n const [values, setValues] = useState({firstName: '', lastName: '',middelName: '',address1: '', address2: '',\n city: '', state: '',zip: '', country: '',county: '', latitudes: '', longitudes: '', aboutme: \"\", pictures: \"\"})\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {firstName, lastName, address1, city, zip, country, aboutme} = values\n    setDisable(!(firstName &&  lastName && address1 &&  city &&  zip &&  country && aboutme))\n  }, [values ])\n\n  const resultGoogle = (result: GeocoderResult[]) => {\n    console.log(\"address\",result);\n    const value = stripAddress(result);\n    setValues({...values, ...value})\n  };\n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  // onload\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  //error\n  const [error, setError] = useState<string>('')\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n      Your Information\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.firstName}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"middelName\"\n            name=\"middelName\"\n            label=\"Middel Name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.middelName}\n            autoComplete=\"middelName\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.lastName}\n            autoComplete=\"lname\"\n          />\n        </Grid>\n\n      {\n         values.address1.length < 2 ? ( \n          <Grid item xs={12} sm={6}>\n            <LocationSearchInput label= \"Enter your Home address\" googleAddressReturn={resultGoogle}\n         />\n          </Grid>\n        ):\n        <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address1}\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address2}\n            autoComplete=\"billing address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.city}\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\"\n                      onChange={handleInputChange}\n                      value={values.state}\n          fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.zip}\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.country}\n            autoComplete=\"billing country\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"aboutme\"\n          name=\"aboutme\"\n          label=\"About Me\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.aboutme}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n\n{\n  values.pictures ?\n  <img\n  style={{width:'300px', height:'300px'}}\n  src={ values.pictures}\n/>\n  \n  :\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n      maxFileSize={5242880}\n    />\n           \n}\n</Grid>\n\n        \n         </Grid>\n        }\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={handleNext}>next</Button>\n\n</Grid>\n\n<TVBackdrop open={loaded}/>\n<Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm\n","import React, { useState, useEffect, useCallback } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '../common/Snackbar'\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst currencies = [\n    {\n      value: 'Paypal',\n      label: 'Paypal',\n    },\n    {\n      value: 'Venmo',\n      label: 'Venmo',\n    }\n  ];\n\nexport interface PaymentFormProps {\n  payment: string;\n  nextButton: (value: string) => void\n  backButton: () => void\n}\n\nconst EmployeeBackgroundCheck: React.SFC<PaymentFormProps> = (props) => {\n\n  const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name ==\"secondaryPaymentType\" || name ==\"dob\" || name ==\"secondaryPayment\"){\n      setValues({...values, [name]: value})\n    }else {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }\n\n    const {routingNumber, bankAccountNumber, ssn, reroutingNumber, rebankAccountNumber} = values\n    if( name ==\"reroutingNumber\" && value.length > 0){\n     if( value != routingNumber){\n      setErrorA({...errorA, [name]: value})\n    }}else {\n      setErrorA({...errorA, [name]: ''})\n    }\n\n    if( name ==\"rebankAccountNumber\" && value.length > 0){\n      if(value != bankAccountNumber){\n        setErrorA({...errorA, [name]: value})\n      }else {\n        setErrorA({...errorA, [name]: ''})\n      }\n    }\n\n    if( name ==\"ssn\" && value.length > 0){\n      if( value.length === 9){\n        setErrorA({...errorA, [name]: ''})\n      }else {\n        setErrorA({...errorA, [name]: value})\n      }\n    }\n\n    if( name ==\"secondaryPayment\" && value.length > 0){\n      const re = /\\S+@\\S+\\.\\S+/;\n      if (re.test(e.target.value)) {\n        setErrorA({...errorA, [name]: ''})\n      }else {\n        setErrorA({...errorA, [name]: value})\n      }\n    }\n\n}\n\nconst [errorA, setErrorA] = useState({routingNumber: undefined, bankAccountNumber: '',ssn: '',\nbackgroundcheck: false,  secondaryPayment: '', secondaryPaymentType: '',dob: '',\nreroutingNumber: '', rebankAccountNumber: ''\n})\n\nconst handleNext = () => {\n    const {routingNumber, bankAccountNumber, ssn, reroutingNumber, rebankAccountNumber} = values\n    if(reroutingNumber !== routingNumber){\n        setError(\"Routing number mismattched\")\n        setDisable(true)\n        return\n    }\n    if(bankAccountNumber !== rebankAccountNumber){\n        setError(\"Account number mismattched\")\n        setDisable(true)\n        return\n    }\n\n    if(ssn.length < 2){\n      setError(\"SSN Number missing\")\n      setDisable(true)\n      return\n  }\n\n     console.log(\"value\",values);\n     props.nextButton(JSON.stringify(values));\n}\n\nuseEffect(() => {\n  if(props.payment) setValues(JSON.parse(props.payment))\n}, [props.payment]);\n\n const [values, setValues] = useState({routingNumber: '', bankAccountNumber: '',ssn: '',\n  backgroundcheck: false,  secondaryPayment: '', secondaryPaymentType: '',dob: '',\n  reroutingNumber: '', rebankAccountNumber: ''\n})\n\nconst [error, setError] = useState<string>('')\n\nconst setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {routingNumber, bankAccountNumber, ssn} = values;\n    (routingNumber &&  bankAccountNumber && ssn ) ?  setDisable(false) :  setDisable(true)\n\n}, [values ]);\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"routingNumber\" name=\"routingNumber\"  label=\"Routing Number\"     \n                  onChange={handleInputChange}\n            value={values.routingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"reroutingNumber\" name=\"reroutingNumber\"  label=\"Reenter Routing Number\"     \n                  onChange={handleInputChange}\n                  error = {errorA.reroutingNumber.length > 1 ? true : undefined}\n                  helperText = {errorA.reroutingNumber.length > 1 ? 'Routing number mismatch' : undefined}\n            value={values.reroutingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"bankAccountNumber\"  name=\"bankAccountNumber\" label=\"Bank Account Number\"\n                         onChange={handleInputChange}\n                         value={values.bankAccountNumber} \n          fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"rebankAccountNumber\" name=\"rebankAccountNumber\" \n          label=\"Reenter Bank Account Number\" fullWidth\n          onChange={handleInputChange}\n          value={values.rebankAccountNumber} \n          error = {errorA.rebankAccountNumber.length > 1 ? true : undefined}\n          helperText = {errorA.rebankAccountNumber.length > 1 ? 'Bank Account Number mismatached' : undefined}\n          />\n        </Grid>\n        <Divider />\n\n        <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n        SSN Number for Background Check\n        </Typography>\n          <TextField\n            required\n            id=\"ssn\"\n            name=\"ssn\"\n            label=\"Enter SSN for background Check\"\n            error = {errorA.ssn.length > 1 ? true : undefined}\n            helperText = {errorA.ssn.length > 1 ? 'SSN should 9 digits' : undefined}\n            fullWidth\n            onChange={handleInputChange}\n            value={values.ssn} \n          />\n        </Grid>\n\n        {/* <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"dob\"\n            name=\"dob\"\n            label=\"Enter Your Date of Birth\"\n            helperText=\"Enter your date of birthday\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.dob} \n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid> */}\n        <Grid item xs={12} md={6}>\n        <label >Enter Your Date of Birth:</label>\n        <input\n    type=\"date\"\n    className=\"input-group-field\"\n    name=\"dob\"\n    id=\"dob\"\n    max={new Date().toISOString().slice(0,10)}\n    value={values.dob} \n    onChange={handleInputChange}\n    />\n</Grid>\n        <Divider />\n\n        <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n        Secondary Payment Method\n        </Typography>\n        <TextField\n          id=\"secondaryPaymentType\"\n        name=\"secondaryPaymentType\"\n            label=\"SecondPaymentType\"\n          select\n          value={values.secondaryPaymentType}\n          onChange={handleInputChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select your currency\"\n          variant=\"outlined\"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"secondaryPayment\"\n            name=\"secondaryPayment\"\n            label=\"Enter Your Email for Secondary Payment\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.secondaryPayment} \n            error = {errorA.secondaryPayment.length > 1 ? true : undefined}\n            helperText = {errorA.secondaryPayment.length > 1 ? 'Email Id in wrong format' : undefined}\n          />\n        </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled= {disable} \n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n      </Grid>\n\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n\n    </React.Fragment>\n  );\n}\n\nexport default EmployeeBackgroundCheck\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Themer from './AppThemer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './AppHeader'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport Container from '@material-ui/core/Container'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar';\nimport { startConvoWithUser} from '../../src/ticket/util';\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles(theme  =>\n  createStyles({\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '90vh'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n\n    stickToBottom: {\n      //width: '100%',\n     // position: 'fixed',\n    //  bottom: 0,\n    },\n    main: {\n      flexGrow: 1,\n      display: 'flex',\n      //alignItems: 'center',\n      minHeight: '90vh',\n      paddingLeft: 10,\n      paddingRight: 10,\n      paddingTop: 5\n    },\n    rootB: {\n    },\n  })\n)\n\nexport interface HomeLayoutProps {\n  title: string,\n  children: any,\n  header?: string\n}\n\nconst HomeLayout: React.SFC<HomeLayoutProps> = ({ title, children, header }) => {\n  useEffect(() => {\n    document.title = title\n  })\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n\n  const classes = useStyles()\n  const [value, setValue] = React.useState('home');\n\n  const handleChange = (event: any, newValue: any) => {\n    console.log(\"newValue\", newValue);\n    setValue(newValue);\n    if(newValue == 'account'){\n      history.push('/checkout')\n    }else if(newValue == 'home'){\n      history.push('/')\n\n      const chatWithExpert = async() => {\n        const currentId = authContext.userId;\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        let emp = false;\n        if(type != \"Customer\"){\n          emp = true;\n        }\n      //   const otherId = data.ticketEmployeeId;\n      //  const conv = await startConvoWithUser(data.ticketUserId, otherId, setIsEmployee );\n  \n      //  history.push({\n      //   pathname: '/chat',\n      //   state: { conversation: conv, user: currentId  }\n      // });\n  \n      }\n\n    }else if(newValue == 'service'){\n      history.push('/service')\n    }\n  };\n\n  return (\n    <Themer>\n       <React.Fragment>\n      <CssBaseline />\n      <Header header= {header}/>\n\n        <main>\n        <div className={classes.appBarSpacer} />\n\n      <Paper square className={classes.paper}>\n        <Container className={classes.main}>{children}\n        </Container>\n\n      </Paper>\n\n      </main >\n\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <BottomNavigation value={value} onChange={handleChange} className={classes.stickToBottom}>\n      <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n      <BottomNavigationAction label=\"support\" value=\"support\" icon={<ContactPhoneIcon />} />\n      <BottomNavigationAction label=\"Account\" value=\"account\" icon={<AccountCircleIcon />} />\n\n    </BottomNavigation>\n      </AppBar>\n    </React.Fragment>\n\n      \n      \n\n    </Themer>\n  )\n}\n\nexport default HomeLayout\n","import gql from 'graphql-tag'\n\nexport const createConvo = gql`\n  mutation CreateConvo($input: CreateConversationInput!) {\n    createConvo(input: $input) {\n      id\n      name\n      createdAt\n      associated {\n        items {\n          convoLinkUserId\n          user {\n            id\n            username\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createTicket = gql`\n  mutation CreateTicket($input: CreateTicketInput!) {\n    createTicket(input: $input) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      closedComment\n    }\n  }\n`\nexport const updateTicket = gql`\n    mutation UpdateTicket($input: UpdateTicketInput!\n      ) {\n      updateTicket(\n        input: $input\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n  `\n\nexport const assignExpertToTicket = gql`\n    mutation UpdateTicket($id: ID!, $ticketEmployeeId: ID!, $ticketEmployeeInfo: String) {\n      updateTicket(\n        input: {\n          id: $id\n          ticketEmployeeId: $ticketEmployeeId\n          ticketEmployeeInfo: $ticketEmployeeInfo\n          status: \"assinged\"\n        }\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n    }\n  }\n`\n\nexport const createMessage = gql`\n  mutation CreateMessage($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const registerFullUser = gql`\n  mutation RegisterFullUser($input: CreateUserInput!) {\n    registerFullUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployeeUser = gql`\n  mutation registerEmployeeUser($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateUser = gql`\n  mutation UpdateUser($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerUser = gql`\n  mutation RegisterUser($input: CreateUserInput!) {\n    registerUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const registerFullEmployee = gql`\n  mutation RegisterFullEmployee($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateEmployee = gql`\n  mutation UpdateEmployee($input: UpdateEmployeeInput!) {\n    updateEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployee = gql`\n  mutation RegisterEmployee($input: CreateUserInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createConvoLink = gql`\n  mutation createConvoLink($input: CreateConvoLinkInput!) {\n    createConvoLink(input: $input) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const updateConvoLink = gql`\n  mutation updateConvoLink($id: ID!) {\n    updateConvoLink(input: { id: $id, status: \"READY\" }) {\n      id\n      name\n      convoLinkUserId\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const getUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      county\n      avatar\n      cardInfo\n      active\n      userTickets {\n        items {\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n          employee{\n            username\n            address\n            avatar\n            aboutme\n            address\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const getEmployee = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      county\n      avatar\n      active\n      employeeTickets {\n        items {\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n        }\n      }\n    }\n  }\n`\n\nexport const getFullUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getFullEmployee = gql`\n  query GetFullEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getConvo = gql`\n  query GetConvo($id: ID!, $nextToken: String) {\n    getConvo(id: $id) {\n      id\n      messages(sortDirection: DESC, limit: 20, nextToken: $nextToken) {\n        nextToken\n        items {\n          id\n          content\n          createdAt\n          owner\n          chatbot\n          isSent\n          file\n          messageConversationId\n        }\n      }\n    }\n  }\n`\n\nexport const searchMessages = gql`\n  query SearchMessages(\n    $filter: SearchableMessageFilterInput\n    $sort: SearchableMessageSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchMessages(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        content\n        createdAt\n        owner\n        chatbot\n        isSent\n        file {\n          bucket\n          region\n          key\n        }\n        messageConversationId\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchUsers = gql`\n  query SearchUsers(\n    $filter: SearchableUserFilterInput\n    $sort: SearchableUserSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchUsers(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        username\n        registered\n        userConversations {\n          items {\n            id\n            name\n            status\n            convoLinkUserId\n          }\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchConvoLinks = gql`\n  query SearchConvoLinks(\n    $filter: SearchableConvoLinkFilterInput\n    $sort: SearchableConvoLinkSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchConvoLinks(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        status\n        convoLinkUserId\n        user {\n          id\n          username\n          registered\n        }\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\n\nexport const getOpenTicket = gql`\nquery getOpenTicket($status: String!, $county: String! ) {\n  jobsByStatus(county: $county,  status: {\n    eq: $status\n  }) \n   {\n      items {\n        id\n        content\n        time\n        destination\n        price\n        title\n        county\n        source\n        status\n        ownerUploadImages\n        employeeUploadImages\n      }\n    nextToken\n   }\n}\n`\n\n\n\nexport const getUserConversations = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      avatar\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                  avatar\n                }\n                convoLinkEmployeeId\n                employee {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const getEmployeeConversations = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      avatar\n      employeeConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                  avatar\n                }\n                convoLinkEmployeeId\n                employee {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import { API} from 'aws-amplify'\n\nexport const  createCustomer=  async(email: string, phoneNumber: string) =>{\n    let myInit = { \n        response: true,\n        body: {\n            email: email,\n            phone: phoneNumber\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response =  await API.post(\"stripeapi\", \"/stripe/createcustomer\",myInit);\n    console.log(\"setupIntents\", response);\n\n    return {\n        customerId: response.data.url.id,\n        customerKey: response.data.intent.client_secret\n    }\n}\n\nexport const  payment =  async(customerId: string, money: string) =>{\n    let myInit1 = { // OPTIONAL\n        response: true,\n        body: {\n            customerId: customerId,\n            money: money\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response1 =  await API.post(\"stripeapi\", \"/stripe/createpayment\",myInit1);\n    console.log(\"setupIntents\", response1);\n    \n}","\nimport React from 'react';\nimport {useStripe, useElements} from '@stripe/react-stripe-js';\nimport {\n    CardNumberElement,\n    CardCvcElement,\n    CardExpiryElement\n  } from \"@stripe/react-stripe-js\";\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { createCustomer} from '../../utils/Stripe';\nimport { AuthContext } from '../../auth/auth-context'\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '../../common/Snackbar'\nimport {TVBackdrop} from '../../utils';\n\nimport './SplitForm.css'\n\n\nconst useOptions = () => {\n    const fontSize = \"16px\";\n    const options = React.useMemo(\n      () => ({\n        style: {\n          base: {\n            fontSize,\n            color: \"#424770\",\n            letterSpacing: \"0.025em\",\n            fontFamily: \"Source Code Pro, monospace\",\n            \"::placeholder\": {\n              color: \"#aab7c4\"\n            }\n          },\n          invalid: {\n            color: \"#9e2146\"\n          }\n        }\n      }),\n      [fontSize]\n    );\n  \n    return options;\n  };\n\n  const useStyles = makeStyles(theme => ({\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\n  \n  export interface CardSetupFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n  \nconst CardSetupForm: React.SFC<CardSetupFormProps> = (props) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const classes = useStyles();\n  const authContext = React.useContext(AuthContext)\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    //if(props.payment) setValues(JSON.parse(props.payment))\n  }, [props.payment]);\n\n  const handleSubmit = async (event: any) => {\n\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    if (values.name.length < 2) {\n        setError(\"Enter Name\")\n\n        return;\n      }\n      setLoaded(true)\n\n    const phone = authContext.user.attributes[\"phone_number\"];\n    const email = authContext.user.attributes[\"email\"];\n\n    const keys = await createCustomer(email, phone);\n\n    //@ts-ignore\n    const result = await stripe.confirmCardSetup(keys.customerKey, {\n      payment_method: {\n           //@ts-ignore\n           card: elements.getElement(CardNumberElement),\n           billing_details: {\n          name: values.name,\n        },\n      }\n    });\n\n    if (result.error) {\n        setError(result.error.message)\n\n        console.log(\"esult.setupIntent.payment_method\", result);\n\n      // Display result.error.message in your UI.\n    } else {\n        console.log(\"esult.setupIntent.payment_method\", result.setupIntent);\n      // The setup has succeeded. Display a success message and send\n      // result.setupIntent.payment_method to your server to save the\n      // card to a Customer\n      setLoaded(false)\n\n      props.nextButton(JSON.stringify({\n        ...keys,\n        name:values.name\n       // card: elements.getElement(CardNumberElement)\n    }));\n\n    }\n\n \n  };\n  const options = useOptions();\n  const [error, setError] = React.useState<string>('')\n  const [values, setValues] = React.useState({cardNumber: '', expiry: '',cvc: '', name: ''})\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n  \n  return (\n         <form onSubmit={handleSubmit}>\n             { !props.payment\n          ? \n            <Grid container spacing={1}>\n\n            <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={(e: any) => {\n                const {value} = e.target\n                setValues({...values, name: value});\n              }}            \n            value={values.name}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n\n              <label>\n        Card number\n        <CardNumberElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            // const {value} = event.target;\n            // setValues({...values, name: value});\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        Expiration date\n        <CardExpiryElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        CVC\n        <CardCvcElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled={!stripe}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n              <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        </Grid>\n: \n<Grid\ncontainer\ndirection=\"row\"\njustify=\"center\"\nalignItems=\"center\"\n>\n<div> you already have payment details in your account. if you want update details contact@travtrail.com </div>\n</Grid>\n}\n<TVBackdrop open={loaded}/>\n\n    </form>   \n  );\n}\n\nexport default  CardSetupForm;","import React from 'react';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nimport CheckoutForm from './CardSetupForm';\n\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\"pk_test_n28At7VrrTS32nAdaH5oyTo100BjZFd5oo\");\n\nexport interface PaymentFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n\n  \nconst Stripe: React.SFC<PaymentFormProps> = (props) => {\n\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm address={props.address} payment={props.payment} nextButton= {props.nextButton} backButton= {props.backButton}/>\n    </Elements>\n  );\n}\n\nexport default  Stripe;","import React, { useEffect, useCallback, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport EmployeeBackgroundCheck from './EmployeeBackgroundCheck';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { registerUser, updateUser, registerFullEmployee, updateEmployee } from '../graphql/mutations'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport {  getFullUser, getFullEmployee } from '../graphql/queries'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Stripe from './Stripe/Stripe';\n\nimport Snackbar from '../common/Snackbar'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport interface CheckoutProps {}\n\nconst Checkout: React.SFC<CheckoutProps> = () => {\n    const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [address, setAddress] = React.useState(\"\");\n  const [payment, setPayment] = React.useState(\"\");\n  const [error, setError] = useState<string>('')\n  const [isCreate, setisCreate] = useState<boolean>(true)\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n  const [isEmp, setisEmp] = useState<boolean>(false)\n  const [backdrop, setBackdrop] = React.useState(false);\n\n  const steps = ['Your Information', 'Payment details'];\n\n  const navigator_utl = () =>{\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        if(Object.keys(position).length > 0){\n          // setlatitudes(position.coords.latitude.toString());\n          // setlongitudes(position.coords.longitude.toString());\n        }else {\n          setError(\"longitude and latitude missing\")\n        }\n      },\n      error => {\n        setError(error.message)\n      },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n  }\n\n// useEffect(() => {\n//   navigator_utl();\n// }, []);\n\n\nuseEffect(() => {\n  if(authContext && authContext.userId && authContext.user ){\n\n    const type = authContext.user.attributes[\"custom:account_type\"];\n    type ===\"Customer\" ? setisEmp(false) : setisEmp(true)\n  \n    const op =  type ===\"Customer\" ? getFullUser : getFullEmployee;    \n\n    const id = authContext.userId;\n  //\"37ff912b-27ac-4e5d-87e5-a4edaad80213\";\n  (async function anyNameFunction() {\n    const commentData = await API.graphql(graphqlOperation(op, { id }))\n    console.log('fetchDate',commentData); \n\n    if( type ===\"Customer\"){\n    //@ts-ignore\n    if(commentData.data.getUser){\n      setisCreate(false);\n    //@ts-ignore\n    setAddress(commentData.data.getUser.address)\n        //@ts-ignore\n    setPayment(commentData.data.getUser.cardInfo)\n    }\n    }else {\n          //@ts-ignore\n    if(commentData.data.getEmployee){\n      setisCreate(false);\n    //@ts-ignore\n    setAddress(commentData.data.getEmployee.address)\n        //@ts-ignore\n    setPayment(commentData.data.getEmployee.cardInfo)\n    }\n\n    }\n\n   })();\n  }\n  \n}, [authContext.userId]);\n\n\n\n  const updateProfile = async(paymentV: string) =>{\n\n    setBackdrop(true)\n    const id = authContext.userId;\n    const type = authContext.user.attributes[\"custom:account_type\"];\n\n    const op =  type ===\"Customer\" ? (isCreate?  registerUser: updateUser) :\n       (isCreate?  registerFullEmployee: updateEmployee)\n       \n     // isCreate ? registerUser : updateUser\n    const response =  await API.graphql(\n      graphqlOperation(op, { input: {\n        id : id,\n        username : JSON.parse(address).firstName,\n        registered : \"yes\",\n        active : \"no\",\n        address : address,\n        zipcode : JSON.parse(address).zip,\n        latitudes: JSON.parse(address).latitudes,\n        longitudes :  JSON.parse(address).longitudes,\n        aboutme: JSON.parse(address).aboutme,\n        avatar: JSON.parse(address).pictures,\n        cardInfo :  paymentV,\n        county: JSON.parse(address).county\n      } })\n  );\n  console.log(\"response\", response);\n  setBackdrop(false);\n\n  history.push('/');\n\n\n  }\n\nconst nextButton = async(value: string) => {\n  console.log(\"nextButton\", value);\n  if(activeStep == 0){\n    setAddress(value);\n  }else if(activeStep == 1)\n  {\n    setPayment(value);\n    updateProfile(value);\n    return;\n  }\n  handleNext();\n}\n\n function getStepContent(step: any) {\n\n  switch (step) {\n    case 0:\n      return <AddressForm address={address} nextButton= {nextButton} />;\n    case 1:\n       if(isEmp){\n         return <EmployeeBackgroundCheck payment={payment} nextButton= {nextButton} backButton= {handleBack} />;\n       }else {\n           return <Stripe address={address} payment={payment} nextButton= {nextButton} backButton= {handleBack} />\n       }   \n    // case 2:\n    //   return <Review address={address} payment={payment} nextButton= {updateProfile} backButton= {handleBack}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n\n}\n\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n    <AppHomeLayout title='RA2 Serverless'>\n\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Need Update BackEnd.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n      </AppHomeLayout>\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      <Backdrop className={classes.backdrop} open={backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </React.Fragment>\n  );\n}\n\nexport default Checkout;\n","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\n//import {Ticket} from './model'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\n//@ts-ignore\n//import DateTimePicker from 'react-datetime-picker';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport AppHomeLayout from '../app/AppHomeLayout'\n//import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { createTicket } from '../graphql/mutations'\nimport { useHistory } from 'react-router-dom'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport { AuthContext } from '../auth/auth-context'\nimport ImageUploader from 'react-images-upload';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {handleImageUpload} from '../utils/S3Handler';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  time:{\n    display: 'block',\n    margin: '10px 0 5px 0',\n    padding: '10px 14px'\n  },\n  date:{\n    display: 'block',\n    boxShadow: 'rgba(50, 50, 93, 0.14902) 0px 1px 3px,rgba(0, 0, 0, 0.0196078) 0px 1px 0px',\n    margin: '10px 0 5px 0',\n    padding: '10px 14px',\n    fontFamily: 'Roboto,sans-serif',\n    fontWeight: 400,\n    fontSize: 16,\n    lineHeight: 1.43\n  }\n}));\n\nexport interface AddressFormProps {\n  nextButton: (value: string) => void\n}\n\n  const CreateTicket: React.SFC<AddressFormProps> = (props) => {\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name == \"price\"){\n      const re = /^([1-9]{0,2}((.)[0-9]{0,2}))$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }else {\n      setValues({...values, [name]: value})\n\n    }\n}\nconst history = useHistory()\nconst authContext = React.useContext(AuthContext)\n\n\nconst createNewTicket = async() =>{\n  console.log(\"createNewTicket\", values);\n  const id = authContext.userId;\n\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n  const ticketUserInfo = JSON.stringify({\n    email: email,\n    phoneNumber: phone_number\n  });\n  let S3path: any[] = [];\n  if(pictures.length > 0){\n     S3path = await handleImageUpload(pictures); \n  }\n\n  const newId= uuid();\n  //const county = \"Davidson County\";\n\n  const response =  await API.graphql(\n    graphqlOperation(createTicket, { input: {\n      id: newId,\n      countAndId: `${values.county}_${newId}`,\n      price : values.price,\n      time : values.time,\n      daytime: values.daytime,\n      title : values.title,\n      content:  values.content ,\n      destination : values.destination? values.destination: values.source,\n      source : values.source ?? \"Davidson County\" ,\n      county: values.county,\n      ownerUploadImages : JSON.stringify(S3path),\n      ticketUserId: id,\n      status: 'open',\n      ticketUserInfo: ticketUserInfo\n    } })\n);\nconsole.log(\"response\", response);\n\nhistory.push('/')\n\n}\nconst sourceGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, source: value.formatted_address, county: value.county})\n};\n\nconst destGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, destination: value.formatted_address})\n};\n\n const [values, setValues] = useState({ content: '',price: '', title: '',\n source: '', destination: '',time: \"\", county: '', daytime: '', terms: false })\n\n const [dayTime, setDayTime] = useState({ hour: '',min: '', non: ''});\n\n const handleDayTimeChange = (e: any) => {\n  const {name, value} = e.target\n  console.log(\"handleDayTimeChange\",name, value);\n\n    setDayTime({...dayTime, [name]: value})\n}\n\nuseEffect(() => {\n  setValues({...values, [\"daytime\"]: `${dayTime.hour}:${dayTime.min}:${dayTime.non}`})\n}, [dayTime ]);\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {content, title, price,  time, terms} = values\n    const {hour, min, non} = dayTime\n    setDisable(!(content &&  title && price  &&  time && hour &&  min && non && terms))\n  }, [values ]);\n\n  //const [terms, setTerms] = useState<boolean>(false)\n  const [destAddress, setDestAddress] = useState<boolean>(false)\n\n  const handleCheckedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {name, checked} = event.target\n    if(name === \"destAddress\"){\n      checked? setDestAddress(true) : setDestAddress(false)\n    }else {\n      checked? setValues({...values, \"terms\": true})\n      : setValues({...values, \"terms\": false})\n    }\n  };\n  \n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n  const [key, setKey] = useState<any>({});\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  return (\n    <React.Fragment>\n          <AppHomeLayout title='RA2 Serverless'>\n          <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n\n      <Typography variant=\"h6\" gutterBottom >\n      Job Details\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <LocationSearchInput label = \"Start Location\" googleAddressReturn={sourceGoogle}\n         />\n          </Grid>\n\n          <Grid item xs={12}>\n\n<FormControlLabel\ncontrol={\n<Tooltip title=\"Delete\">\n\n<Checkbox\nchecked={destAddress}\nonChange={handleCheckedChange}\nname=\"destAddress\"\ncolor=\"primary\"\n/>\n</Tooltip>\n\n}\nlabel=\"Do you have different End Location\"\n/>\n</Grid>\n\n         {\ndestAddress?\n<Grid item xs={12} sm={6}>\n          <LocationSearchInput label = \"Destination/End Location\" googleAddressReturn={destGoogle}\n         />\n          </Grid> : null\n         } \n\n        <Grid item xs={5}>\n        {/* <DateTimePicker\n           name= \"Job Date\"\n          onChange={onChange}\n          value={values.time}\n        /> */}\n<label >Date:</label>\n        <input\n    type=\"date\"\n    className={classes.date}\n    name=\"time\"\n    id=\"time\"\n    min={new Date().toISOString().slice(0,10)}\n    value={values.time} \n    onChange={handleInputChange}\n    />\n\n        </Grid>\n\n        <Grid  item xs={7}>\n        <label >Time:</label>\n        <span className={classes.time}>\n        <FormControl required>\n        <Select\n          native\n         value={dayTime.hour}\n         onChange={handleDayTimeChange}\n          name=\"hour\"\n          id=\"hour\"\n          inputProps={{\n            id: 'hour-native-required',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={1}>1</option>\n          <option value={2}>2</option>\n          <option value={3}>3</option>\n          <option value={4}>4</option>\n          <option value={5}>5</option>\n          <option value={6}>6</option>\n          <option value={7}>7</option>\n          <option value={8}>8</option>\n          <option value={9}>9</option>\n          <option value={10}>10</option>\n          <option value={11}>11</option>\n          <option value={12}>12</option>\n        </Select>\n      </FormControl>\n\n        <FormControl required>\n        <Select\n          native\n          value={dayTime.min}\n          onChange={handleDayTimeChange}\n           name=\"min\"\n           id=\"min\"\n          inputProps={{\n            id: 'min-native-required',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={\"00\"}>00</option>\n          <option value={\"15\"}>15</option>\n          <option value={\"30\"}>30</option>\n          <option value={\"45\"}>45</option>\n        </Select>\n      </FormControl>\n      <FormControl required>\n        <Select\n          native\n          value={dayTime.non}\n          onChange={handleDayTimeChange}\n           name=\"non\"\n           id=\"non\"\n          inputProps={{\n            id: 'non-native-required',\n          }}\n        >\n          <option aria-label=\"None\" value=\"\" />\n          <option value={\"AM\"}>AM</option>\n          <option value={\"PM\"}>PM</option>\n        </Select>\n      </FormControl>\n      </span>\n        </Grid>\n\n\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n      maxFileSize={5242880}\n    />\n            </Grid>\n            <Grid item xs={12}>\n\n            <FormControlLabel\n        control={\n          <Tooltip title=\"Delete\">\n\n          <Checkbox\n            checked={values.terms}\n            onChange={handleCheckedChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n          </Tooltip>\n\n        }\n        label=\"Terms of Service\"\n      />\n            </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={createNewTicket}>Create Request</Button>\n\n</Grid>\n      </Grid>\n\n      </Paper>\n      </main>\n\n      </AppHomeLayout>\n    </React.Fragment>\n  );\n}\n\nexport default CreateTicket\n","import gql from 'graphql-tag'\n\nexport const onCreateMessage = gql`\n  subscription OnCreateMessage($messageConversationId: ID!) {\n    onCreateMessage(messageConversationId: $messageConversationId) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const onCreateTicket = gql`\n  subscription OnCreateTicket($county: String!) {\n    onCreateTicket(county: $county) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n`\n\nexport const onUpdatedTicket = gql`\n  subscription OnUpdatedTicket($county: String!) {\n    onUpdatedTicket(county: $county) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n`\n\nexport const onUpdateConvoLink = gql`\n  subscription OnUpdateConvoLink($convoLinkUserId: ID, $status: String) {\n    onUpdateConvoLink(convoLinkUserId: $convoLinkUserId, status: $status) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { DialogTitle } from '../utils/DialogTitle';\nimport Rating, { IconContainerProps } from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst customIcons: { [index: string]: { icon: React.ReactElement; label: string } } = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: 'Very Dissatisfied',\n  },\n  2: {\n    icon: <SentimentDissatisfiedIcon />,\n    label: 'Dissatisfied',\n  },\n  3: {\n    icon: <SentimentSatisfiedIcon />,\n    label: 'Neutral',\n  },\n  4: {\n    icon: <SentimentSatisfiedAltIcon />,\n    label: 'Satisfied',\n  },\n  5: {\n    icon: <SentimentVerySatisfiedIcon />,\n    label: 'Very Satisfied',\n  },\n};\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n})(Rating);\n\nfunction IconContainer(props: IconContainerProps) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\ninterface AlertDialogProps {\n    openPop: boolean;\n    type: string\n    closeAlert: (op: boolean, data: string) => void;\n  }\n\n const AlertDialog: React.SFC<AlertDialogProps> = ({ openPop,type,  closeAlert}) => {\n\n    const [disable, setDisable] = React.useState<boolean>(true)\n    const [textValue, setTextValue] =  React.useState<string>(\"\");\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setTextValue(value)\n    if(textValue && textValue.length > 0){\n        setDisable(false)\n    }\n}\n\nconst handleOperation = () => {\n    closeAlert(true, textValue);\n  };\n\n  const handleClose = () => {\n    closeAlert(false, \"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        keepMounted\n        fullWidth ={true}\n        maxWidth=\"lg\"\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n          {\n              type == \"closed\" ?(< div>\n              <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} > Close Ticket</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                Do you want close ticket? <br></br>\n                Reasons for cancellation.\n                </DialogContentText>\n                <TextField\n          multiline\n          rows=\"4\"\n          required\n          id=\"content\"\n          autoFocus\n          name=\"content\"\n          label=\"Close ticket\"\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Rating</Typography>\n        <Rating\n          name=\"Rating\"\n          defaultValue={2}\n          getLabelText={(value: number) => customIcons[value].label}\n          IconContainerComponent={IconContainer}\n        />\n      </Box>\n\n              </DialogContent>\n              <DialogActions>\n                <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"secondary\">\n                  Close Ticket\n                </Button>\n              </DialogActions> </div>) : \n\n              (< div>\n                <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} >{type}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                {type== \"completed\" ? \"Completed\" : \"Unassign\"} comments .\n                </DialogContentText>\n            <TextField\n          multiline\n          rows=\"6\"\n          required\n          autoFocus\n          id=\"content\"\n          name=\"content\"\n          label={type== \"completed\" ? \"Completed\" : \"Unassign\"}\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n\n\n                </DialogContent>\n                <DialogActions>\n                  <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"primary\">\n                  {type== \"completed\" ? \"Completed\" : \"Unassign\"}\n                  </Button>\n                </DialogActions> </div>)\n\n          }\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialog;","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages, Employee } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  employee: Employee;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ExpertViewer: React.SFC<AcceptProps> = ({employee, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n  const [emp, setEmp] = React.useState<Employee>();\n\n  React.useEffect(() => {\n\n\n  }, [authContext.userId]);  \n\n  React.useEffect(() => {\n    const fetchData = async (phone: string) => {\n        const address = JSON.parse(employee.address)\n        setEmp({\n            ...employee,\n            phoneNumber: phone,\n            username : `${address.firstName} ${address.lastName}`\n        })\n        if(employee.avatar){\n            const files = JSON.parse(employee.avatar);\n            const result = await getImages(files);\n            console.log(\"images\", result);\n            //@ts-ignore\n            setImages(result);\n        }\n\n    };\n    const id = authContext.userId;\n    if(id){\n       const phone =  authContext.user.attributes[\"phone_number\"];\n        fetchData(phone);\n    }\n  }, [authContext.userId]);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return (\n      <Dialog\n        open={openPop}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Service Provider Details</DialogTitle>\n        <div className={classes.container}>\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n           disabled = {true}\n            required\n            id=\"username\"\n            name=\"username\"\n            label=\"UserName\"\n            fullWidth\n            defaultValue={emp?.username}\n            autoComplete=\"username\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {true}\n\n            required\n            id=\"aboutme\"\n            name=\"aboutme\"\n            label=\"About Me\"\n            fullWidth\n            defaultValue={emp?.aboutme}\n            autoComplete=\"aboutme\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n             disabled = {true}\n\n            required\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone Number\"\n            fullWidth\n            defaultValue={emp?.phoneNumber}\n            autoComplete=\"phoneNumber\"\n          />\n        </Grid>\n\n        </Grid>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog>\n  );\n}\n\nexport default ExpertViewer;","import { API, graphqlOperation } from 'aws-amplify'\nimport { getConvo, getUserConversations, getEmployeeConversations } from '../graphql/queries'\n\nimport {\n  createConvo,\n  createConvoLink,\n  updateConvoLink\n} from '../graphql/mutations';\n\nexport const launchNewConversation = async(userId : string, expertid: string) => {\n    try {\n      const id = userId;\n      const chat =  {  name: 'direct' };\n  \n      const conversation = await API.graphql(graphqlOperation(createConvo, { input: chat }))\n      console.log(\"conversation\", conversation);\n  \n      // const otherChatName = chatName(me.username)\n      // const myChatName = chatName(user.username)\n      // @ts-ignore \n      const owner = {convoLinkUserId: id, convoLinkConversationId: conversation.data.createConvo.id , \n        status: \"CREATING\", name: 'chat'};\n      // @ts-ignore \n      const service = {convoLinkEmployeeId: expertid , convoLinkConversationId: conversation.data.createConvo.id, \n        status: \"CREATING\", name: 'chat'};\n  \n      const ownerConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: owner }));\n      const serviceConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: service }));\n      \n          // @ts-ignore \n      const ownerConvLinkConf = ownerConvLink.data.createConvoLink.id;\n          // @ts-ignore \n      const serviceConvLinkConf = serviceConvLink.data.createConvoLink.id\n  \n     const mm =  await API.graphql(graphqlOperation(updateConvoLink, {id : ownerConvLinkConf}));\n     console.log(' mm next steps', mm)\n     const xy =  await API.graphql(graphqlOperation(updateConvoLink, {id : serviceConvLinkConf}));\n  \n     console.log(' xy next steps', xy)\n\n      // const links = await Promise.all([\n      //   linkNewConversation(createConvo.id, user.id, otherChatName),\n      //   linkNewConversation(createConvo.id, me.id, myChatName)\n      // ])\n      // console.log('next steps', links)\n      // const promises = links.map(c => this.updateToReadyConversation(c))\n      // const convoLinks = await Promise.all(promises)\n  \n  \n      console.log('item created!',conversation)\n    } catch (err) {\n      console.log('error creating talk...', err)\n    }\n  }\n\n  export const findConverationWithUser = async(ticketUserId : string, expertId: string, setIsEmployee: boolean) => {\n    console.log('findConverationWithUser', ticketUserId, expertId, setIsEmployee)\n\n    const op =  setIsEmployee ? getEmployeeConversations :getUserConversations;\n    const id =  setIsEmployee ? expertId :ticketUserId;\n\n    const commentData = await API.graphql(graphqlOperation(op, { id }))\n    console.log('fetchDate',commentData); \n\n    if(setIsEmployee){\n\n              //@ts-ignore\n    if(commentData.data.getEmployee &&  commentData.data.getEmployee.employeeConversations.items.length > 0){\n      //@ts-ignore\nconst convoLinks = commentData.data.getEmployee.employeeConversations.items as any;\n\nconst convoLink = convoLinks.find((c :any) => {\nconst {\nconversation: { associated: { items: assoc = [] } = {} } = {}\n} = c\nreturn assoc.some((a :any)=> a.convoLinkUserId === ticketUserId)\n})\n\nreturn convoLink\n? {\nconversation: convoLink.conversation,\nconversationName: convoLink.name\n}\n: null\n}\n\n    }else {\n              //@ts-ignore\n    if(commentData.data.getUser &&  commentData.data.getUser.userConversations.items.length > 0){\n      //@ts-ignore\nconst convoLinks = commentData.data.getUser.userConversations.items as any;\n\nconst convoLink = convoLinks.find((c :any) => {\nconst {\nconversation: { associated: { items: assoc = [] } = {} } = {}\n} = c\nreturn assoc.some((a :any)=> a.convoLinkEmployeeId === expertId)\n})\n\nreturn convoLink\n? {\nconversation: convoLink.conversation,\nconversationName: convoLink.name\n}\n: null\n}\n\n    }\n\n    return null;\n  }\n\n\n  export const startConvoWithUser = async (userId: string, expertId: string, setIsEmployee: boolean) => {\n    let conversationInfo = await findConverationWithUser(userId, expertId, setIsEmployee);\n    console.log('existing conv', conversationInfo)\n\n    if (!conversationInfo) {\n      console.log('no convo, launch new')\n       await launchNewConversation(userId, expertId )\n    }\n    return conversationInfo\n\n  }\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {Ticket} from './model';\nimport { assignExpertToTicket, updateTicket } from '../graphql/mutations'\nimport { API, graphqlOperation} from 'aws-amplify'\nimport { AuthContext } from '../auth/auth-context'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport { DialogTitle } from '../utils/DialogTitle';\nimport AlertDialog from './AlertDialog';\nimport ImageViewer from '../utils/ImageViewer';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ExpertViewer from '../utils/ExpertViewer';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { startConvoWithUser} from './util';\nimport { useHistory } from 'react-router-dom'\n\n\ninterface AcceptProps {\n  openPop: boolean;\n  close: (op: boolean, updateTicket: Ticket) => void;\n  data: Ticket;\n  setIsEmployee : boolean\n}\n\n\nconst AcceptTicket: React.SFC<AcceptProps> = ({data, openPop, close, setIsEmployee}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [formEdit, setFormEdit] = React.useState(true);\n  const history = useHistory()\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nReact.useEffect(() => {\n  if(data.id){\n    setValues(data)\n  }\n  setclosedComment(data.closedComment)\n}, [data]);\n\n\nconst [closedComment, setclosedComment] = React.useState(\"\");\n\nconst [values, setValues] = React.useState({ content: '',price: '', title: '',\nsource: '', destination: '',time: \"\", county: ''})\n\n\n  const acceptTicket = async() =>{\n\n    // accept Job by employee\n    if(setIsEmployee){\n      const authid = authContext.userId;\n\n      const phone_number = authContext.user.attributes[\"phone_number\"];\n      const  email = authContext.user.attributes[\"email\"];\n      const ticketEmployeeInfo = JSON.stringify({\n        email: email,\n        phoneNumber: phone_number,\n      });\n\n      const response =  await API.graphql(\n        graphqlOperation(assignExpertToTicket, {\n          id: data.id,\n          ticketEmployeeId: authid,\n          ticketEmployeeInfo: ticketEmployeeInfo\n        } )\n    );\n    console.log(\"accept ticket by employee\", response);\n    close(true, {...data, status: \"assinged\", ticketEmployeeId: authid });\n    }// make form editable\n    else if(formEdit) {\n      setFormEdit(false)\n\n    }// updated ticket by customer\n    else if(formEdit == false){\n      const response =  await API.graphql(\n        graphqlOperation(updateTicket, { input: {\n          id: data.id,\n          price : values.price,\n          time : values.time,\n          title : values.title,\n          content:  values.content ,\n          county: values.county,\n          destination : values.destination  ??  \"sfsfsf\" ,\n          source : values.source  ?? \"sfsfsf\",\n        } }\n        \n        )\n    );\n    console.log(\"update ticke4t info\", {...data , ...values});\n    close(true, {...data , ...values});\n    }\n  \n}\n\nconst closeTicket = () => {\n setAlertType(\"closed\")\n setOpenAlert(true)\n};\n\nconst completeTicket = () => {\n  setAlertType(\"completed\")\n  setOpenAlert(true)\n };\n \n const unassignTicket = () => {\n  setAlertType(\"unassign\")\n  setOpenAlert(true)\n };\n\n\n  const handleClose = () => {\n    close(false,data);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n\n  // second alert options\n\n  const [openAlert, setOpenAlert] = React.useState(false)\n  const [alertType, setAlertType] = React.useState(\"\")\n\n  const closeAlert = async(op: boolean, comments: string) => {\n\n    if(op == true ){\n      if ( alertType == \"unassign\"){\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n            status: \"open\",\n            ticketEmployeeId: null,\n            ticketEmployeeInfo: null\n          } }\n          )\n        );\n      console.log(\"unassign close\", response);\n      close(true, {...data , ...values, status: \"open\"});\n  \n      } // completed or closed\n      else {\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n          status: alertType,\n          closedComment: comments,\n          closedTime: new Date().toUTCString()\n          } }\n          )\n        );\n      console.log(\"update ticke4t to close\", response);\n      close(true, {...data , ...values, status: alertType});\n      }\n  \n    }else {\n      setOpenAlert(false)\n    }\n \n  };\n\n  // imageViewer\n  const [openUserImage, setOpenUserImage] = React.useState(false)\n\n  const imageListen = async() => {\n    setOpenUserImage(true);\n  }\n\n  const closeAttachment =(op: boolean) =>{\n    setOpenUserImage(false);\n  }\n\n\n    // expertView\n    const [openExpert, setExpert] = React.useState(false)\n\n    const expertShow = async() => {\n      setExpert(true);\n    }\n  \n    const closeExpertShow =(op: boolean) =>{\n      setExpert(false);\n    }\n\n    const chatWithExpert = async() => {\n      const currentId = authContext.userId;\n      const otherId = data.ticketEmployeeId;\n     const conv = await startConvoWithUser(data.ticketUserId, otherId, setIsEmployee );\n\n     history.push({\n      pathname: '/chat',\n      state: { conversation: conv, user: currentId  }\n    });\n\n    }\n    \n    const sourceGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, source: value.formatted_address})\n    };\n    \n    const destGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, destination: value.formatted_address, county: value.county})\n    };\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Job Details</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {formEdit}\n\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {formEdit}\n\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"source\" googleAddressReturn={sourceGoogle}\n    />\n  ): \n  <TextField label = \"source\" \n  name=\"source\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.source}\n/>\n}\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"destination\" googleAddressReturn={destGoogle}\n    />\n  ): \n  <TextField label = \"destination\" \n  name=\"destination\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.destination}\n/>\n}\n          </Grid>\n\n        <Grid item xs={12}>\n        {\n  formEdit == false? (\n    <TextField\nrequired\nid=\"time\"\nname=\"time\"\nlabel=\"time\"\ntype=\"datetime-local\"\nfullWidth\nonChange={handleInputChange}\nvalue={values.time}\nInputLabelProps={{\nshrink: true,\n}}\n/>\n  ): \n  <TextField label = \"time\" \n  name=\"time\"\n  fullWidth\n  disabled = {true}\n  defaultValue={values.time}\n/>\n}\n\n\n        </Grid>\n        <Grid item xs={12}>\n        <TextField\n          disabled = {formEdit}\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n        <Grid item xs={12} \n          container direction=\"row\"\n        >\n        {\n          data.ticketEmployeeId ?\n          \n         ( <div>\n           <Chip\n        icon={<FaceIcon />}\n        label=\"Expert Info\"\n        clickable\n        color=\"primary\"\n        onClick={expertShow}\n        deleteIcon={<DoneIcon />}/>\n\n        <Chip\n        icon={<FaceIcon />}\n        label=\"Start Chat\"\n        clickable\n        color=\"primary\"\n        onClick={chatWithExpert}\n        deleteIcon={<ChatIcon />}/>\n\n         </div>\n         )\n        : null\n        }\n        { data.ownerUploadImages && JSON.parse(data.ownerUploadImages).length >0 ?\n              <Chip\n              label=\"See Attachments\"\n              clickable\n              color=\"primary\"\n              onClick={imageListen}\n              deleteIcon={<AttachmentIcon />}\n\n            />  : null\n        }\n        </Grid> \n\n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? \n          <Grid item xs={12}>\n          <TextField\n            disabled = {formEdit}\n            multiline\n            rows=\"3\"\n            required\n            id=\"closedComment\"\n            name=\"closedComment\"\n            label=\"closedComment\"\n            fullWidth\n            value={closedComment}\n            autoComplete=\"content\"\n          />\n          </Grid>\n          : null}      \n\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n</Grid>\n      </Grid>\n        </DialogContent>\n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? null :\n        <DialogActions>\n        { setIsEmployee == false?     \n          \n          <Button variant=\"contained\" onClick={closeTicket} >\n            Close Ticket\n          </Button> :\n            null}\n\n         { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={unassignTicket} color=\"secondary\">\n            Unassign\n          </Button> :\n            null}\n\n          { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={completeTicket} color=\"primary\">\n            Complete Job\n          </Button> :\n            null}\n\n\n          {\n            data.status == \"open\"  ?\n          <Button onClick={acceptTicket}  variant=\"contained\" color=\"primary\">\n          { setIsEmployee ? \"Accept\" :  formEdit == false ?\"Update\" : \"Edit\"}\n        </Button> : null\n          }\n          {\n            data.status == \"assinged\" && setIsEmployee == false ?\n          <Button onClick={acceptTicket}  variant=\"contained\" color=\"primary\">\n          Edit\n        </Button> : null\n          }\n        </DialogActions> \n        }\n      </Dialog>\n      {openAlert? <AlertDialog  type={alertType} openPop={openAlert} closeAlert={closeAlert}/> : null}\n      {openUserImage? <ImageViewer  inputimages={data.ownerUploadImages} openPop={openUserImage} closeAlert={closeAttachment}/> : null}\n      {openExpert? <ExpertViewer  employee={data.employee} openPop={openExpert} closeAlert={closeExpertShow}/> : null}\n\n    </div>\n  );\n}\n\nexport default AcceptTicket;","import React, { useEffect, useCallback, useState } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { AuthContext } from '../auth/auth-context'\nimport { onCreateTicket, onUpdatedTicket } from '../graphql/subscriptions'\nimport {Ticket} from './model';\nimport { getOpenTicket, getEmployee, getUser } from '../graphql/queries';\nimport AcceptTicket from '../ticket/ResponsiveDialog';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom'\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport AuthSignIn from '../auth/SignIn';\nimport Snackbar from '../common/Snackbar'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    subHeader: {\n        color: \"rgba(0, 0, 0, 0.98)\",\n        fontSize: 18,\n        fontWeight: 900,\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        fontWeight: 900,\n        backgroundColor: \"rgba(0, 0, 0, 0.18)\",\n        width: 50,\n        marginBottom: 8,\n        marginTop: 8,\n        marginLeft: 5,\n        borderRadius: 5,\n        paddingLeft: 5,\n        color: \"black !important\"\n    },\n    absolute: {\n      position: 'absolute',\n      bottom: theme.spacing(9),\n      right: theme.spacing(4),\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n    chipTop: {\n      marginTop: 10,\n    }\n  }),\n);\n\nexport default function TicketList() {\n  const classes = useStyles();\n  const [cartValue, setCartValue] = React.useState({});\n  const authContext = React.useContext(AuthContext)\n  const [openErrands, setOpenErrands] = React.useState<Ticket[]>([]);\n  const [ownerrands, setOwnerrands] = React.useState<Ticket[]>([]);\n  const [completedJob, setCompletedJob] = React.useState<Ticket[]>([]);\n\n  const [isAuth, setIsAuth] = React.useState<boolean>(false);\n  const history = useHistory()\n\n\n  useEffect(() => {\n    if(authContext && authContext.userId ){\n      setIsAuth(true)\n    }\n  }, [authContext.userId]);\n\n  \n  const handleListClick = (e: any) => {\n    console.log(\"button click\", e);\n    setSelectedItem(e);\n    setOpenBuy(true)\n}\n\nconst [openBuy, setOpenBuy] = React.useState(false);\n\n// @ts-ignore\nconst [selectedItem, setSelectedItem] = React.useState<Ticket>({});\n\n\nconst [isEmployee, setIsEmployee] = React.useState(false);\n\nconst createJob = () => {\n\n  console.log(\"createJob\", user);\n  if(user?.cardInfo){\n    console.log(\"createJob\");\n    history.push('/createticket')\n  }else {\n    setError(\"You need to update your profile and payment details before you can request for services\")\n  }\n};\n\n// create initial state\nconst initialState = {\n  errand: ''\n}\n\nconst [state, dispatch] = React.useReducer(reducer, initialState)\n\nconst [user, setUser] = React.useState<any>();\nconst [error, setError] = useState<string>('')\n\nconst setErrorMsg = useCallback((message: string) => {\n  setError(message)\n}, [])\n\n// update reducer\nfunction reducer(state: any, action: any) {\n  switch(action.type) {\n    case 'ADDNEWJOB':\n      {\n        const errand = action.errand;\n\n        openErrands.push(errand);\n        // create new object\n        const updated =  JSON.parse(JSON.stringify(openErrands));\n        setOpenErrands(updated);\n        return state;\n\n      }\n    case 'EXPERTUPDATE':\n{\n  const errand = action.errand;\n  // if job open details updated so updated local\n  if(errand.status == \"open\"){\n    console.log(\"updated\", openErrands);\n\n    openErrands.forEach((element, index) => {\n      if(element.id === errand.id) {\n        openErrands[index] = errand;\n      }\n  });\n\n  console.log(\"updated\", openErrands);\n\n  const updated =  JSON.parse(JSON.stringify(openErrands));\n    setOpenErrands(updated)\n\n\n  } // job moved from open to another state so remove from it\n  else {\n    var filtered = openErrands.filter(function(el) { return el.id != errand.id; }); \n    setOpenErrands(filtered);\n  }\n  return state\n\n}    \n    case 'USERUPDATE':{\n      const errand = action.errand;\n               if(errand.status != \"closed\" && errand.status != \"completed\"){\n                      // if job open details updated so updated local\n          for (var i = 0; i < ownerrands.length; i++) {\n            if(ownerrands[i].id === errand.id && ownerrands[i].status ) {\n              ownerrands[i] = errand;\n              const updated =  JSON.parse(JSON.stringify(ownerrands));\n              setOwnerrands(updated)\n              return state\n\n            }\n          }\n\n        }\n        return state;\n    }\n    default:\n      return state\n  }\n}\n\n\nconst closeAcceptButton = (op: boolean, updateTicket: Ticket) => {\n  setOpenBuy(false)\n\n  if(op){\n    if(isEmployee){\n\n      if(updateTicket.status == \"assinged\"){\n        var filtered = openErrands.filter(function(el) { return el.id != selectedItem.id; }); \n        ownerrands.push(updateTicket);\n        setOwnerrands(ownerrands)\n        setOpenErrands(filtered);\n      }// unassign so remove from queue\n      else if (updateTicket.status == \"open\"){\n        var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n        setOwnerrands(filtered);\n\n        openErrands.push(updateTicket);\n        setOpenErrands(openErrands);\n\n      }// ticket completed\n      else if (updateTicket.status == \"completed\"){\n        var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n        setOwnerrands(filtered)\n        completedJob.push(updateTicket);\n        setCompletedJob(completedJob)\n      }\n\n    }else {\n\n      // customer closed ticket\n     if( updateTicket.status == \"closed\"){\n\n      var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n      completedJob.push(selectedItem);\n      setCompletedJob(completedJob)\n      setOwnerrands(filtered);\n\n     } // customer updated ticket\n     else {\n       console.log(\"updateTicket\", updateTicket);\n      ownerrands.forEach((element, index) => {\n        if(element.id === updateTicket.id) {\n          ownerrands[index] = updateTicket;\n        }\n    });\n    // const updated =  JSON.parse(JSON.stringify(ownerrands));\n    // console.log(\"updated\", updated, ownerrands);\n      setOwnerrands(ownerrands)\n     }\n\n    }\n  }\n};\n\n\n  useEffect(() => {\n    let unsubscribe;\n\n    const id = authContext.userId;\n    if(id){\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        (async function anyNameFunction() {\n\n            if(type != \"Customer\"){\n\n              setIsEmployee(true)\n\n              const acceptedJobs = await API.graphql(graphqlOperation(getEmployee, { id }))\n              let getuser ;\n              console.log(\"acceptedJobs\", acceptedJobs);\n                  //@ts-ignore\n              if(acceptedJobs.data.getEmployee){\n                 //@ts-ignore\n                 getuser = acceptedJobs.data.getEmployee;\n                setUser(getuser);\n              }\n                  //@ts-ignore\n              if(acceptedJobs.data.getEmployee &&  acceptedJobs.data.getEmployee.employeeTickets.items.length > 0){\n                                  //@ts-ignore\n                  const openErrands = acceptedJobs.data.getEmployee.employeeTickets.items as Ticket[];\n    \n                  console.log(\"acceptedJobs\", openErrands);\n\n                  var filtered = openErrands.filter(function(el) { return (el.status != \"closed\" && el.status != \"completed\") }); \n                  var closed = openErrands.filter(function(el) { return (el.status == \"closed\" || el.status == \"completed\") }); \n\n                  setOwnerrands(filtered)\n                  setCompletedJob(closed)\n              }\n              console.log(\"user\", getuser);\n\n            if(getuser?.active){\n\n              const commentData = await API.graphql(graphqlOperation(getOpenTicket, { status: \"open\", county: \"Davidson County\" }))\n              //@ts-ignore\n          if(commentData.data.jobsByStatus &&  commentData.data.jobsByStatus.items.length > 0){\n                              //@ts-ignore\n              const openErrands = commentData.data.jobsByStatus.items as Ticket[];\n              //@ts-ignore\n              setOpenErrands(openErrands)\n          }\n\n                  // @ts-ignore\n    const createdSub = API.graphql(graphqlOperation(onCreateTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n            \n            const errand = todoData.value.data.onCreateTicket;\n            console.log(\"onCreateTicket\", errand);\n            dispatch({ type: 'ADDNEWJOB', errand  })\n          }\n        });\n\n\n                              // @ts-ignore\n    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n      const errand = todoData.value.data.onUpdatedTicket;\n      console.log(\"onUpdatedTicket\", errand);\n      dispatch({ type: 'EXPERTUPDATE', errand  })\n\n    }\n  });\n\n        unsubscribe = () => {\n          createdSub.unsubscribe();\n          updatedsubscription.unsubscribe();\n\n          };\n\n            }\n                   \n               }else {\n                const commentData = await API.graphql(graphqlOperation(getUser, { id }))\n                console.log('fetchDate',commentData); \n\n                let getuser ;\n                    //@ts-ignore\n                if(commentData.data.getUser){\n                   //@ts-ignore\n                   getuser = commentData.data.getUser;\n                  setUser(getuser);\n                }\n\n                    //@ts-ignore\n                if(commentData.data.getUser &&  commentData.data.getUser.userTickets.items.length > 0){\n                                    //@ts-ignore\n                    const errands = commentData.data.getUser.userTickets.items as Ticket[];\n                    console.log(\"openErrands\", errands);\n                    var filtered = errands.filter(function(el) { return (el.status != \"closed\" && el.status != \"completed\") }); \n                    var closed = errands.filter(function(el) { return (el.status == \"closed\" || el.status == \"completed\") }); \n\n                    setOwnerrands(filtered)\n                    setCompletedJob(closed)\n\n                                                                \t\t\t// @ts-ignore\n\t\t    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n          const errand = todoData.value.data.onUpdatedTicket;\n          dispatch({ type: 'USERUPDATE', errand  })\n\n        }\n        });\n        \n                }\n      }\n          \n          \n           })();\n    }\n    return unsubscribe;\n\n  }, [authContext.userId]);  \n\n\n\n\n  return (\n     !(authContext && authContext.userId) ?  <AuthSignIn/>:\n    (<AppHomeLayout title='RA2 Serverless' header = { Object.keys(cartValue).length > 0? \"cart\": undefined}>\n<Grid\n  container\n  direction=\"column\"\n>\n{\n  isEmployee ? \n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            Open Jobs\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {openErrands.length > 0 ? openErrands.map(item => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              Time : {item.time}{item.daytime}  <br/>   Address : {item.source}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n\n<Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />\n\n\n        {/* <Input  className={classes.cartLabel} value=  {`$ ${item.price}`} disabled  /> */}\n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n:null}\n      <Divider />\n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            {isEmployee ? \"Accepted Jobs \" : \"Created Jobs\"}\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {ownerrands.length > 0 ? ownerrands.map(item => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              Time : {item.time}{item.daytime} <br/>   Address : {item.source}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />  \n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n\n    <Divider />\n\n<List \n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    subheader={\n      <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n        {isEmployee ? \"Completed Jobs \" : \"Closed Jobs\"}\n      </ListSubheader>\n    }\nclassName={classes.root}>\n\n{completedJob.length > 0 ? completedJob.map(item => (\n  <div key={item.id} >\n  <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n  <ListItemText\n    primary= {item.title}\n    secondary={\n      <React.Fragment>\n        <Typography\n          component=\"span\"\n          variant=\"body2\"\n          className={classes.inline}\n          color=\"textPrimary\"\n        >\n          Time : {item.time}{item.daytime}  <br/>   Address : {item.source}\n        </Typography>\n\n\n      </React.Fragment>\n    }\n  />\n\n  <Grid\n  className={classes.buttonGird} \n    container\n    direction=\"row\"\n    justify=\"flex-end\"\n    alignItems=\"flex-end\"\n  >\n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n        deleteIcon={ item.status === \"closed\" ?<CloseIcon /> : <DoneIcon />}\n    />\n\n</Grid>\n\n</ListItem>\n<Divider variant=\"inset\" component=\"li\" />\n\n  </div>  \n)): <div>No Jobs</div>}\n</List>\n\n\n    {openBuy? <AcceptTicket  setIsEmployee={isEmployee} data={selectedItem} openPop={openBuy} close={closeAcceptButton}/> : null}\n    </Grid>\n\n    { isEmployee == false ?<Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"primary\" className={classes.absolute}>\n          <AddIcon onClick={createJob}/>\n        </Fab>\n      </Tooltip> : null\n    }\n\n<Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n\n    </AppHomeLayout>\n    )\n\n  );\n}","import './chat1.css';\nimport React from 'react';\nimport { API, graphqlOperation, Cache } from 'aws-amplify'\nimport { getConvo } from '../graphql/queries'\nimport { message}  from '../utils'\nimport { createMessage } from '../graphql/mutations'\nimport {onCreateMessage} from '../graphql/subscriptions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SendIcon from '@material-ui/icons/Send';\n// @ts-ignore\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport {SelectedConv, getImages, handleImageUpload} from '../utils'\n\n// @ts-ignore\nimport { v4 as uuid } from 'uuid';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\n\n\n/* detect url in a message and add a link tag */\nfunction detectURL(message: any) {\n\tvar urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n\treturn message.replace(urlRegex, function(urlMatch:any) {\n\t\treturn '<a href=\"' + urlMatch + '\">' + urlMatch + '</a>';\n\t})\n}\n\n/* ========== */\n/* Title component */\ntype TitleProp = {\n\towner: string\n\tbackButton: () => void\n  }\nclass Title extends React.Component<TitleProp> {\n\tconstructor(props: any, context: any) {\n\t\tsuper(props, context);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t// <div className={\"chatApp__convTitle\"}>\n\t\t\t// <ArrowBackIcon style={{ paddingRight: 100 }} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t//    Chat</div>\n\n\t\t\t<MuiDialogTitle className={\"chatApp__convTitle_modifed_root\"} disableTypography>\n\t\t\t<ArrowBackIosIcon className={\"chatApp__convTitle_modifed_btn\"} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t<Typography className={\"chatApp__convTitle_modifed_title\"} variant=\"h6\">{this.props.owner ? this.props.owner : 'Chat'}</Typography>\n\t\t  </MuiDialogTitle>\n\t\t);\n\t}\n}\n/* end Title component */\n/* ========== */\n\n/* ========== */\n/* InputMessage component - used to type the message */\nlet uploadFile: any = null;\ntype InputMessageProp = {\n    isLoading: boolean\n    owner: string,\n    ownerAvatar: string,\n    sendMessageLoading: ( message: any)  => void,\n\tsendMessage: ( message: any)  => void,\n\tsenderUsername: string\n  }\n\n\n  type InputMessageState = {\n\tmessageInput: any,\n\tcontent: string,\n\tpopoverOpen: boolean,\n\tfile: any,\n\tfilePreviewSrc: any\n  }\nclass InputMessage extends React.Component<InputMessageProp, InputMessageState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpopoverOpen: false,\n\t\t\tcontent: '',\n\t\t\tmessageInput: '',\n\t\t\tfile: '',\n\t\t\tfilePreviewSrc: ''\n\t\t};\n\t\tthis.handleSendMessage = this.handleSendMessage.bind(this);\n\n\n\n\t}\n\n\tmessageInput: any;\n\n\townerInput: any;\n\townerAvatarInput :any;\n\thandleSendMessage(event: any) {\n\t\tevent.preventDefault();\n\t\t/* Disable sendMessage if the message is empty */\n\t\tif( uploadFile ||this.messageInput.value.length > 0 ) {\n\t\t\tthis.props.sendMessageLoading( this.messageInput.value);\n\t\t\t/* Reset input after send*/\n\t\t\tthis.messageInput.value = '';\n\t\t\tthis.close();\n\t\t}\n\t}\n\t\n\thandleFileChange = (e: any) => {\n\t\tconst file = e.target.files[0]\n\t\tconsole.log(file)\n\t\tif (file && file.type.startsWith('image/')) {\n\t\t  const reader = new FileReader()\n\t\t  const self = this\n\t\t  reader.onload = function(e) {\n\t\t\tself.setState({ popoverOpen: true, filePreviewSrc: this.result })\n\t\t  }\n\t\t  reader.readAsDataURL(file)\n\t\t  this.setState({ file })\n\t\t  uploadFile = file;\n\t\t}\n\t  }\n\n\t  close = () => {\n\t\tthis.setState({ file: undefined, popoverOpen: false })\n\t\tuploadFile = null;\n\t  }\n\t\n\n\trender() {\n\t\tconst { filePreviewSrc } = this.state;\n\t\tconst imgBtnClass ='btn btn-block ' + (this.state.file ? 'btn-success' : 'btn-primary')\n\n\t\t/* If the chatbox state is loading, loading class for display */\n\t\tvar loadingClass = this.props.isLoading ? 'chatApp__convButton--loading' : '';\n\t\tlet sendButtonIcon =     <SendIcon color='action'/>\n\t\t//<i className={\"material-icons\"}>send</i>;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSendMessage}>\n                 <div className={'chatApp__convButtonLeft' + loadingClass}> \n                  {/* <input\n\t\t\t\t      className={'zeroWidth'}\n                      type=\"file\"\n                      onChange={this.handleFileChange}\n\t\t\t\t\t/> */}\n\t\t\t\t\t\n\t\t\t\t\t<input accept=\"image/*\" className={'zeroWidth'} id=\"icon-button-file\" onChange={this.handleFileChange} type=\"file\" />\n      <label className={'fileUploadIcon'} htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" className={'fileUploadIcon'} aria-label=\"upload picture\" component=\"span\">\n          <AttachmentIcon className={'fileUploadIcon'}  />\n        </IconButton>\n      </label>\n\n\t\t\t\t<label className={imgBtnClass} id=\"Popover1\">\n                      <i className=\"fas fa-camera\" />\n                    </label>\n\t\t\t\t    <Popover\n                      placement=\"top-start\"\n                      isOpen={this.state.popoverOpen}\n                      target=\"Popover1\"\n                    >\n                      <PopoverHeader>\n                        <span>Preview</span>\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          aria-label=\"Close\"\n                          onClick={this.close}\n                        >\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </PopoverHeader>\n                      <PopoverBody>\n                        <img\n                          alt=\"previw\"\n                          className=\"msg-image\"\n                          src={filePreviewSrc}\n                        />\n                      </PopoverBody>\n                    </Popover>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={owner => (this.ownerInput = owner)}\n\t\t\t\t\tvalue={this.props.owner}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={ownerAvatar => (this.ownerAvatarInput = ownerAvatar)}\n\t\t\t\t\tvalue={this.props.ownerAvatar}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={message => (this.messageInput = message)}\n\t\t\t\t\tclassName={\"chatApp__convInput\"}\n\t\t\t\t\tplaceholder=\"Text message\"\n\t\t\t\t/>\n\t\t\t\t<div className={'chatApp__convButton ' + loadingClass} onClick={this.handleSendMessage}>\n\t\t\t\t{sendButtonIcon}\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</form>\n\t\t);\n\t}\n}\n/* end InputMessage component */\n/* ========== */\n\n\n/* ========== */\n/* MessageList component - contains all messages */\ntype MessageListProp = {\n    messages: any,\n\towner: string,\n\townerAvatar: string,\n\tsenderAvatar: string\n  }\nclass MessageList extends React.Component<MessageListProp> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__convTimeline\"}>\n\t\t\t{this.props.messages.slice(0).reverse().map(\n\t\t\t\t(messageItem: any) => (\n\t\t\t\t\t<MessageItem\n\t\t\t\t\t\tkey={messageItem.id}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\tsender={messageItem.owner}\n\t\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\t\tsenderAvatar={this.props.senderAvatar}\n\t\t\t\t\t\tmessage={messageItem.content}\n\t\t\t\t\t\tfile={messageItem.file}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageList component */\n/* ========== */\n\n/* ========== */\n/* MessageItem component - composed of a message and the sender's avatar */\ntype MessageItemProp = {\n    owner: string,\n    sender: string\n\tsenderAvatar: string\n\townerAvatar: string\n\tmessage: string,\n\tfile: string;\n  }\n\n  type MessageItemState = {\n\tfileUrl: any,\n\tkey: string\n  }\nclass MessageItem extends React.Component<MessageItemProp, MessageItemState> {\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfileUrl: null,\n\t\t\tkey: \"\"\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any) {\n\t\tconst { file: prevMsg } = prevProps\n\t\tconst { file: nodebugImage } = this.props\n\t\tlet currMsg = null;\n\t\tif(nodebugImage){\n\t\t\tcurrMsg = JSON.parse(nodebugImage);\n\t\t}\n\n\t\tif (\n\t\t  prevMsg &&\n\t\t  prevMsg.key === null &&\n\t\t  currMsg &&\n\t\t  currMsg.key\n\t\t) {\n\t\t  this.checkFileUrl()\n\t\t}\n\t  }\n\n\t  async componentDidMount() {\n\t\tawait this.checkFileUrl()\n\t  }\n\n\t  async checkFileUrl() {\n\t\tconst {file} = this.props;\n\n\t\tif (file) {\n\t\tlet nonFile = JSON.parse(file);\n        const images = Array.isArray(nonFile) ? nonFile[0] : nonFile ;\n\t\t  let fileUrl = Cache.getItem(images.key)\n\t\t  if (fileUrl) {\n\t\t\tthis.setState({ key: images.key })\n\t\t\treturn this.setState({ fileUrl })\n\t\t  }\n\t\n\t\t  fileUrl = await getImages([images]);\n\t\t  const expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t  Cache.setItem(images.key, fileUrl, { expires })\n\t\t  this.setState({ fileUrl })\n\n\t\t//   Storage.get(keyWithoutPrefix, { identityId }).then(fileUrl => {\n\t\t// \tconsole.log(`New url for ${file.key}: ${fileUrl}`)\n\t\t\n\t\t// \tconst expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t// \tCache.setItem(file.key, fileUrl, { expires })\n\t\t// \tthis.setState({ fileUrl })\n\t\t//  })\n\t\t}\n\t  }\n\n\t// \n\t senderAvatar =  this.props.owner == this.props.sender ? this.props.ownerAvatar : this.props.senderAvatar ;\n\trender() {\n\n\t\t/* message position formatting - right if I'm the author */\n\t\tlet messageRight = (( this.props.owner == this.props.sender ) ? 'highlight msg-right' : 'highlight');\n\n\t\tlet messagePosition = (( this.props.owner == this.props.sender ) ? 'chatApp__convMessageItem--right' : 'chatApp__convMessageItem--left');\n\t\treturn (\n\t\t\t<div className={\"chatApp__convMessageItem \" + messagePosition + \" clearfix\"}>\n\t\t\t\t<img src={this.senderAvatar} alt={this.props.sender} className=\"chatApp__convMessageAvatar\" /> \n\t\t\t\t{\n\t\t\t\t\tthis.props.file && this.state.fileUrl? (<div className={messageRight}>\n\t\t\t\t\t<img\n\t\t\t\t\t  alt=\"awesome\"\n\t\t\t\t\t  src={this.state.fileUrl}\n\t\t\t\t\t  className=\"msg-image\"\n\t\t\t\t\t  id=\"ImgPopover\"\n\t\t\t\t\t/>\n\t\t\t\t  </div>):\n\t\t\t\t<div className=\"chatApp__convMessageValue\" dangerouslySetInnerHTML={{__html: this.props.message}}></div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageItem component */\n/* ========== */\n\n/* ========== */\n/* ChatBox component - composed of Title, MessageList, TypingIndicator, InputMessage */\n\ntype ChatBoxProp = {\n    messages: any\n    owner: string,\n\townerAvatar: string,\n\tsenderAvatar: string,\n\tsendMessage: ( message: any) => void;\n\tbackButton: () => void;\n\tsenderUsername : string;\n  }\n\n  type ChatBoxState = {\n    isLoading: boolean\n  }\n\nclass ChatBox extends React.Component<ChatBoxProp, ChatBoxState> {\n\tconstructor(prop: any) {\n\t\tsuper(prop);\n\t\tthis.state = {\n\t\t\tisLoading: false\n\t\t};\n\t\tthis.sendMessageLoading = this.sendMessageLoading.bind(this);\n\t\tvar timeout = null;\n\t}\n\t/* catch the sendMessage signal and update the loading state then continues the sending instruction */\n\tsendMessageLoading( message: any) {\n\t\tthis.setState({ isLoading: true });\n\t\tthis.props.sendMessage( message);\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ isLoading: false });\n\t\t}, 400);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__conv\"}>\n\t\t\t\t<Title\n\t\t\t\t\towner={this.props.senderUsername}\n\t\t\t\t\tbackButton={this.props.backButton}\n\t\t\t\t/>\n\t\t\t\t<MessageList\n\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\tmessages={this.props.messages}\n\t\t\t\t\tsenderAvatar= {this.props.senderAvatar}\n\t\t\t\t/>\n\t\t\t\t<div className={\"chatApp__convSendMessage clearfix\"}>\n\t\t\t\t\t<InputMessage\n\t\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\t\tsendMessage={this.props.sendMessage}\n\t\t\t\t\t\tsendMessageLoading={this.sendMessageLoading}\n\t\t\t\t\t\tsenderUsername={this.props.senderUsername}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatBox component */\n/* ========== */\n\n/* ========== */\n/* ChatRoom component - composed of multiple ChatBoxes */\ntype ChatRoomState = {\n    messages: any\n  }\n  type ChatRoomProps = {\n\tselectedConv: SelectedConv;\n\tbackButton : () => void\n  }\nexport class ChatRoom extends React.Component<ChatRoomProps, ChatRoomState> {\n\tconstructor(props: any) {\n\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [{\n\t\t\t\tid: 1,\n\t\t\t\tsender: 'Shun',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=32',\n\t\t\t\tmessage: 'Hello 👋'\n\t\t\t}\n\t\t\t],\n\t\t};\n\t\tthis.sendMessage = this.sendMessage.bind(this);\n\t}\n\tasync componentDidMount() {\n\t\tconst convId = this.props.selectedConv.convId;\n\t\ttry {\n\t\t\tconst commentData = await API.graphql(graphqlOperation(getConvo, { id: convId}))\n\n\t\t\tconsole.log(\"messages\", commentData);\n\t\t\t//@ts-ignore\n\t\t\tif(commentData.data.getConvo.messages){\n\t\t\t\t//@ts-ignore\n\t\t\t\tconst messages =  commentData.data.getConvo.messages.items as message[];\n\t\t\t\tthis.setState({ messages: messages.reverse() });\n            \n\t\t\t}else {\n\t\t\t\tthis.setState({ messages: [] });\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t    const subscription = API.graphql(graphqlOperation(onCreateMessage, {messageConversationId: convId})).subscribe({next: (todoData) => {\n\t\t\tconst newMessage = todoData.value.data.onCreateMessage;\n\t\t\tconst messages = this.state.messages;\n\t\t\tmessages.push(newMessage);\n\t\t\tthis.setState({ messages: messages });\n\n\t\t  }\n\t\t});\n\t\t  \n\n\t\t} catch (err) {\n\t\t  console.log('error: ', err)\n\t\t}\n\t}\n\n\t/* adds a new message to the chatroom */\n\t// sendMessage( message) {\n\t// \tsetTimeout(() => {\n\t// \t\tlet messageFormat = detectURL(message);\n\t// \t\tlet newMessageItem = {\n\t// \t\t\tid: this.state.messages.length + 1,\n\t// \t\t\tsender: sender,\n\t// \t\t\tsenderAvatar: senderAvatar,\n\t// \t\t\tmessage: messageFormat\n\t// \t\t};\n\t// \t\tthis.setState({ messages: [...this.state.messages, newMessageItem] });\n\t// \t}, 400);\n\t// }\n\n\tsendMessage = async (message: any) => {\n\t\tif (message.trim().length === 0 && !uploadFile) {\n\t\t\treturn\n\t\t  }\n\t\t  let sendMes ;\n\t\t  if(uploadFile){\n\t\t\tconst S3path = await handleImageUpload([uploadFile])\n\t\t\tconsole.log('file for s3', S3path)\n\t\t\tlet  file = JSON.stringify(S3path);\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: true,\n\t\t\t\tchatbot: false,\n\t\t\t\tfile,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId\n\t\t\t};\n\t\t  }else {\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: true,\n\t\t\t\tchatbot: false,\n\t\t\t\tcontent: message ,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId\n\t\t\t};\n\n\t\t  }\n\t\t \n\t\t\n        try {\n            const response = await API.graphql(\n                graphqlOperation(createMessage, { input: sendMes })\n\t\t\t);\n\t\t\t//this.setState({ messages: [...this.state.messages, newMessageItem] });\n\n        } catch (e) {\n           \n        }\n\t}\n\t\n\trender() {\n\t\tlet users:any = [];\n\t\tlet chatBoxes:any = [];\n\t\tlet messages = this.state.messages;\n\t\tlet sendMessage = this.sendMessage;\n\n\t\t/* user details - can add as many users as desired */\n\t\tusers[0] = { name: 'de1aa72c-0ab0-472b-9eed-2e88693321ee', avatar: 'https://i.pravatar.cc/150?img=32' };\n\t\t//users[1] = { name: 'Gabe', avatar: 'https://i.pravatar.cc/150?img=56' };\n\t\t/* test with two other users :)\n\t\tusers[2] = { name: 'Kate', avatar: 'https://i.pravatar.cc/150?img=47' };\n\t\tusers[3] = { name: 'Patrick', avatar: 'https://i.pravatar.cc/150?img=14' };\n\t\t*/\n\t\t\n\t\t/* creation of a chatbox for each user present in the chatroom */\n\n\t\tconst props = this.props.selectedConv;\n\t\tconst backButton = this.props.backButton;\n\n\t\tObject.keys(users).map(function(key) {\n\t\t\tvar user = users[key];\n\t\t\tchatBoxes.push(\n\t\t\t\t// @ts-ignore\n\t\t\t\t<ChatBox\n\t\t\t\t\tkey={key}\n\t\t\t\t\towner={props.owner}\n\t\t\t\t\townerAvatar={props.ownerAvatar}\n\t\t\t\t\tsenderAvatar={props.senderAvatar}\n\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tbackButton={backButton}\n\t\t\t\t\tsenderUsername={props.senderUsername}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className={\"chatApp__room\"}>\n\t\t\t\t{chatBoxes}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatRoom component */\n/* ========== */\n","import React, { useContext, useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { getUserConversations, getEmployeeConversations } from '../graphql/queries'\nimport { AuthContext } from '../auth/auth-context'\nimport {conversationLink, Conversation, getCacheImage, SelectedConv} from '../utils'\nimport './chat1.css';\nimport {ChatRoom} from './chat1'\nimport { useLocation } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        width: 10,\n        marginBottom: 8,\n        marginLeft: 5\n    }\n  }),\n);\n\nexport default function ChatList() {\n  const classes = useStyles();\n  const [converstaions, setConverstaions] = React.useState([]);\n  const authContext = useContext(AuthContext)\n  const [flag, setFlagValue] = React.useState(false);\n  const [selectedConv, setSelectedConv] = React.useState<SelectedConv>({\n    convId: '', senderUsername: '',\n    owner: '', ownerAvatar: '', senderAvatar: '', sender: ''\n  });\n\n  const [ownerAvatar, setOwnerAvatar] = React.useState({});\n\n  const location = useLocation();\n    \n  useEffect(() => {\n    // console.log(location.pathname); // result: '/secondpage'\n    // console.log(location.search); // result: '?query=abc'\n   // console.log(location.state.deail); // result: 'some_value'\n\n   //@ts-ignore\n    if(location.state && location.state.conversation ){\n      console.log(location); \n\n       //@ts-ignore\n       const conversation = location.state.conversation.conversation as  Conversation  ;\n              //@ts-ignore\n       const currentId = location.state.user as  string  ;\n      const user = conversation.associated.items.filter(conv => (conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      const otherUser = conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      console.log(user, otherUser); \n\n      setSelectedConv({\n        convId: conversation.id,\n         owner: currentId,\n         ownerAvatar: \"https://i.pravatar.cc/150?img=56\",\n         senderAvatar: \"https://i.pravatar.cc/159?img=2\",\n         senderUsername:otherUser[0].user?.username ?? otherUser[0].employee?.username ,\n         sender: otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId \n       });\n       setFlagValue(true);\n    }\n }, [location]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const id = authContext.userId;\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        if(type == \"Customer\"){\n          const commentData = await API.graphql(graphqlOperation(getUserConversations, { id }))\n         console.log(\"commentData\", commentData);\n          // @ts-ignore \n          if(commentData.data.getUser && commentData.data.getUser.userConversations.items.length > 0){\n          // @ts-ignore \n          const comments = commentData.data.getUser.userConversations.items;\n\n        // @ts-ignore \n        const useravatar = JSON.parse(commentData.data.getUser.avatar);\n        const getImage = await getCacheImage(useravatar[0]);\n        setOwnerAvatar(getImage);\n\n        for(var i = 0; i < comments.length; i++) {\n          const chat = comments[i];\n          const otherUser = chat.conversation.associated.items.filter((conv : any)=> !(conv.convoLinkUserId ==  id || conv.convoLinkEmployeeId ==  id  ))\n          const images = otherUser[0].user?.avatar ?? otherUser[0].employee?.avatar ;\n\n          comments[i].avatar = await getCacheImage(JSON.parse(images)[0]);\n         //console.log(\"images\",images);\n         comments[i].username = otherUser[0].user?.username ?? otherUser[0].employee?.username ;\n\n        }\n          setConverstaions(comments);\n          }\n\n        }else {\n          const commentData = await API.graphql(graphqlOperation(getEmployeeConversations, { id }))\n          console.log('getEmployeeConversations',commentData);\n\n          // @ts-ignore \n          if(commentData.data.getEmployee && commentData.data.getEmployee.employeeConversations.items.length > 0){\n          // @ts-ignore \n          const comments = commentData.data.getEmployee.employeeConversations.items;\n        // @ts-ignore \n        const useravatar = JSON.parse(commentData.data.getEmployee.avatar);\n        const getImage = await getCacheImage(useravatar);\n        setOwnerAvatar(getImage);\n        console.log(\"comments\", comments);\n\n\n        for(var i = 0; i < comments.length; i++) {\n          const chat = comments[i];\n          const otherUser = chat.conversation.associated.items.filter((conv : any)=> !(conv.convoLinkUserId ==  id || conv.convoLinkEmployeeId ==  id  ))\n          const images = otherUser[0].user?.avatar ?? otherUser[0].employee?.avatar ;\n          console.log(\"images\", images, otherUser[0]);\n          comments[i].avatar = await getCacheImage(JSON.parse(images)[0]);\n         //console.log(\"images\",images);\n         comments[i].username = otherUser[0].user?.username ?? otherUser[0].employee?.username ;\n\n        }\n          setConverstaions(comments);\n        }\n      }\n\n      } catch (error) {\n        console.log('unable get conversation for users:', error)\n      }\n    };\n    if(authContext.userId){\n      fetchData();\n    }\n  }, [authContext.userId]);\n\n  const handleClick = (value: conversationLink) => () => {\n    const currentId = authContext.userId;\n    const user = value.conversation.associated.items.filter(conv => (conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n    const otherUser = value.conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n\n    setSelectedConv({\n      convId: value.conversation.id,\n      owner: authContext.userId,\n      ownerAvatar: ownerAvatar as string,//\"https://i.pravatar.cc/150?img=56\",\n      senderAvatar: value.avatar,\n      senderUsername: value.username,\n      sender: otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId \n    });\n\n    setFlagValue(true);\n  };\n\n  const backButton = () => {\n    setFlagValue(false);\n\n  }\n\n  return (\n    <div>\n    { flag == false ?(\n      <AppHomeLayout title='RA2 Serverless'>\n\n    <List className={classes.root}>\n\n    {converstaions.length > 0 ? converstaions.map((item: conversationLink,index) => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" dense button onClick={handleClick(item)}>\n      <ListItemAvatar>\n        <Avatar alt=\"Remy Sharp\" src={item.avatar} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.username}\n      />\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )): <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <div>No Message Available </div>\n    </Grid>\n    }\n    </List>\n    </AppHomeLayout>)\n    : \n    <div>\n      \t{/* <div className=\"chatApp__loaderWrapper\">\n\t\t<div className=\"chatApp__loaderText\">Loading...</div>\n\t\t<div className=\"chatApp__loader\"></div>\n\t</div> */}\n      <ChatRoom selectedConv={selectedConv} backButton={backButton}>\n\n  </ChatRoom >\n\n</div>\n    }\n    </div>\n\n  );\n}","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\n\nimport Home from './Home'\n//import Privacy from './Privacy'\nimport Auth from '../auth/Auth';\nimport Checkout from '../profilepage/Checkout';\nimport CreateTicket from '../ticket/CreateTicket';\nimport TicketList from '../ticket/TicketList';\nimport ResponsiveDialog from '../ticket/ResponsiveDialog';\nimport ChatList from '../chat/ChatList';\nimport Stripe from '../profilepage/Stripe/Stripe';\n\nexport interface AppProps {}\n\nconst App: React.SFC<AppProps> = () => {\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n\n  //@ts-ignore\n  const RequireAuth =  ({ children })  => {\n    console.log(authContext.userId);\n    if (!authContext.userId) {\n      return <Redirect to={\"/\"} />;\n    }\n    console.log(\"children\",children);\n\n    return children;\n  };\n  //@ts-ignore\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n      authContext.userId\n        ? <Component {...props} />\n        : <Redirect to='/auth' />\n    )} />\n  )\n\n  // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route {...rest} render={(props) => (\n  //     authContext.userId\n  //       ? <Redirect to='/auth' />\n  //       : <Component {...props} />\n  //   )} />\n  // )\n\n  return (\n    <Switch>\n\n      {/* <PrivateRoute path='/' component={TicketList} /> */}\n\n       <Route exact path='/' component={TicketList} /> \n\n      <Route path='/auth' component={Auth} />\n \n      {/* <RequireAuth>\n      <Route path='/checkout' component={Checkout} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/createticket' component={CreateTicket} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/ticketList' component={TicketList} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/dum' component={ResponsiveDialog} />\n      </RequireAuth>  */}\n\n      {/* <RequireAuth>\n      <Route path='/chat' component={ChatList} />\n      </RequireAuth> */}\n      <PrivateRoute path='/chat' component={ChatList} />\n\n      <PrivateRoute path='/checkout' component={Checkout} />\n      <PrivateRoute path='/createticket' component={CreateTicket} />\n      <PrivateRoute path='/ticketList' component={TicketList} />\n\n\n />\n      \n    </Switch>\n  )\n}\n// <Route path='/privacy' component={Privacy} />\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport AuthContextProvider from './auth/auth-context'\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\nlet AwsConfig = JSON.parse(JSON.stringify(config))\n\nAmplify.configure(AwsConfig);\n\nconst app = (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  )\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      color: \"#fff\",\n      backgroundColor: \"#3f51b5\"\n    },\n    title:{\n        color: \"#fff\",\n        backgroundColor: \"#3f51b5\"\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography className={classes.title} variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});"],"sourceRoot":""}
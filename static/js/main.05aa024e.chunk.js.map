{"version":3,"sources":["aws-exports.js","utils/S3Handler.ts","utils/ImageViewer.tsx","auth/auth-context.tsx","utils/BackDrop.tsx","utils/index.ts","app/AppThemer.tsx","app/AppFooter.tsx","graphql/queries.js","graphql/mutations.js","ticket/util.ts","app/AppHeader.tsx","app/AppLayout.tsx","common/Snackbar.tsx","auth/components/styles.tsx","auth/components/AuthButton.tsx","auth/components/AuthPasswordField.tsx","auth/components/AuthLayout.tsx","auth/components/AuthPhoneField.tsx","auth/SignIn.tsx","auth/components/AuthEmailField.tsx","auth/components/AuthReEnterPasswordField.tsx","auth/SignUp.tsx","auth/components/AuthCodeField.tsx","auth/ConfirmSignUp.tsx","auth/ConfirmSignUpEmail.tsx","auth/ResetPassword.tsx","auth/ConfirmResetPassword.tsx","auth/Auth.tsx","profilepage/LocationSearchInput.tsx","profilepage/util.ts","profilepage/AddressForm.tsx","profilepage/EmployeeBackgroundCheck.tsx","app/AppHomeLayout.tsx","utils/Stripe.ts","profilepage/Stripe/CardSetupForm.tsx","profilepage/Stripe/Stripe.tsx","profilepage/Checkout.tsx","ticket/CreateTicket.tsx","graphql/subscriptions.js","ticket/model.ts","ticket/AlertDialog.tsx","utils/ExpertViewer.tsx","utils/BidDialog.tsx","ticket/ResponsiveDialog.tsx","ticket/TicketList.tsx","chat/chat1.tsx","chat/ChatList.tsx","app/App.tsx","serviceWorker.ts","index.tsx","utils/DialogTitle.tsx"],"names":["awsmobile","region","ampConfig","aws_user_files_s3_bucket_region","bucket","aws_user_files_s3_bucket","uploadImage","file","a","fileName","name","mimeType","type","key","uuid","fileForUpload","Storage","put","contentType","console","log","getImages","imageFiles","promises","map","getImage","Promise","all","result","get","avatarUrl","getCacheImage","images","fileUrl","Cache","getItem","expires","Date","getTime","setItem","handleImageUpload","compress","imageFile","Blob","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","useStyles","makeStyles","theme","createStyles","container","padding","ImageViewer","inputimages","openPop","closeAlert","React","useState","scroll","setScroll","useContext","AuthContext","setImages","classes","useEffect","files","JSON","parse","fetchData","handleClose","descriptionElementRef","useRef","descriptionElement","current","focus","open","fullScreen","onClose","aria-labelledby","aria-describedby","id","className","currElement","index","src","alt","createContext","user","provider","email","phoneNumber","userId","accountType","isAuthenticated","signUp","reject","confirmSignUp","resendSignUp","signIn","signOut","resetPassword","confirmResetPassword","AuthContextProvider","children","setUser","setProvider","setEmail","setName","setphoneNumber","setUserId","setAccountType","history","useHistory","getUserData","Hub","listen","data","payload","event","push","localStorage","Auth","currentAuthenticatedUser","then","email1","attributes","name1","provider1","username","catch","err","useCallback","userEmail","password","resolve","phone_number","message","code","forgotPassword","newPassword","forgotPasswordSubmit","Provider","value","backdrop","zIndex","drawer","color","TVBackdrop","props","onClick","defaultTheme","typography","fontFamily","join","createMuiTheme","Themer","ThemeProvider","NoSsr","Copyright","Typography","variant","align","Link","href","getFullYear","footer","spacing","marginTop","backgroundColor","Footer","useTheme","Container","maxWidth","getUser","gql","getFullUser","getConvo","getOpenTicket","getUserMessages","getUserConversations","createUserTicket","createConvo","createTicket","updateTicket","assignExpertToTicket","createMessage","updateUser","registerUser","createConvoLink","updateConvoLink","updateMessage","launchNewConversation","expertid","chat","API","graphql","graphqlOperation","input","conversation","owner","convoLinkUserId","convoLinkConversationId","status","service","ownerConvLink","serviceConvLink","ownerConvLinkConf","serviceConvLinkConf","mm","xy","findConverationWithUser","ticketUserId","expertId","setIsEmployee","commentData","userConversations","items","length","convoLinks","convoLink","find","c","associated","some","conversationName","startConvoWithUser","conversationInfo","appBar","boxShadow","appBarBefore","border","menuButton","marginRight","spacer","flexGrow","Header","header","authContext","contactFlag","setContactFlag","chatFlag","setChatFlag","receiver","isSent","IgetUserMessages","messageByReceiver","messages","filter","chatWithExpert","currentId","conv","pathname","state","authLink","IconButton","Badge","overlap","badgeContent","invisible","aria-label","AppBar","position","Toolbar","edge","root","display","flexDirection","minHeight","main","marginBottom","Layout","title","document","CssBaseline","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","alignItems","MySnackbarContentWrapper","Icon","SnackbarContent","clsx","action","useStyles2","margin","SnackBar","setMessage","setOpen","reason","bar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","form","width","textfield","paper","avatar","secondary","submit","links","btn","btnFederated","grey","btnElems","gridTemplateColumns","btnIcon","gridColumnEnd","btnLabel","height","justifyContent","textTransform","AuthButton","disabled","Button","fullWidth","AuthPasswordField","setPassword","showPassword","setShowPassword","valid","setValid","hint","setHint","delay","hintString","FormHelperText","FormControl","required","InputLabel","htmlFor","OutlinedInput","onChange","e","target","clearTimeout","setTimeout","isValid","test","endAdornment","InputAdornment","onMouseDown","preventDefault","Visibility","VisibilityOff","labelWidth","AuthLayout","Avatar","component","AuthPhoneField","setPhoneNumber","TextField","label","autoComplete","helperText","InputProps","startAdornment","currentTarget","AuthSignIn","disable","setDisable","setError","setErrorMsg","onSubmit","submitHandler","noValidate","Grid","item","xs","AuthEmailField","AuthReEnterPasswordField","authpass","setRePassword","AuthSignUp","rePassword","radio","setRadio","formattedPhone","replace","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","setCode","AuthConfirmSignUp","location","setSuccessMsg","AuthCodeField","AuthConfirmSignUpEmail","AuthReset","routes","exact","path","SignIn","SignUp","ConfirmSignUp","ConfirmSignUpEmail","ResetPassword","ConfirmResetPassword","Fragment","LocationSearchInput","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","setValue","clearSuggestions","handleSelect","description","getGeocode","address","results","geometry","lat","lng","latitudes","toString","longitudes","googleAddressReturn","getLatLng","suggestion","structured_formatting","main_text","secondary_text","stripAddress","address_components","street_number","ll","types","includes","route","postal_code","country","administrative_area_level_1","locality","administrative_area_level_2","address1","long_name","city","county","zip","formatted_address","buttons","button","marginLeft","AddressForm","handleInputChange","setValues","values","handleNext","valuessss","pictures","nextButton","stringify","setLoaded","S3path","picture","firstName","lastName","middelName","address2","aboutme","setPictures","onDrop","loaded","gutterBottom","sm","multiline","rows","style","withPreview","withIcon","singleImage","imgExtension","maxFileSize","direction","justify","currencies","EmployeeBackgroundCheck","routingNumber","bankAccountNumber","ssn","reroutingNumber","rebankAccountNumber","setErrorA","errorA","undefined","backgroundcheck","secondaryPayment","secondaryPaymentType","dob","payment","md","Divider","max","toISOString","slice","select","SelectProps","native","option","backButton","top","bottom","paddingBottom","appBarSpacer","mixins","toolbar","stickToBottom","paddingLeft","paddingRight","paddingTop","rootB","HomeLayout","Paper","square","createCustomer","myInit","response","body","phone","headers","post","customerId","url","customerKey","intent","client_secret","CardSetupForm","stripe","useStripe","elements","useElements","handleSubmit","keys","confirmCardSetup","payment_method","card","getElement","CardNumberElement","billing_details","setupIntent","useMemo","base","letterSpacing","invalid","cardNumber","expiry","cvc","onReady","onBlur","onFocus","stripePromise","loadStripe","Stripe","layout","breakpoints","up","stepper","Checkout","activeStep","setActiveStep","setAddress","setPayment","isCreate","setisCreate","isEmp","setisEmp","setBackdrop","steps","op","cardInfo","updateProfile","paymentV","registered","active","usertype","zipcode","handleBack","AppHomeLayout","Stepper","Step","StepLabel","step","Error","getStepContent","Backdrop","CircularProgress","time","date","fontWeight","lineHeight","jobtype","CreateTicket","createNewTicket","ticketUserInfo","newId","countAndId","price","content","destination","source","ownerUploadImages","ticketType","ticketID","userID","daytime","terms","destAddress","setDestAddress","handleCheckedChange","checked","Tooltip","Checkbox","selected","showTimeSelect","minTime","setHours","setMinutes","maxTime","minDate","maxDate","addDays","placeholderText","dateFormat","onCreateMessage","onCreateTicket","onUpdatedTicket","isServiceProviderBid","ticket","execptedPrice","el","serviceProvider","getServiceProviderBid","currentBid","customIcons","1","2","3","4","5","withStyles","iconFilled","iconHover","Rating","IconContainer","other","AlertDialog","textValue","setTextValue","handleOperation","Dialog","keepMounted","DialogTitle","DialogContent","DialogContentText","autoFocus","Box","mb","borderColor","defaultValue","getLabelText","IconContainerComponent","DialogActions","ExpertViewer","employee","emp","setEmp","empDate","BidDialog","setPrice","newPrice","setNewPrice","bidExperts","forEach","element","background","inline","subHeader","rating","buttonCart","buttonGird","cartLabel","AcceptTicket","close","formEdit","setFormEdit","setBids","setclosedComment","closedComment","bids","bidAmount","setBidAmount","bidinfo","acceptTicket","authid","ticketEmployeeInfo","ticketEmployeeId","acceptBid","openAlert","setOpenAlert","alertType","setAlertType","comments","closedTime","toUTCString","openUserImage","setOpenUserImage","imageListen","openExpert","setExpert","expertShow","otherId","openBid","setOpenBid","OpenBidShow","CloseBidShow","isNew","dividers","toLocaleString","InputLabelProps","shrink","Chip","clickable","deleteIcon","List","subheader","ListSubheader","ListItem","ListItemText","window","screen","list","borderRadius","absolute","right","fab","chipTop","TicketList","useMediaQuery","openErrands","setOpenErrands","ownerrands","setOwnerrands","completedJob","setCompletedJob","bidJob","setBidJob","setIsAuth","handleListClick","setSelectedItem","setOpenBuy","openBuy","selectedItem","isEmployee","useReducer","errand","updated","filtered","i","dispatch","unsubscribe","acceptedJobs","getuser","tickets","openErrandsTicket","openticket","closed","accepted","bidedfiltered","jobsByStatus","createdSub","subscribe","next","todoData","updatedsubscription","errands","isBidAv","Fab","Title","context","disableTypography","this","Component","uploadFile","InputMessage","messageInput","ownerInput","ownerAvatarInput","handleFileChange","startsWith","reader","FileReader","self","onload","setState","popoverOpen","filePreviewSrc","readAsDataURL","handleSendMessage","bind","sendMessageLoading","imgBtnClass","loadingClass","isLoading","sendButtonIcon","accept","Popover","placement","isOpen","PopoverHeader","aria-hidden","PopoverBody","ref","ownerAvatar","placeholder","MessageList","reverse","messageItem","sender","senderAvatar","MessageItem","prevProps","prevState","prevMsg","nodebugImage","currMsg","checkFileUrl","nonFile","Array","isArray","messageRight","messagePosition","dangerouslySetInnerHTML","__html","ChatBox","prop","sendMessage","senderUsername","ChatRoom","trim","sendMes","chatbot","messageConversationId","selectedConv","convId","ownerId","ids","res","ele","newMessage","users","chatBoxes","Object","ChatList","converstaions","setConverstaions","flag","setFlagValue","setSelectedConv","openChats","setOpenChats","setOwnerAvatar","useLocation","convoLinkEmployeeId","otherUser","useravatar","otherUseravatar","chatsLinks","link","dense","ListItemAvatar","ListItemSecondaryAction","App","PrivateRoute","rest","render","to","Boolean","hostname","match","AwsConfig","config","Amplify","configure","app","basename","process","ReactDOM","getElementById","navigator","serviceWorker","registration","unregister","closeButton"],"mappings":"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","file":"static/js/main.05aa024e.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:435bc496-569e-4416-9f91-a93380c74568\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_tAcnrruti\",\n    \"aws_user_pools_web_client_id\": \"3llva5gj2ldd3p5io4a68qioa9\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://6q2hzk6gnzdc7je3i7qgtwys24.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"stripeapi\",\n            \"endpoint\": \"https://t5lfrzupr9.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        },\n        {\n            \"name\": \"chatreplyfun\",\n            \"endpoint\": \"https://d7cm3w1iy1.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        }\n    ],\n    \"aws_user_files_s3_bucket\": \"on-demand-appf1e88b1938014955bfc15fbb20190293app-dev\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\"\n};\n\n\nexport default awsmobile;\n","import ampConfig from '../aws-exports'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport imageCompression from 'browser-image-compression';\nimport { Storage, Cache} from 'aws-amplify'\n\nconst {\n  aws_user_files_s3_bucket_region: region,\n  aws_user_files_s3_bucket: bucket\n} = ampConfig;\n\n\nasync function uploadImage(file: any) {\n\n    if (file) {\n        \n        const { name: fileName, type: mimeType } = file  \n        const key = `${uuid()}${fileName}`\n        const fileForUpload = {\n            bucket,\n            key,\n            region,\n        }\n\n        try {\n            await Storage.put(key ,file, {\n                contentType: mimeType\n            })\n          console.log('successfully stored user data!')\n          return fileForUpload;\n        } catch (err) {\n          console.log('error: ', err)\n        }\n    }\n}\n\nexport async function getImages(imageFiles: any[]) {\n    console.log('getImages!', imageFiles);\n\n    // map array to promises\n    const promises = imageFiles.map(getImage);\n    // wait until all promises are resolved\n    const result = await Promise.all(promises);\n    console.log('getImages!', result);\n    return result;\n}\n\nasync function getImage(imageFiles: any) {\n    const avatarUrl = await Storage.get(imageFiles.key )\n    return avatarUrl;\n}\n\nexport async function getCacheImage(images: any) {\n  let fileUrl = Cache.getItem(images.key)\n\t\t  if (fileUrl) {\n      console.log(`Retrieved cached url for ${images.key}: ${fileUrl}`)\n      return fileUrl[0];\n\t\t  }\n\t\n\t\t  fileUrl = await getImages([images]);\n\t\t  console.log(`Retrieved fetched url for ${images.key}: ${fileUrl}`)\n\n\t\t  const expires = new Date(new Date().getTime() + 14*60000).getTime();\n      Cache.setItem(images.key, fileUrl, { expires })\n      \n      return fileUrl[0];\n}\n\n\nexport async function handleImageUpload(imageFiles: any[]) {\n\n  // map array to promises\n  const promises = imageFiles.map(compress);\n  // wait until all promises are resolved\n  const result = await Promise.all(promises);\n  console.log('Done!', result);\n  return result;\n}\n\nasync function compress(imageFile: any) {\n\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        const options = {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1920,\n          useWebWorker: false\n        }\n        try {\n          const compressedFile = await imageCompression(imageFile, options);\n          console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n          console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n          return await uploadImage(compressedFile); // write your own logic\n        } catch (error) {\n            console.log(error);\n          }\n\n  }","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  inputimages: string;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ImageViewer: React.SFC<AcceptProps> = ({inputimages, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const files = JSON.parse(inputimages);\n      const result = await getImages(files);\n      console.log(\"images\", result);\n      //@ts-ignore\n      setImages(result);\n    };\n    fetchData();\n  }, []);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return (\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Ticket Details</DialogTitle>\n        <div className={classes.container}>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog>\n  );\n}\n\nexport default ImageViewer;","import React, { useState, useCallback, useEffect } from 'react'\nimport { Auth, Hub } from 'aws-amplify'\nimport { useHistory } from 'react-router-dom'\n\nexport interface AuthContextProps {\n  user: any\n  provider: string\n  name: string\n  email: string,\n  phoneNumber: string,\n  userId: string,\n  accountType: string,\n  isAuthenticated(): boolean\n  signUp(username: string, password: string, phoneNumber: string, accountType: string): Promise<any>\n  confirmSignUp(phoneNumber: string, code: string): Promise<any>\n  resendSignUp(phoneNumber: string): Promise<any>\n  signIn(phoneNumber: string, password: string): Promise<any>\n  signOut(): Promise<any>\n  resetPassword(phoneNumber: string): Promise<any>\n  confirmResetPassword(\n    phoneNumber: string,\n    newPassword: string,\n    code: string\n  ): Promise<any>\n}\n\nexport const AuthContext = React.createContext<AuthContextProps>({\n  user: null,\n  provider: '',\n  name: '',\n  email: '',\n  phoneNumber: '',\n  userId: '',\n  accountType: '',\n  isAuthenticated: () => false,\n  signUp: () => new Promise(reject => reject(0)),\n  confirmSignUp: () => new Promise(reject => reject(0)),\n  resendSignUp: () => new Promise(reject => reject(0)),\n  signIn: () => new Promise(reject => reject(0)),\n  signOut: () => new Promise(reject => reject(0)),\n  resetPassword: () => new Promise(reject => reject(0)),\n  confirmResetPassword: () => new Promise(reject => reject(0))\n})\n\nexport interface AuthContextProviderProps {\n  children: any\n}\n\nconst AuthContextProvider: React.SFC<AuthContextProviderProps> = ({\n  children\n}) => {\n  const [user, setUser] = useState<any>(null)\n  const [provider, setProvider] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n  const [name, setName] = useState<string>('')\n  const [phoneNumber, setphoneNumber] = useState<string>('')\n  const [userId, setUserId] = useState<string>('')\n  const [accountType, setAccountType] = useState<string>('')\n\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('checking for authenticated user...')\n    getUserData()\n  }, [])\n\n  useEffect(() => {\n    Hub.listen('auth', data => {\n      const { payload } = data\n      switch (payload.event) {\n        case 'signIn':\n          getUserData()\n          history.push('/')\n          break\n        case 'signOut':\n          setUser(null)\n          setProvider('')\n          localStorage.setItem('provider', '')\n          setEmail('')\n          setName('')\n          setphoneNumber('')\n          setUserId('')\n          history.push('/')\n          break\n      }\n    })\n  }, [])\n\n  const getUserData = () => {\n    Auth.currentAuthenticatedUser()\n      .then(data => {\n        console.log('current', data)\n        setUser(data)\n        const email1 = data.email || data.attributes.email || ''\n        const name1 = data.name || data.attributes.email || ''\n        const provider1 = localStorage.getItem('provider') || ''\n\n        setUserId(data.username)\n        setEmail(email1)\n        setName(name1)\n        setProvider(provider1)\n        setAccountType(data.attributes[\"custom:account_type\"])\n\n        // console.log('email:', email1, email)\n        // console.log('name:', name1)\n        // console.log('provider:', provider1)\n         console.log('provider:', accountType,data.attributes, data.attributes[\"custom:account_type\"])\n\n\n      })\n      .catch(err => {\n        console.log('no current authenticated user')\n      })\n  }\n\n  const isAuthenticated = (): boolean => user !== null\n\n  const signUp = useCallback((userEmail: string, password: string, phoneNumber: string, accountType: string) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.signUp({\n          username: \"+1\"+phoneNumber,\n          password: password,\n          attributes: {\n            email: userEmail,          \n            phone_number: \"+1\"+phoneNumber,\n            'custom:account_type': accountType\n        },\n        })\n        console.log(user)\n        resolve(user)\n      } catch (err) {\n        console.log(err)\n        let message: string = 'An internal error occurred.'\n        switch (err.code) {\n          case 'UserNotConfirmedException':\n          case 'PasswordResetRequiredException':\n          case 'NotAuthorizedException':\n          case 'UserNotFoundException':\n          case 'UsernameExistsException':\n            message = err.message\n            break\n          default:\n            console.log(err)\n            break\n        }\n        reject(message)\n      }\n    })\n  }, [])\n\n  const confirmSignUp = useCallback((phoneNumber: string, code: string) => {\n    console.log('confirm sign up', phoneNumber, code)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.confirmSignUp(\"+1\"+phoneNumber, code)\n        resolve(user)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const signIn = useCallback((phoneNumber: string, password: string) => {\n    console.log('sign in', phoneNumber, password)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const data = await Auth.signIn({\n          username: \"+1\"+phoneNumber,\n          password: password\n        })\n        localStorage.setItem('provider', 'email')\n        console.log(data)\n        resolve(data)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const resendSignUp = useCallback((phoneNumber: string) => {\n    console.log('resend sign up', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.resendSignUp(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const signOut = useCallback(() => {\n    console.log('sign out')\n    return new Promise((resolve, reject) => {\n      Auth.signOut()\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const resetPassword = useCallback((phoneNumber: string) => {\n    console.log('reset password', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.forgotPassword(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const confirmResetPassword = useCallback(\n    (phoneNumber: string, newPassword: string, code: string) => {\n      console.log('confirm reset password', phoneNumber, code, newPassword)\n      return new Promise((resolve, reject) => {\n        Auth.forgotPasswordSubmit(\"+1\"+phoneNumber, code, newPassword)\n          .then(data => resolve(data))\n          .catch(err => {\n            const message = err.message || 'An internal error occurred.'\n            reject(message)\n          })\n      })\n    },\n    []\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        provider: provider,\n        name: name,\n        email: email,\n        phoneNumber: phoneNumber,\n        accountType: accountType,\n        userId: userId,\n        isAuthenticated: isAuthenticated,\n        signUp: signUp,\n        confirmSignUp: confirmSignUp,\n        resendSignUp: resendSignUp,\n        signIn: signIn,\n        signOut: signOut,\n        resetPassword: resetPassword,\n        confirmResetPassword: confirmResetPassword\n      }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\n interface TVBackdropProps {\n    open: boolean;\n  }\n\n export const TVBackdrop: React.SFC<TVBackdropProps> = (props) => {\n  const classes = useStyles();\n  //const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    //setOpen(false);\n  };\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n","export * from './DialogTitle';\nexport * from './S3Handler';\nexport * from './ImageViewer';\nexport * from './model';\nexport * from './BackDrop';","import React from 'react'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core'\nimport NoSsr from '@material-ui/core/NoSsr'\n\nconst defaultTheme = {\n  typography: {\n    fontFamily: ['Roboto', 'sans-serif'].join(',')\n  }\n}\nconst theme = createMuiTheme(defaultTheme)\n\nexport interface ThemerProps {\n  children: any\n}\n\nconst Themer: React.SFC<ThemerProps> = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>{children}</NoSsr>\n    </ThemeProvider>\n  )\n}\n\nexport default Themer\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'TravTail ™ '}\n      <Link\n        color='inherit'\n        href='https://travtail.com/'>\n        \n      </Link>\n      {new Date().getFullYear()}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    footer: {\n      padding: theme.spacing(2),\n      marginTop: 'auto',\n      backgroundColor: '#f6f6f6'\n    }\n  })\n)\n\nexport interface FooterProps {}\n\nconst Footer: React.SFC<FooterProps> = () => {\n  const classes = useStyles(useTheme())\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth='sm'>\n        <Copyright />\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import gql from 'graphql-tag'\n\nexport const getUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      county\n      avatar\n      cardInfo\n      active\n      tickets {\n        items {\n          ticket{\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          ticketType\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n          execptedPrice\n          users {\n            items {\n              user{\n              id\n              }\n            }\n          }\n        }\n        }\n      }\n    }\n  }\n`\n\nexport const getEmployee = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      county\n      avatar\n      active\n      employeeTickets {\n        items {\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n        }\n      }\n    }\n  }\n`\n\nexport const getFullUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getFullEmployee = gql`\n  query GetFullEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getConvo = gql`\n  query GetConvo($id: ID!, $nextToken: String) {\n    getConvo(id: $id) {\n      id\n      messages(sortDirection: DESC, limit: 20, nextToken: $nextToken) {\n        nextToken\n        items {\n          id\n          content\n          createdAt\n          owner\n          chatbot\n          isSent\n          file\n          messageConversationId\n        }\n      }\n    }\n  }\n`\n\nexport const searchMessages = gql`\n  query SearchMessages(\n    $filter: SearchableMessageFilterInput\n    $sort: SearchableMessageSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchMessages(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        content\n        createdAt\n        owner\n        chatbot\n        isSent\n        file {\n          bucket\n          region\n          key\n        }\n        messageConversationId\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchUsers = gql`\n  query SearchUsers(\n    $filter: SearchableUserFilterInput\n    $sort: SearchableUserSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchUsers(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        username\n        registered\n        userConversations {\n          items {\n            id\n            name\n            status\n            convoLinkUserId\n          }\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchConvoLinks = gql`\n  query SearchConvoLinks(\n    $filter: SearchableConvoLinkFilterInput\n    $sort: SearchableConvoLinkSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchConvoLinks(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        status\n        convoLinkUserId\n        user {\n          id\n          username\n          registered\n        }\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\n\nexport const getOpenTicket = gql`\nquery getOpenTicket($status: String!, $county: String! ) {\n  jobsByStatus(county: $county,  status: {\n    eq: $status\n  }) \n   {\n      items {\n        id\n        content\n        time\n        destination\n        price\n        title\n        county\n        source\n        status\n        ownerUploadImages\n        employeeUploadImages\n        execptedPrice\n        ticketType\n      }\n    nextToken\n   }\n}\n`\n\nexport const getUserMessages = gql`\nquery messageByReceiver($receiver: String!, $isSent: String! ) {\n  messageByReceiver(receiver: $receiver,  isSent: {\n    eq: $isSent\n  }) \n   {\n      items {\n        id\n        isSent\n        owner\n        conversation {\n          id\n        }\n      }\n    nextToken\n   }\n}\n`\n\n\nexport const getUserConversations = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      avatar\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const getEmployeeConversations = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      avatar\n      employeeConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                  avatar\n                }\n                convoLinkEmployeeId\n                employee {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import gql from 'graphql-tag'\n\n\nexport const createUserTicket = gql`\n  mutation CreateUserTicket($input: CreateUserTicketInput!) {\n    createUserTicket(input: $input) {\n      id\n      ticketID\n      userID\n    }\n  }\n`\n\nexport const createConvo = gql`\n  mutation CreateConvo($input: CreateConversationInput!) {\n    createConvo(input: $input) {\n      id\n      name\n      createdAt\n      associated {\n        items {\n          convoLinkUserId\n          user {\n            id\n            username\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createTicket = gql`\n  mutation CreateTicket($input: CreateTicketInput!) {\n    createTicket(input: $input) {\n      id\n      countAndId\n      ticketUserId\n      owner\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeInfo\n      ticketEmployeeId\n      ticketUserInfo\n      ownerUploadImages\n      employeeUploadImages\n      closedComment\n      ticketType\n      execptedPrice\n    }\n  }\n`\nexport const updateTicket = gql`\n    mutation UpdateTicket($input: UpdateTicketInput!\n      ) {\n      updateTicket(\n        input: $input\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      ticketEmployeeId\n      closedComment\n      closedTime\n      ticketType\n      execptedPrice\n    }\n  }\n  `\n\nexport const assignExpertToTicket = gql`\n    mutation UpdateTicket($id: ID!, $ticketEmployeeId: ID!, $price: String, $ticketEmployeeInfo: String) {\n      updateTicket(\n        input: {\n          id: $id\n          price: $price\n          ticketEmployeeId: $ticketEmployeeId\n          ticketEmployeeInfo: $ticketEmployeeInfo\n          status: \"assinged\"\n        }\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n      ticketType\n      execptedPrice\n    }\n  }\n`\n\nexport const createMessage = gql`\n  mutation CreateMessage($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const registerFullUser = gql`\n  mutation RegisterFullUser($input: CreateUserInput!) {\n    registerFullUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployeeUser = gql`\n  mutation registerEmployeeUser($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateUser = gql`\n  mutation UpdateUser($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerUser = gql`\n  mutation RegisterUser($input: CreateUserInput!) {\n    registerUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const registerFullEmployee = gql`\n  mutation RegisterFullEmployee($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateEmployee = gql`\n  mutation UpdateEmployee($input: UpdateEmployeeInput!) {\n    updateEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployee = gql`\n  mutation RegisterEmployee($input: CreateUserInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createConvoLink = gql`\n  mutation createConvoLink($input: CreateConvoLinkInput!) {\n    createConvoLink(input: $input) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const updateConvoLink = gql`\n  mutation updateConvoLink($id: ID!) {\n    updateConvoLink(input: { id: $id, status: \"READY\" }) {\n      id\n      name\n      convoLinkUserId\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const updateMessage = gql`\n  mutation updateMessage($id: ID!) {\n    updateMessage(input: { id: $id, isSent: \"true\" }) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n    }\n  }\n`","import { API, graphqlOperation } from 'aws-amplify'\nimport { getConvo, getUserConversations, getEmployeeConversations } from '../graphql/queries'\n\nimport {\n  createConvo,\n  createConvoLink,\n  updateConvoLink\n} from '../graphql/mutations';\n\nexport const launchNewConversation = async(userId : string, expertid: string) => {\n    try {\n      const id = userId;\n      const chat =  {  name: 'direct' };\n  \n      const conversation = await API.graphql(graphqlOperation(createConvo, { input: chat }))\n      console.log(\"conversation\", conversation);\n  \n      // const otherChatName = chatName(me.username)\n      // const myChatName = chatName(user.username)\n      // @ts-ignore \n      const owner = {convoLinkUserId: id, convoLinkConversationId: conversation.data.createConvo.id , \n        status: \"CREATING\", name: 'chat'};\n      // @ts-ignore \n      const service = {convoLinkUserId: expertid , convoLinkConversationId: conversation.data.createConvo.id, \n        status: \"CREATING\", name: 'chat'};\n  \n      const ownerConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: owner }));\n      const serviceConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: service }));\n      \n          // @ts-ignore \n      const ownerConvLinkConf = ownerConvLink.data.createConvoLink.id;\n          // @ts-ignore \n      const serviceConvLinkConf = serviceConvLink.data.createConvoLink.id\n  \n     const mm =  await API.graphql(graphqlOperation(updateConvoLink, {id : ownerConvLinkConf}));\n     console.log(' mm next steps', mm)\n     const xy =  await API.graphql(graphqlOperation(updateConvoLink, {id : serviceConvLinkConf}));\n  \n     console.log(' xy next steps', xy)\n\n      // const links = await Promise.all([\n      //   linkNewConversation(createConvo.id, user.id, otherChatName),\n      //   linkNewConversation(createConvo.id, me.id, myChatName)\n      // ])\n      // console.log('next steps', links)\n      // const promises = links.map(c => this.updateToReadyConversation(c))\n      // const convoLinks = await Promise.all(promises)\n  \n  \n      console.log('item created!',conversation)\n    } catch (err) {\n      console.log('error creating talk...', err)\n    }\n  }\n\n  export const findConverationWithUser = async(ticketUserId : string, expertId: string, setIsEmployee: boolean) => {\n    console.log('findConverationWithUser', ticketUserId, expertId, setIsEmployee)\n\n    //const op =  setIsEmployee ? getEmployeeConversations :getUserConversations;\n    //const id =  ticketUserId//setIsEmployee ? expertId :ticketUserId;\n\n    const commentData = await API.graphql(graphqlOperation(getUserConversations, { id: ticketUserId }))\n    console.log('fetchDate',commentData); \n\n               //@ts-ignore\n          if(commentData.data.getUser &&  commentData.data.getUser.userConversations.items.length > 0){\n                //@ts-ignore\n          const convoLinks = commentData.data.getUser.userConversations.items as any;\n          \n          const convoLink = convoLinks.find((c :any) => {\n          const {\n          conversation: { associated: { items: assoc = [] } = {} } = {}\n          } = c\n          return assoc.some((a :any)=> a.convoLinkUserId === expertId)\n          })\n          \n          return convoLink\n          ? {\n          conversation: convoLink.conversation,\n          conversationName: convoLink.name\n          }\n          : null\n          }\n          \n\n    return null;\n  }\n\n\n  export const startConvoWithUser = async (userId: string, expertId: string, setIsEmployee: boolean) => {\n    let conversationInfo = await findConverationWithUser(userId, expertId, setIsEmployee);\n    console.log('existing conv', conversationInfo)\n\n    if (!conversationInfo) {\n      console.log('no convo, launch new')\n       await launchNewConversation(userId, expertId )\n    }\n    return conversationInfo\n\n  }\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nimport { Toolbar, AppBar, IconButton } from '@material-ui/core'\nimport HomeIcon from '@material-ui/icons/Home'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport { AuthContext } from '../auth/auth-context'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport ContactSupportIcon from '@material-ui/icons/ContactSupport';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { getUserMessages } from '../graphql/queries'\nimport Badge from '@material-ui/core/Badge';\nimport { startConvoWithUser} from '../../src/ticket/util';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: { boxShadow: 'none', backgroundColor: 'transparent' },\n    appBarBefore: { backgroundColor: '#fff', border: 1 },\n\n    menuButton: {\n      marginRight: theme.spacing(1)\n    },\n    spacer: {\n      flexGrow: 1\n    }\n  })\n)\n\nexport interface HeaderProps {\n  header?: string;\n}\n\n interface messages {\n  id: string,\n  isSent: string,\n  owner : string,\n}\n\nconst Header: React.SFC<HeaderProps> = ({ header }) => {\n  const classes = useStyles(useTheme())\n  const authContext = useContext(AuthContext);\n  const history = useHistory()\n\n  const [contactFlag, setContactFlag] = React.useState(false);\n  const [chatFlag, setChatFlag] = React.useState(false);\n\n\n  React.useEffect(() => {\n    if(header && authContext && authContext.userId && authContext.user ){\n\n      const id = authContext.userId;\n    (async function anyNameFunction() {\n      const IgetUserMessages = await API.graphql(graphqlOperation(getUserMessages, { receiver: id, isSent: \"false\" }))\n      console.log(\"getUserMessages\", IgetUserMessages);\n       //@ts-ignore\n      if(IgetUserMessages.data.messageByReceiver && IgetUserMessages.data.messageByReceiver.items.length > 0){\n        setChatFlag(true);\n        //@ts-ignore\n        const messages = IgetUserMessages.data.messageByReceiver.items as messages[];\n        const customercare = messages.filter((message:any) => message.owner === \"1f011946-f3b8-4fec-8ed3-276ef522e563\");\n        // 1f011946-f3b8-4fec-8ed3-276ef522e563\n        if(customercare.length > 0 )setContactFlag(true);\n\n      }\n     })();\n    }\n    \n  }, [header, authContext.userId]);\n\n  const chatWithExpert = async() => {\n    const currentId = authContext.userId;\n    const otherId = \"1f011946-f3b8-4fec-8ed3-276ef522e563\";\n   const conv = await startConvoWithUser(currentId, otherId, true );\n\n   history.push({\n    pathname: '/chat',\n    state: { conversation: conv, user: currentId  }\n  });\n\n  }\n\n  let authLink = authContext.isAuthenticated()  && header ? (\n    <div>\n     { header === \"profile\" ? <IconButton  color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => authContext.signOut()}>\n    <ExitToAppIcon color='action'/>\n</IconButton>  : null}\n\n    { header === \"Home\" ? <span> \n\n\n<IconButton  color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => history.push('/checkout')}>\n    <AccountCircleIcon color='action'/>\n</IconButton> \n\n<IconButton  color=\"inherit\"\n    className={classes.menuButton}\n    onClick={chatWithExpert}>\n            <Badge color=\"secondary\" overlap=\"circle\" badgeContent=\" \"\n            invisible={contactFlag? false: true}\n            >\n    <ContactSupportIcon color='action'/>\n    </Badge>\n\n</IconButton> \n\n<IconButton aria-label=\"show 17 new notifications\" color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => history.push('/chat')}\n>\n<Badge color=\"secondary\" overlap=\"circle\" badgeContent=\" \"\ninvisible={chatFlag? false: true}\n>\n    <NotificationsIcon color='action'/>\n    </Badge>\n\n</IconButton>\n\n</span>: null\n}\n    </div>\n  ) : null\n\n  return (\n    <AppBar position='fixed' className={authContext.isAuthenticated() ? classes.appBarBefore :classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge='start'\n          className={classes.menuButton}\n          onClick={() => history.push('/')}\n          color='inherit'\n          aria-label='home'>\n          <HomeIcon color='action' />\n        </IconButton>\n        <div className={classes.spacer}></div>\n        {authLink}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React, { useEffect } from 'react'\n\nimport Themer from './AppThemer'\nimport Footer from './AppFooter'\nimport Header from './AppHeader'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    main: {\n      // marginTop: theme.spacing(8),// sign In  top\n      marginBottom: theme.spacing(2)\n    }\n  })\n)\n\nexport interface LayoutProps {\n  title: string\n  children: any\n}\n\nconst Layout: React.SFC<LayoutProps> = ({ title, children }) => {\n  const classes = useStyles(useTheme())\n\n  useEffect(() => {\n    document.title = title\n  }, [title])\n\n  return (\n    <Themer>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header />\n        <Container className={classes.main} maxWidth='sm'>\n          {children}\n        </Container>\n        <Footer />\n      </div>\n    </Themer>\n  )\n}\n\nexport default Layout\n","import React, { SyntheticEvent, useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { amber, green } from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nexport interface Props {\n  className: string\n  message: string\n  onClose: () => void\n  variant: keyof typeof variantIcon\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n  const classes = useStyles1()\n  const { className, message, onClose, variant } = props\n  const Icon = variantIcon[variant]\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nconst useStyles2 = makeStyles((theme: Theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}))\n\nexport interface SnackBarProps {\n  variant: keyof typeof variantIcon\n  message: string\n  setMessage: (message: string) => void\n}\n\nconst SnackBar: React.SFC<SnackBarProps> = ({\n  variant,\n  message,\n  setMessage\n}) => {\n  const classes = useStyles2()\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    setOpen(message === '' ? false : true)\n  }, [message])\n\n  useEffect(() => {\n    !open && setMessage('')\n  }, [open])\n\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const bar = (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}>\n      <MySnackbarContentWrapper\n        onClose={handleClose}\n        className={classes.margin}\n        variant={variant}\n        message={message}\n      />\n    </Snackbar>\n  )\n\n  return <div>{bar}</div>\n}\n\nexport default SnackBar","import {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme: Theme = useTheme()) =>\n  createStyles({\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    textfield: {\n      margin: theme.spacing(2, 0, 0),\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    links: {\n      padding: '0px 5px'\n    },\n    btn: {\n      width: '100%',\n      maxWidth: '260px',\n      marginTop: theme.spacing(2)\n    },\n    btnFederated: {\n      backgroundColor: 'white',\n      color: theme.palette.grey[600]\n    },\n    btnElems: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    },\n    btnIcon: {\n      display: 'flex',\n      gridColumnEnd: 'span 2'\n    },\n    btnLabel: {\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      gridColumnEnd: 'span 10',\n      textTransform: 'none'\n    },\n    input: {\n      padding : '11.5px 10px'\n    },\n    container: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    }\n  })\n)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { useStyles } from './styles'\n\nexport interface AuthButtonProps {\n  children: any\n  disabled: boolean\n}\n\nconst AuthButton: React.SFC<AuthButtonProps> = ({ children, disabled }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      type='submit'\n      disabled={disabled}\n      fullWidth\n      variant='contained'\n      color='primary'\n      size='large'\n      className={classes.submit}>\n      {children}\n    </Button>\n  )\n}\n\nexport default AuthButton\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n  setPassword: (password: string) => void\n}\n\nconst AuthPasswordField: React.SFC<AuthPasswordFieldProps> = ({\n  setPassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      setPassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-password' error={!valid}>\n        Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthPasswordField\n","import React from 'react'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport { useStyles } from './styles'\n\nexport interface AuthLayoutProps {\n  title: string\n  children: any\n}\n\nconst AuthLayout: React.SFC<AuthLayoutProps> = ({ title, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Container maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          {title}\n        </Typography>\n        {children}\n      </div>\n    </Container>\n  )\n}\n\nexport default AuthLayout\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment';\n\nexport interface AuthPhoneFieldProps {\n  setPhoneNumber: (phoneNumber: string) => void\n}\n\nconst AuthPhoneField: React.SFC<AuthPhoneFieldProps> = ({ setPhoneNumber }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (phoneNumber: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(phoneNumber)\n      console.log(\"phone\",phoneNumber);\n      setValid(isValid)\n      setHint(\n        isValid ? '' : phoneNumber.length > 0 ? 'Invalid phone number.' : 'Enter phoneNumber.'\n      )\n      setPhoneNumber(isValid ? phoneNumber : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='phoneNumber'\n      label='Phone Number'\n      name='phoneNumber'\n      autoComplete='phoneNumber'\n      helperText={hint}\n      InputProps={{\n        startAdornment: <InputAdornment position=\"start\">+1</InputAdornment>,\n      }}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthPhoneField\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthSignInProps {}\n\nconst AuthSignIn: React.SFC<AuthSignInProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && password))\n  }, [phoneNumber, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .signIn(phoneNumber, password)\n      .then(data => {\n        console.log('sign in success!')\n      })\n      .catch(err => {\n        if(\"User is not confirmed.\" === err){\n          setError(\"Your account is not confirmed. Confirm your account by clicking the confirm sign up link above\")\n          return\n        }else if(\"User does not exist.\" === err) {\n          setError(\"This account does not exist. Please signup using the sign up link above.\")\n        }else {\n          setError(err);\n        }\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Sign In'>\n      <AuthLayout title='Sign In'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthButton disabled={disable}>Sign In</AuthButton>\n          <Grid container>\n            <Grid item xs={5} className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/resetpassword')}\n                variant='body2'>\n                Forget Password\n              </Link>\n            </Grid>\n            <Grid item xs={4} className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup/confirmemail')}\n                variant='body2'>\n                {'Confirm Sign Up'}\n              </Link>\n            </Grid>\n            <Grid item  xs={3}className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup')}\n                variant='body2'>\n                Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignIn\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setEmail: (email: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setEmail }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (email: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)\n      setValid(isValid)\n      setHint(\n        isValid ? '' : email.length > 0 ? 'Invalid email.' : 'Enter email.'\n      )\n      setEmail(isValid ? email : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='email'\n      label='Email Address'\n      name='email'\n      autoComplete='email'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n    authpass: string;\n    setRePassword: (rePassword: string) => void\n}\n\nconst AuthReEnterPasswordField: React.SFC<AuthPasswordFieldProps> = ({ authpass,\nsetRePassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      if(authpass !== password){\n        setValid(false)\n        setHint('Password mismatch');\n      }\n      setRePassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-re-password' error={!valid}>\n        Re Enter Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-re-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthReEnterPasswordField\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { AuthContext } from './auth-context'\nimport AuthLayout from './components/AuthLayout'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthReEnterPasswordField from './components/AuthReEnterPasswordField'\nimport AuthPhoneField from './components/AuthPhoneField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthButton from './components/AuthButton'\nimport { useStyles } from './components/styles'\n\nexport interface AuthSignUpProps {}\n\nconst AuthSignUp: React.SFC<AuthSignUpProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [rePassword, setRePassword] = useState<string>('')\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n\n\n  const [radio, setRadio] = React.useState('');\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRadio((event.target as HTMLInputElement).value);\n  };\n\n  useEffect(() => {\n    setDisable(!(email && password && phoneNumber && radio))\n    if(password !== rePassword)\n{\n  setDisable(true)\n}\n  }, [email, password, rePassword, phoneNumber, radio])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault();\n    const formattedPhone = phoneNumber.replace( /^\\D+/g, '');\n    authContext\n      .signUp(email, password, formattedPhone, radio)\n      .then(data => {\n        history.push('/auth/signup/confirm', formattedPhone)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='Sign Up'>\n      <AuthLayout title='Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthEmailField setEmail={email => setEmail(email)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthReEnterPasswordField authpass={password} setRePassword={rePassword => setRePassword(rePassword)} />\n\n\n          <FormControl  className={classes.form}  component=\"fieldset\">\n      <FormLabel component=\"legend\">Account Type</FormLabel>\n      <RadioGroup row aria-label=\"position\"  value={radio} onChange={handleRadioChange}>\n      <FormControlLabel value=\"Customer\" control={<Radio />} label=\"Customer\" />\n          <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Service Provider\" />\n      </RadioGroup>\n    </FormControl>\n\n\n          <AuthButton disabled={disable}>Sign Up</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth')}\n                variant='body2'>\n                {'Sign In'}\n              </Link>\n            </Grid>\n            <Grid item className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup/confirmemail')}\n                variant='body2'>\n                {'Confirm Sign Up'}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignUp\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setCode: (code: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setCode }) => {\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (code: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = code.length === 6\n      setHint(isValid ? '' : 'Incorrect code length.')\n      setCode(isValid ? code : '')\n      delay = null\n    }, 300)\n  }\n\n  return (\n    <TextField\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='confirmation'\n      label='Confirmation Code'\n      name='confirmation'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const phoneNumber = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!code)\n  }, [code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthConfirmSignUpEmailProps {}\n\nconst AuthConfirmSignUpEmail: React.SFC<AuthConfirmSignUpEmailProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && code))\n  }, [phoneNumber, code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUpEmail\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from './auth-context'\nimport Layout from '../app/AppLayout'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthResetProps {}\n\nconst AuthReset: React.SFC<AuthResetProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [error, setError] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [email, setEmail] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!phoneNumber)\n  }, [phoneNumber])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .resetPassword(phoneNumber)\n      .then(data => {\n        console.log('response', data, phoneNumber)\n        history.push('/auth/resetpassword/confirm', phoneNumber)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Reset Password'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthButton disabled={disable}>Reset</AuthButton>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthReset\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [password, setPassword] = useState<string>('')\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const email = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!(code && password))\n  }, [code, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmResetPassword(email, password, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(email)\n      .then(data => {\n        setMessage('Code resent to your email.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Reset'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useContext, useEffect } from 'react'\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nimport { AuthContext } from './auth-context'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport ConfirmSignUp from './ConfirmSignUp'\nimport ConfirmSignUpEmail from './ConfirmSignUpEmail'\nimport ResetPassword from './ResetPassword'\nimport ConfirmResetPassword from './ConfirmResetPassword'\n\nexport interface AuthProps {}\n\nconst Auth: React.SFC<AuthProps> = () => {\n  const authContext = useContext(AuthContext)\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('authenticated?', authContext.isAuthenticated())\n    if (authContext.isAuthenticated()) {\n      history.push('/')\n    }\n  }, [])\n\n  authContext.isAuthenticated() && history.push('/')\n\n  const routes = authContext.isAuthenticated() ? null : (\n    <Switch>\n      <Route exact path='/auth' component={SignIn} />\n      <Route exact path='/auth/signup' component={SignUp} />\n      <Route exact path='/auth/signup/confirm' component={ConfirmSignUp} />\n      <Route\n        exact\n        path='/auth/signup/confirmemail'\n        component={ConfirmSignUpEmail}\n      />\n      <Route exact path='/auth/resetpassword' component={ResetPassword} />\n      <Route\n        exact\n        path='/auth/resetpassword/confirm'\n        component={ConfirmResetPassword}\n      />\n    </Switch>\n  )\n\n  return <React.Fragment>{routes}</React.Fragment>\n}\n\nexport default Auth\n","import React, { useRef } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng, GeocodeResult } from 'use-places-autocomplete';\n//import useOnclickOutside from 'react-cool-onclickoutside';\nimport TextField from '@material-ui/core/TextField';\n\n interface LocationSearchProps {\n    googleAddressReturn: (value: GeocodeResult) => void;\n    label: string;\n  }\n  \n    const LocationSearchInput: React.SFC<LocationSearchProps> = (props) => {        \n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: { /* Define search scope here */ },\n    debounce: 500\n  });\n   const ref = useRef();\n//   useOnclickOutside(ref, () => {\n//     // When user clicks outside of the component, we can dismiss\n//     // the searched suggestions by calling this method\n//     clearSuggestions();\n//   });\n\n  const handleInput = (e: any) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  // @ts-ignore\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter as \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then(results => \n        {\n            console.log(results);\n            const { lat, lng } =  results[0].geometry.location\n            console.log('📍 Coordinates: ', results[0].geometry.location);\n\n            results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            return getLatLng(results[0]).then(({ lat, lng }) => {\n                console.log('📍 getLatLng: ', results);\n\n                results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            })\n            \n        })\n      .catch(error => {\n        console.log('😱 Error: ', error)\n      });\n\n  };\n\n  const renderSuggestions = () =>\n    data.map(suggestion => {\n      const {\n        id,\n        structured_formatting: { main_text, secondary_text }\n      } = suggestion;\n\n      return (\n        <li\n          key={id}\n          onClick={handleSelect(suggestion)}\n        >\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div>\n\n    <TextField\n            required\n            label={props.label}\n            fullWidth\n            disabled={!ready}\n            onChange={handleInput}\n            value={value}\n            autoComplete=\"billing address-level2\"\n          />\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n      {status === 'OK' && <ul>{renderSuggestions()}</ul>}\n    </div>\n  );\n};\n\nexport default LocationSearchInput;","import { GeocoderResult} from './model';\n\nexport const stripAddress = (result : GeocoderResult[] ) => {\n\n    var address_components = [\n        {\n           \"long_name\" : \"924\",\n           \"short_name\" : \"924\",\n           \"types\" : [ \"street_number\" ]\n        },\n        {\n           \"long_name\" : \"Players Court\",\n           \"short_name\" : \"Players Ct\",\n           \"types\" : [ \"route\" ]\n        },\n        {\n           \"long_name\" : \"Players Club of Brentwood\",\n           \"short_name\" : \"Players Club of Brentwood\",\n           \"types\" : [ \"neighborhood\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Nashville\",\n           \"short_name\" : \"Nashville\",\n           \"types\" : [ \"locality\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Davidson County\",\n           \"short_name\" : \"Davidson County\",\n           \"types\" : [ \"administrative_area_level_2\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Tennessee\",\n           \"short_name\" : \"TN\",\n           \"types\" : [ \"administrative_area_level_1\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"United States\",\n           \"short_name\" : \"US\",\n           \"types\" : [ \"country\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"37211\",\n           \"short_name\" : \"37211\",\n           \"types\" : [ \"postal_code\" ]\n        }\n     ]\n     \n     address_components= result[0].address_components;\n    const street_number =  address_components.filter(ll => {\n     if(ll.types.includes(\"street_number\")){\n           return true;\n     }\n     return false;\n     });\n     \n    const route= address_components.filter(ll => {\n     if(ll.types.includes(\"route\")){\n        return true;\n  }\n  return false;\n  });\n\n  const postal_code= address_components.filter(ll => {\n    if(ll.types.includes(\"postal_code\")){\n       return true;\n }\n return false;\n });\n\n const country= address_components.filter(ll => {\n    if(ll.types.includes(\"country\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_1= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_1\")){\n       return true;\n }\n return false;\n });\n\n const locality= address_components.filter(ll => {\n    if(ll.types.includes(\"locality\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_2= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_2\")){\n       return true;\n }\n return false;\n });\n\n\n     let address = {\n        address1 : street_number[0] ? street_number[0].long_name: ''+' '+\n        route[0]? route[0].long_name: '',\n        city : locality[0] ? locality[0].long_name : '',\n        county : administrative_area_level_2[0].long_name,\n        state:  administrative_area_level_1[0].long_name,\n        country : country[0].long_name,\n        zip : postal_code[0].long_name,\n       latitudes: result[0].latitudes,\n       longitudes :  result[0].longitudes,\n       formatted_address:  result[0].formatted_address\n      }\n     console.log('address',address);\n     return address;\n}","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport { GeocoderResult} from './model';\nimport LocationSearchInput from './LocationSearchInput';\nimport {stripAddress} from './util';\nimport ImageUploader from 'react-images-upload';\nimport {handleImageUpload, getImages, TVBackdrop} from '../utils';\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport interface AddressFormProps {\n  address: string;\n  nextButton: (value: string) => void\n}\n\n  const AddressForm: React.SFC<AddressFormProps> = (props) => {\n    const authContext = React.useContext(AuthContext)\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nconst handleNext = async() => {\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n\n  if( props.address){\n    const address = JSON.parse(props.address)\n    const valuessss = {...values, pictures: address.pictures, phoneNumber: phone_number, email: email}\n    props.nextButton(JSON.stringify(valuessss));\n\n  }else {\n    setLoaded(true)\n\n    console.log(\"value\",values, pictures);\n    if(pictures.length >0){\n     const S3path = await handleImageUpload(pictures); \n     console.log(\"S3path\",S3path);\n     const valuessss = {...values, pictures: JSON.stringify(S3path),\n      phoneNumber: phone_number, email: email\n    }\n     props.nextButton(JSON.stringify(valuessss));\n    }else {\n     // props.nextButton(JSON.stringify(values));\n     // setLoaded(false)\n     setError(\"picture missing\");\n    }\n    setLoaded(false)\n  }\n}\n\nReact.useEffect(() => {\n\n  const fetchData = async (inputimages: string) => {\n    const address = JSON.parse(inputimages)\n\n    let picture = null;\n    if(address.pictures){\n      const files = JSON.parse(address.pictures);\n      picture = await getImages(files);\n      console.log(\"images\", picture);\n    }\n   \n    setValues({...address, pictures: picture});\n    setLoaded(false)\n  };\n\n  if(props.address){\n    setLoaded(true)\n    fetchData(props.address);\n  } \n\n}, [props.address]);\n\n\n const [values, setValues] = useState({firstName: '', lastName: '',middelName: '',address1: '', address2: '',\n city: '', state: '',zip: '', country: '',county: '', latitudes: '', longitudes: '', aboutme: \"\", pictures: \"\"})\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {firstName, lastName, address1, city, zip, country, aboutme} = values\n    setDisable(!(firstName &&  lastName && address1 &&  city &&  zip &&  country && aboutme))\n  }, [values ])\n\n  const resultGoogle = (result: GeocoderResult[]) => {\n    console.log(\"address\",result);\n    const value = stripAddress(result);\n    setValues({...values, ...value})\n  };\n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  // onload\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  //error\n  const [error, setError] = useState<string>('')\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n      Your Information\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.firstName}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"middelName\"\n            name=\"middelName\"\n            label=\"Middel Name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.middelName}\n            autoComplete=\"middelName\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.lastName}\n            autoComplete=\"lname\"\n          />\n        </Grid>\n\n      {\n         values.address1.length < 2 ? ( \n          <Grid item xs={12} sm={6}>\n            <LocationSearchInput label= \"Enter your Home address\" googleAddressReturn={resultGoogle}\n         />\n          </Grid>\n        ):\n        <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address1}\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address2}\n            autoComplete=\"billing address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.city}\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\"\n                      onChange={handleInputChange}\n                      value={values.state}\n          fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.zip}\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.country}\n            autoComplete=\"billing country\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"aboutme\"\n          name=\"aboutme\"\n          label=\"About Me\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.aboutme}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n\n{\n  values.pictures ?\n  <img\n  style={{width:'300px', height:'300px'}}\n  src={ values.pictures}\n/>\n  \n  :\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      singleImage = {true}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n      maxFileSize={5242880}\n    />\n           \n}\n</Grid>\n\n        \n         </Grid>\n        }\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={handleNext}>next</Button>\n\n</Grid>\n\n<TVBackdrop open={loaded}/>\n<Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm\n","import React, { useState, useEffect, useCallback } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '../common/Snackbar'\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst currencies = [\n    {\n      value: 'Paypal',\n      label: 'Paypal',\n    },\n    {\n      value: 'Venmo',\n      label: 'Venmo',\n    }\n  ];\n\nexport interface PaymentFormProps {\n  payment: string;\n  nextButton: (value: string) => void\n  backButton: () => void\n}\n\nconst EmployeeBackgroundCheck: React.SFC<PaymentFormProps> = (props) => {\n\n  const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name ==\"secondaryPaymentType\" || name ==\"dob\" || name ==\"secondaryPayment\"){\n      setValues({...values, [name]: value})\n    }else {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }\n\n    const {routingNumber, bankAccountNumber, ssn, reroutingNumber, rebankAccountNumber} = values\n    if( name ==\"reroutingNumber\" && value.length > 0){\n     if( value != routingNumber){\n      setErrorA({...errorA, [name]: value})\n    }}else {\n      setErrorA({...errorA, [name]: ''})\n    }\n\n    if( name ==\"rebankAccountNumber\" && value.length > 0){\n      if(value != bankAccountNumber){\n        setErrorA({...errorA, [name]: value})\n      }else {\n        setErrorA({...errorA, [name]: ''})\n      }\n    }\n\n    if( name ==\"ssn\" && value.length > 0){\n      if( value.length === 9){\n        setErrorA({...errorA, [name]: ''})\n      }else {\n        setErrorA({...errorA, [name]: value})\n      }\n    }\n\n    if( name ==\"secondaryPayment\" && value.length > 0){\n      const re = /\\S+@\\S+\\.\\S+/;\n      if (re.test(e.target.value)) {\n        setErrorA({...errorA, [name]: ''})\n      }else {\n        setErrorA({...errorA, [name]: value})\n      }\n    }\n\n}\n\nconst [errorA, setErrorA] = useState({routingNumber: undefined, bankAccountNumber: '',ssn: '',\nbackgroundcheck: false,  secondaryPayment: '', secondaryPaymentType: '',dob: '',\nreroutingNumber: '', rebankAccountNumber: ''\n})\n\nconst handleNext = () => {\n    const {routingNumber, bankAccountNumber, ssn, reroutingNumber, rebankAccountNumber} = values\n    if(reroutingNumber !== routingNumber){\n        setError(\"Routing number mismattched\")\n        setDisable(true)\n        return\n    }\n    if(bankAccountNumber !== rebankAccountNumber){\n        setError(\"Account number mismattched\")\n        setDisable(true)\n        return\n    }\n\n    if(ssn.length < 2){\n      setError(\"SSN Number missing\")\n      setDisable(true)\n      return\n  }\n\n     console.log(\"value\",values);\n     props.nextButton(JSON.stringify(values));\n}\n\nuseEffect(() => {\n  if(props.payment) setValues(JSON.parse(props.payment))\n}, [props.payment]);\n\n const [values, setValues] = useState({routingNumber: '', bankAccountNumber: '',ssn: '',\n  backgroundcheck: false,  secondaryPayment: '', secondaryPaymentType: '',dob: '',\n  reroutingNumber: '', rebankAccountNumber: ''\n})\n\nconst [error, setError] = useState<string>('')\n\nconst setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {routingNumber, bankAccountNumber, ssn} = values;\n    (routingNumber &&  bankAccountNumber && ssn ) ?  setDisable(false) :  setDisable(true)\n\n}, [values ]);\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"routingNumber\" name=\"routingNumber\"  label=\"Routing Number\"     \n                  onChange={handleInputChange}\n            value={values.routingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"reroutingNumber\" name=\"reroutingNumber\"  label=\"Reenter Routing Number\"     \n                  onChange={handleInputChange}\n                  error = {errorA.reroutingNumber.length > 1 ? true : undefined}\n                  helperText = {errorA.reroutingNumber.length > 1 ? 'Routing number mismatch' : undefined}\n            value={values.reroutingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"bankAccountNumber\"  name=\"bankAccountNumber\" label=\"Bank Account Number\"\n                         onChange={handleInputChange}\n                         value={values.bankAccountNumber} \n          fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"rebankAccountNumber\" name=\"rebankAccountNumber\" \n          label=\"Reenter Bank Account Number\" fullWidth\n          onChange={handleInputChange}\n          value={values.rebankAccountNumber} \n          error = {errorA.rebankAccountNumber.length > 1 ? true : undefined}\n          helperText = {errorA.rebankAccountNumber.length > 1 ? 'Bank Account Number mismatached' : undefined}\n          />\n        </Grid>\n        <Divider />\n\n        <Grid item xs={12}>\n        <Typography variant=\"h6\" gutterBottom>\n        SSN Number for Background Check\n        </Typography>\n          <TextField\n            required\n            id=\"ssn\"\n            name=\"ssn\"\n            label=\"Enter SSN for background Check\"\n            error = {errorA.ssn.length > 1 ? true : undefined}\n            helperText = {errorA.ssn.length > 1 ? 'SSN should 9 digits' : undefined}\n            fullWidth\n            onChange={handleInputChange}\n            value={values.ssn} \n          />\n        </Grid>\n\n        {/* <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"dob\"\n            name=\"dob\"\n            label=\"Enter Your Date of Birth\"\n            helperText=\"Enter your date of birthday\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.dob} \n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid> */}\n        <Grid item xs={12} md={6}>\n        <label >Enter Your Date of Birth:</label>\n        <input\n    type=\"date\"\n    className=\"input-group-field\"\n    name=\"dob\"\n    id=\"dob\"\n    max={new Date().toISOString().slice(0,10)}\n    value={values.dob} \n    onChange={handleInputChange}\n    />\n</Grid>\n        <Divider />\n\n        <Grid item xs={12}>\n        <Typography variant=\"h6\" gutterBottom>\n        Secondary Payment Method\n        </Typography>\n        <TextField\n          id=\"secondaryPaymentType\"\n        name=\"secondaryPaymentType\"\n            label=\"SecondPaymentType\"\n          select\n          value={values.secondaryPaymentType}\n          onChange={handleInputChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select your currency\"\n          variant=\"outlined\"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n\n        </Grid>\n\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"secondaryPayment\"\n            name=\"secondaryPayment\"\n            label=\"Enter Your Email for Secondary Payment\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.secondaryPayment} \n            error = {errorA.secondaryPayment.length > 1 ? true : undefined}\n            helperText = {errorA.secondaryPayment.length > 1 ? 'Email Id in wrong format' : undefined}\n          />\n        </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled= {disable} \n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n      </Grid>\n\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n\n    </React.Fragment>\n  );\n}\n\nexport default EmployeeBackgroundCheck\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Themer from './AppThemer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './AppHeader'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport Container from '@material-ui/core/Container'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar';\nimport { startConvoWithUser} from '../../src/ticket/util';\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles(theme  =>\n  createStyles({\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '90vh'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n\n    stickToBottom: {\n      //width: '100%',\n     // position: 'fixed',\n    //  bottom: 0,\n    },\n    main: {\n      flexGrow: 1,\n      display: 'flex',\n      //alignItems: 'center',\n      minHeight: '90vh',\n      paddingLeft: 10,\n      paddingRight: 10,\n      paddingTop: 5\n    },\n    rootB: {\n    },\n  })\n)\n\nexport interface HomeLayoutProps {\n  title: string,\n  children: any,\n  header?: string\n}\n\nconst HomeLayout: React.SFC<HomeLayoutProps> = ({ title, children, header }) => {\n  useEffect(() => {\n    document.title = title\n  })\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n\n  const classes = useStyles()\n  const [value, setValue] = React.useState('home');\n\n  const handleChange = (event: any, newValue: any) => {\n    console.log(\"newValue\", newValue);\n    setValue(newValue);\n    if(newValue == 'account'){\n      history.push('/checkout')\n    }else if(newValue == 'home'){\n      history.push('/')\n\n    }else if(newValue == 'service'){\n      history.push('/service')\n    }\n  };\n\n  return (\n    <Themer>\n       <React.Fragment>\n      <CssBaseline />\n      <Header header= {header}/>\n\n        <main>\n        <div className={classes.appBarSpacer} />\n\n      <Paper square className={classes.paper}>\n        <Container className={classes.main}>{children}\n        </Container>\n\n      </Paper>\n\n      </main >\n\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      {/* <BottomNavigation value={value} onChange={handleChange} className={classes.stickToBottom}>\n      <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n      <BottomNavigationAction label=\"support\" value=\"support\" icon={<ContactPhoneIcon />} />\n      <BottomNavigationAction label=\"Account\" value=\"account\" icon={<AccountCircleIcon />} />\n\n    </BottomNavigation> */}\n      </AppBar>\n    </React.Fragment>\n\n      \n      \n\n    </Themer>\n  )\n}\n\nexport default HomeLayout\n","import { API} from 'aws-amplify'\n\nexport const  createCustomer=  async(email: string, phoneNumber: string) =>{\n    let myInit = { \n        response: true,\n        body: {\n            email: email,\n            phone: phoneNumber\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response =  await API.post(\"stripeapi\", \"/stripe/createcustomer\",myInit);\n    console.log(\"setupIntents\", response);\n\n    return {\n        customerId: response.data.url.id,\n        customerKey: response.data.intent.client_secret\n    }\n}\n\nexport const  payment =  async(customerId: string, money: string) =>{\n    let myInit1 = { // OPTIONAL\n        response: true,\n        body: {\n            customerId: customerId,\n            money: money\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response1 =  await API.post(\"stripeapi\", \"/stripe/createpayment\",myInit1);\n    console.log(\"setupIntents\", response1);\n    \n}","\nimport React from 'react';\nimport {useStripe, useElements} from '@stripe/react-stripe-js';\nimport {\n    CardNumberElement,\n    CardCvcElement,\n    CardExpiryElement\n  } from \"@stripe/react-stripe-js\";\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { createCustomer} from '../../utils/Stripe';\nimport { AuthContext } from '../../auth/auth-context'\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '../../common/Snackbar'\nimport {TVBackdrop} from '../../utils';\n\nimport './SplitForm.css'\n\n\nconst useOptions = () => {\n    const fontSize = \"16px\";\n    const options = React.useMemo(\n      () => ({\n        style: {\n          base: {\n            fontSize,\n            color: \"#424770\",\n            letterSpacing: \"0.025em\",\n            fontFamily: \"Source Code Pro, monospace\",\n            \"::placeholder\": {\n              color: \"#aab7c4\"\n            }\n          },\n          invalid: {\n            color: \"#9e2146\"\n          }\n        }\n      }),\n      [fontSize]\n    );\n  \n    return options;\n  };\n\n  const useStyles = makeStyles(theme => ({\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\n  \n  export interface CardSetupFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n  \nconst CardSetupForm: React.SFC<CardSetupFormProps> = (props) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const classes = useStyles();\n  const authContext = React.useContext(AuthContext)\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    //if(props.payment) setValues(JSON.parse(props.payment))\n  }, [props.payment]);\n\n  const handleSubmit = async (event: any) => {\n\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    if (values.name.length < 2) {\n        setError(\"Enter Name\")\n\n        return;\n      }\n      setLoaded(true)\n\n    const phone = authContext.user.attributes[\"phone_number\"];\n    const email = authContext.user.attributes[\"email\"];\n\n    const keys = await createCustomer(email, phone);\n\n    //@ts-ignore\n    const result = await stripe.confirmCardSetup(keys.customerKey, {\n      payment_method: {\n           //@ts-ignore\n           card: elements.getElement(CardNumberElement),\n           billing_details: {\n          name: values.name,\n        },\n      }\n    });\n\n    if (result.error) {\n        setError(result.error.message)\n\n        console.log(\"esult.setupIntent.payment_method\", result);\n\n      // Display result.error.message in your UI.\n    } else {\n        console.log(\"esult.setupIntent.payment_method\", result.setupIntent);\n      // The setup has succeeded. Display a success message and send\n      // result.setupIntent.payment_method to your server to save the\n      // card to a Customer\n      setLoaded(false)\n\n      props.nextButton(JSON.stringify({\n        ...keys,\n        name:values.name\n       // card: elements.getElement(CardNumberElement)\n    }));\n\n    }\n\n \n  };\n  const options = useOptions();\n  const [error, setError] = React.useState<string>('')\n  const [values, setValues] = React.useState({cardNumber: '', expiry: '',cvc: '', name: ''})\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n  \n  return (\n         <form onSubmit={handleSubmit}>\n             { !props.payment\n          ? \n            <Grid container spacing={1}>\n\n            <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={(e: any) => {\n                const {value} = e.target\n                setValues({...values, name: value});\n              }}            \n            value={values.name}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n\n              <label>\n        Card number\n        <CardNumberElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            // const {value} = event.target;\n            // setValues({...values, name: value});\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        Expiration date\n        <CardExpiryElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        CVC\n        <CardCvcElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled={!stripe}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n              <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        </Grid>\n: \n<Grid\ncontainer\ndirection=\"row\"\njustify=\"center\"\nalignItems=\"center\"\n>\n<div> Currently, you will not be able to change your payment details here. Contact us at contact@travtail.com to request for changes to your payment details.</div>\n</Grid>\n}\n<TVBackdrop open={loaded}/>\n\n    </form>   \n  );\n}\n\nexport default  CardSetupForm;","import React from 'react';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nimport CheckoutForm from './CardSetupForm';\n\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\"pk_test_n28At7VrrTS32nAdaH5oyTo100BjZFd5oo\");\n\nexport interface PaymentFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n\n  \nconst Stripe: React.SFC<PaymentFormProps> = (props) => {\n\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm address={props.address} payment={props.payment} nextButton= {props.nextButton} backButton= {props.backButton}/>\n    </Elements>\n  );\n}\n\nexport default  Stripe;","import React, { useEffect, useCallback, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport EmployeeBackgroundCheck from './EmployeeBackgroundCheck';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { registerUser, updateUser} from '../graphql/mutations'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport {  getFullUser } from '../graphql/queries'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Stripe from './Stripe/Stripe';\n\nimport Snackbar from '../common/Snackbar'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport interface CheckoutProps {}\n\nconst Checkout: React.SFC<CheckoutProps> = () => {\n    const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [address, setAddress] = React.useState(\"\");\n  const [payment, setPayment] = React.useState(\"\");\n  const [error, setError] = useState<string>('')\n  const [isCreate, setisCreate] = useState<boolean>(true)\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n  const [isEmp, setisEmp] = useState<boolean>(false)\n  const [backdrop, setBackdrop] = React.useState(false);\n\n  const steps = ['Your Information', 'Payment details'];\n\n  const navigator_utl = () =>{\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        if(Object.keys(position).length > 0){\n          // setlatitudes(position.coords.latitude.toString());\n          // setlongitudes(position.coords.longitude.toString());\n        }else {\n          setError(\"longitude and latitude missing\")\n        }\n      },\n      error => {\n        setError(error.message)\n      },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n  }\n\n// useEffect(() => {\n//   navigator_utl();\n// }, []);\n\n\nuseEffect(() => {\n  if(authContext && authContext.userId && authContext.user ){\n\n    const type = authContext.user.attributes[\"custom:account_type\"];\n    type ===\"Customer\" ? setisEmp(false) : setisEmp(true)\n  \n    const op =  getFullUser//type ===\"Customer\" ? getFullUser : getFullEmployee;    \n\n    const id = authContext.userId;\n  //\"37ff912b-27ac-4e5d-87e5-a4edaad80213\";\n  (async function anyNameFunction() {\n    const commentData = await API.graphql(graphqlOperation(op, { id }))\n    console.log('fetchDate',commentData); \n\n    //@ts-ignore\n    if(commentData.data.getUser){\n      setisCreate(false);\n    //@ts-ignore\n    setAddress(commentData.data.getUser.address)\n        //@ts-ignore\n    setPayment(commentData.data.getUser.cardInfo)\n    }\n\n   })();\n  }\n  \n}, [authContext.userId]);\n\n\n\n  const updateProfile = async(paymentV: string) =>{\n\n    setBackdrop(true)\n    const id = authContext.userId;\n    const type = authContext.user.attributes[\"custom:account_type\"];\n\n    const op =  type ===\"Customer\" ? (isCreate?  registerUser: updateUser) :\n       (isCreate?  registerUser: updateUser)\n       \n     // isCreate ? registerUser : updateUser\n    const response =  await API.graphql(\n      graphqlOperation(op, { input: {\n        id : id,\n        username : JSON.parse(address).firstName,\n        registered : \"yes\",\n        active : type ===\"Customer\" ? true :false,\n        usertype:  type ===\"Customer\" ? \"Customer\" :\"Employee\",\n        address : address,\n        zipcode : JSON.parse(address).zip,\n        latitudes: JSON.parse(address).latitudes,\n        longitudes :  JSON.parse(address).longitudes,\n        aboutme: JSON.parse(address).aboutme,\n        avatar: JSON.parse(address).pictures,\n        cardInfo :  paymentV,\n        county: JSON.parse(address).county\n      } })\n  );\n  console.log(\"response\", response);\n  setBackdrop(false);\n\n  history.push('/');\n\n\n  }\n\nconst nextButton = async(value: string) => {\n  console.log(\"nextButton\", value);\n  if(activeStep == 0){\n    setAddress(value);\n  }else if(activeStep == 1)\n  {\n    setPayment(value);\n    updateProfile(value);\n    return;\n  }\n  handleNext();\n}\n\n function getStepContent(step: any) {\n\n  switch (step) {\n    case 0:\n      return <AddressForm address={address} nextButton= {nextButton} />;\n    case 1:\n       if(isEmp){\n         return <EmployeeBackgroundCheck payment={payment} nextButton= {nextButton} backButton= {handleBack} />;\n       }else {\n           return <Stripe address={address} payment={payment} nextButton= {nextButton} backButton= {handleBack} />\n       }   \n    // case 2:\n    //   return <Review address={address} payment={payment} nextButton= {updateProfile} backButton= {handleBack}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n\n}\n\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n    <AppHomeLayout title='Profile List' header = \"profile\">\n\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Need Update BackEnd.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n      </AppHomeLayout>\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      <Backdrop className={classes.backdrop} open={backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </React.Fragment>\n  );\n}\n\nexport default Checkout;\n","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\n//import {Ticket} from './model'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\n//@ts-ignore\n//import DateTimePicker from 'react-datetime-picker';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport AppHomeLayout from '../app/AppHomeLayout'\n//import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { createTicket, createUserTicket } from '../graphql/mutations'\nimport { useHistory } from 'react-router-dom'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport { AuthContext } from '../auth/auth-context'\nimport ImageUploader from 'react-images-upload';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport {handleImageUpload} from '../utils/S3Handler';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n// @ts-ignore\nimport DatePicker from \"react-datepicker\";\n\nimport setHours from \"date-fns/setHours\";\nimport setMinutes from \"date-fns/setMinutes\";\nimport addDays from \"date-fns/addDays\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  time:{\n    display: 'block',\n    margin: '10px 0 5px 0',\n    padding: '10px 14px'\n  },\n  date:{\n    display: 'block',\n    boxShadow: 'rgba(50, 50, 93, 0.14902) 0px 1px 3px,rgba(0, 0, 0, 0.0196078) 0px 1px 0px',\n    margin: '10px 0 5px 0',\n    padding: '10px 14px',\n    fontFamily: 'Roboto,sans-serif',\n    fontWeight: 400,\n    fontSize: 16,\n    lineHeight: 1.43\n  },\n  jobtype: {\n    marginTop: 15\n  }\n}));\n\nexport interface AddressFormProps {\n  nextButton: (value: string) => void\n}\n\n  const CreateTicket: React.SFC<AddressFormProps> = (props) => {\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name == \"price\"){\n      const re = /^([1-9]{0,2}((.)[0-9]{0,2}))$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }else {\n      setValues({...values, [name]: value})\n\n    }\n}\nconst history = useHistory()\nconst authContext = React.useContext(AuthContext)\n\n\nconst createNewTicket = async() =>{\n  console.log(\"createNewTicket\", values);\n  const id = authContext.userId;\n\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n  const ticketUserInfo = JSON.stringify({\n    email: email,\n    phoneNumber: phone_number\n  });\n  let S3path: any[] = [];\n  if(pictures.length > 0){\n     S3path = await handleImageUpload(pictures); \n  }\n\n  const newId= uuid();\n  //const county = \"Davidson County\";\n\n  const response =  await API.graphql(\n    graphqlOperation(createTicket, { input: {\n      id: newId,\n      countAndId: `${values.county}_${newId}`,\n      price : values.price,\n      time : values.time,\n      title : values.title,\n      content:  values.content ,\n      destination : values.destination? values.destination: values.source,\n      source : values.source ?? \"Davidson County\" ,\n      county: values.county,\n      ownerUploadImages : JSON.stringify(S3path),\n      ticketUserId: id,\n      status: 'open',\n      ticketType: values.ticketType,\n      ticketUserInfo: ticketUserInfo,\n    } })\n);\nconsole.log(\"response\", response);\n\nconst responseLink =  await API.graphql(\n  graphqlOperation(createUserTicket, { input: {\n    id:  uuid(),\n    ticketID : newId,\n    userID : id\n  } })\n  );\n\n\nhistory.push('/')\n\n}\nconst sourceGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, source: value.formatted_address, county: value.county})\n};\n\nconst destGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, destination: value.formatted_address})\n};\n\n const [values, setValues] = useState({ content: '',price: '', title: '',\n source: '', destination: '',time: \"\", county: '', daytime: '', terms: false , ticketType: ''})\n\n//  const [dayTime, setDayTime] = useState({ hour: '',min: '', non: ''});\n\n//  const handleDayTimeChange = (e: any) => {\n//   const {name, value} = e.target\n//   console.log(\"handleDayTimeChange\",name, value);\n\n//     setDayTime({...dayTime, [name]: value})\n// }\n\n// useEffect(() => {\n//   setValues({...values, [\"daytime\"]: `${dayTime.hour}:${dayTime.min}:${dayTime.non}`})\n// }, [dayTime ]);\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {content, title, price,  time, terms, ticketType} = values\n    //const {hour, min, non} = dayTime\n    setDisable(!(content &&  title && price  &&  time  && terms && ticketType))\n  }, [values ]);\n\n  //const [terms, setTerms] = useState<boolean>(false)\n  const [destAddress, setDestAddress] = useState<boolean>(false)\n\n  const handleCheckedChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const {name, checked} = event.target\n    if(name === \"destAddress\"){\n      checked? setDestAddress(true) : setDestAddress(false)\n    }else {\n      checked? setValues({...values, \"terms\": true})\n      : setValues({...values, \"terms\": false})\n    }\n  };\n  \n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n  const [key, setKey] = useState<any>({});\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  const [startDate, setStartDate] = useState<string>(\"\");\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValues({...values, [\"ticketType\"]: event.target.value})\n  };\n\n  const handleTimeChange = (event: string) => {\n    console.log(\"handleTimeChange\", event );\n    setValues({...values, [\"time\"]: event})\n  };\n\n  return (\n    <React.Fragment>\n          <AppHomeLayout title='RA2 Serverless'>\n          <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n\n      <Typography variant=\"h6\" gutterBottom >\n      Job Details\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n        \n        <FormControl className={classes.jobtype} component=\"fieldset\">\n      <FormLabel component=\"legend\">Job Type</FormLabel>\n      <RadioGroup row aria-label=\"position\"  value={values.ticketType} onChange={handleRadioChange}>\n      <FormControlLabel value=\"Normal\" control={<Radio />} label=\"Normal\" />\n          <FormControlLabel value=\"Bid\" control={<Radio />} label=\"Bid\" />\n      </RadioGroup>\n    </FormControl>\n\n        </Grid>\n\n        <Grid item xs={12} >\n          <TextField\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} >\n          <LocationSearchInput label = \"Start Location\" googleAddressReturn={sourceGoogle}\n         />\n          </Grid>\n\n          <Grid item xs={12}>\n\n<FormControlLabel\ncontrol={\n<Tooltip title=\"Delete\">\n\n<Checkbox\nchecked={destAddress}\nonChange={handleCheckedChange}\nname=\"destAddress\"\ncolor=\"primary\"\n/>\n</Tooltip>\n\n}\nlabel=\"I have a different end location\"\n/>\n</Grid>\n\n         {\ndestAddress?\n<Grid item xs={12} sm={6}>\n          <LocationSearchInput label = \"Destination/End Location\" googleAddressReturn={destGoogle}\n         />\n          </Grid> : null\n         } \n\n        <Grid item xs={12}>\n        <label >Time:</label>\n        <DatePicker\n      selected={values.time}\n      onChange={handleTimeChange}\n      showTimeSelect\n      minTime={setHours(setMinutes(new Date(), 0), 7)}\n      maxTime={setHours(setMinutes(new Date(), 30), 22)}\n      minDate={new Date()}\n      maxDate={addDays(new Date(), 30)}\n      placeholderText=\"Click to select a date\"\n      dateFormat=\"MMMM d, yyyy h:mm aa\"\n      className={classes.date}\n    />\n        </Grid>\n\n\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".jpeg\"]}\n      maxFileSize={5242880}\n    />\n            </Grid>\n            <Grid item xs={12}>\n\n            <FormControlLabel\n        control={\n          <Tooltip title=\"Delete\">\n\n          <Checkbox\n            checked={values.terms}\n            onChange={handleCheckedChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n          </Tooltip>\n\n        }\n        label=\"Terms of Service\"\n      />\n      <br></br>By requesting this service on Travtail, you agree \n      to our terms of service. For questions about \n      our terms of service, please visit Click <a href=\"https://travtail.com/tos\">travtail</a>\n            </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={createNewTicket}>Create Request</Button>\n\n</Grid>\n      </Grid>\n\n      </Paper>\n      </main>\n\n      </AppHomeLayout>\n    </React.Fragment>\n  );\n}\n\nexport default CreateTicket\n","import gql from 'graphql-tag'\n\nexport const onCreateMessage = gql`\n  subscription OnCreateMessage($messageConversationId: ID!) {\n    onCreateMessage(messageConversationId: $messageConversationId) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const onCreateTicket = gql`\n  subscription OnCreateTicket($county: String!) {\n    onCreateTicket(county: $county) {\n      id\n      countAndId\n      ticketUserId\n      owner\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeInfo\n      ticketEmployeeId\n      ticketUserInfo\n      ownerUploadImages\n      employeeUploadImages\n      closedComment\n      ticketType\n      execptedPrice\n    }\n  }\n`\n\nexport const onUpdatedTicket = gql`\n  subscription OnUpdatedTicket($county: String!) {\n    onUpdatedTicket(county: $county) {\n      id\n      content\n      time\n      destination\n      ticketType\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n      closedComment\n      closedTime\n      execptedPrice\n    }\n  }\n`\n\nexport const onUpdateConvoLink = gql`\n  subscription OnUpdateConvoLink($convoLinkUserId: ID, $status: String) {\n    onUpdateConvoLink(convoLinkUserId: $convoLinkUserId, status: $status) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","\n  import {Employee} from '../utils'\n  \n  export interface Ticket {\n  id: string\n  content: string\n  createdAt: string\n  owner: string\n  ticketUserId: string\n  ticketEmployeeId: string\n  completed: boolean\n  price: string\n  file: any\n  title: string\n  county: string\n  source: string\n  destination: string\n  time: string\n  status: string\n  closedComment: string\n  closedTime: string\n  ownerUploadImages: string\n  employeeUploadImages: string\n  employee: Employee,\n  daytime: string,\n  ticketType: string,\n  execptedPrice : string\n  }\n  export interface bidserviceProvider {\n    serviceProvider: string,\n    price: string,\n    username ?: string,\n    email?: string,\n    phonenumber?: string\n  }\n\n  export const isServiceProviderBid = ( id: string, ticket: Ticket) => {\n    const bidExperts = ticket.execptedPrice ? JSON.parse(ticket.execptedPrice) : []\n    const currentBid = bidExperts.filter(function(el: any) { return (el.serviceProvider === id) })\n    return currentBid.length > 0 ? false : true \n  }\n\n  export const getServiceProviderBid = ( id: string, ticket: Ticket): bidserviceProvider| undefined => {\n    const bidExperts = ticket.execptedPrice ? JSON.parse(ticket.execptedPrice) : []\n    const currentBid = bidExperts.filter(function(el: any) { return (el.serviceProvider === id) })\n    return currentBid.length > 0 ? currentBid[0] : undefined\n  }","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { DialogTitle } from '../utils/DialogTitle';\nimport Rating, { IconContainerProps } from '@material-ui/lab/Rating';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst customIcons: { [index: string]: { icon: React.ReactElement; label: string } } = {\n  1: {\n    icon: <SentimentVeryDissatisfiedIcon />,\n    label: 'Very Dissatisfied',\n  },\n  2: {\n    icon: <SentimentDissatisfiedIcon />,\n    label: 'Dissatisfied',\n  },\n  3: {\n    icon: <SentimentSatisfiedIcon />,\n    label: 'Neutral',\n  },\n  4: {\n    icon: <SentimentSatisfiedAltIcon />,\n    label: 'Satisfied',\n  },\n  5: {\n    icon: <SentimentVerySatisfiedIcon />,\n    label: 'Very Satisfied',\n  },\n};\n\nconst StyledRating = withStyles({\n  iconFilled: {\n    color: '#ff6d75',\n  },\n  iconHover: {\n    color: '#ff3d47',\n  },\n})(Rating);\n\nfunction IconContainer(props: IconContainerProps) {\n  const { value, ...other } = props;\n  return <span {...other}>{customIcons[value].icon}</span>;\n}\n\ninterface AlertDialogProps {\n    openPop: boolean;\n    type: string\n    closeAlert: (op: boolean, data: string) => void;\n  }\n\n const AlertDialog: React.SFC<AlertDialogProps> = ({ openPop,type,  closeAlert}) => {\n\n    const [disable, setDisable] = React.useState<boolean>(true)\n    const [textValue, setTextValue] =  React.useState<string>(\"\");\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setTextValue(value)\n    if(textValue && textValue.length > 0){\n        setDisable(false)\n    }\n}\n\nconst handleOperation = () => {\n    closeAlert(true, textValue);\n  };\n\n  const handleClose = () => {\n    closeAlert(false, \"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        keepMounted\n        fullWidth ={true}\n        maxWidth=\"lg\"\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n          {\n              type == \"closed\" ?(< div>\n              <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} > Close Ticket</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                Do you want close ticket? <br></br>\n                Reasons for cancellation.\n                </DialogContentText>\n                <TextField\n          multiline\n          rows=\"4\"\n          required\n          id=\"content\"\n          autoFocus\n          name=\"content\"\n          label=\"Close ticket\"\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\n        <Typography component=\"legend\">Rating</Typography>\n        <Rating\n          name=\"Rating\"\n          defaultValue={2}\n          getLabelText={(value: number) => customIcons[value].label}\n          IconContainerComponent={IconContainer}\n        />\n      </Box>\n\n              </DialogContent>\n              <DialogActions>\n                <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"secondary\">\n                  Close Ticket\n                </Button>\n              </DialogActions> </div>) : \n\n              (< div>\n                <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} >{type}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                {type== \"completed\" ? \"Completed\" : \"Unassign\"} comments .\n                </DialogContentText>\n            <TextField\n          multiline\n          rows=\"6\"\n          required\n          autoFocus\n          id=\"content\"\n          name=\"content\"\n          label={type== \"completed\" ? \"Completed\" : \"Unassign\"}\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n\n\n                </DialogContent>\n                <DialogActions>\n                  <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"primary\">\n                  {type== \"completed\" ? \"Completed\" : \"Unassign\"}\n                  </Button>\n                </DialogActions> </div>)\n\n          }\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialog;","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages, Employee } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {  getFullUser } from '../graphql/queries'\nimport { API, graphqlOperation } from 'aws-amplify'\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  employee: string;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ExpertViewer: React.SFC<AcceptProps> = ({employee, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n  const [emp, setEmp] = React.useState<Employee>();\n\n  React.useEffect(() => {\n    const fetchData = async (phone: string) => {\n\n      const empDate = await API.graphql(graphqlOperation(getFullUser, { id: employee }))\n      //@ts-ignore\n      if(empDate.data.getUser){\n      //@ts-ignore\n       let emp =  empDate.data.getUser;\n\n        const address = JSON.parse(emp.address);\n        setEmp({\n            id : emp.id,\n            avatar : \"\",\n            address: \"\",\n            aboutme: address.aboutme,\n            phoneNumber: address.phoneNumber,\n            username : `${address.firstName} ${address.lastName}`\n        })\n        if(address.pictures){\n            const files = JSON.parse(address.pictures);\n            const result = await getImages(files);\n            //@ts-ignore\n            setImages(result);\n        }\n\n      }\n\n    };\n    const id = authContext.userId;\n    if(id){\n       const phone =  authContext.user.attributes[\"phone_number\"];\n        fetchData(phone);\n    }\n  }, [authContext.userId]);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return ( emp ?\n      <Dialog\n        open={openPop}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Service Provider Details</DialogTitle>\n        <div className={classes.container}>\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n           disabled = {true}\n            required\n            id=\"username\"\n            name=\"username\"\n            label=\"UserName\"\n            fullWidth\n            defaultValue={emp.username}\n            autoComplete=\"username\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {true}\n\n            required\n            id=\"aboutme\"\n            name=\"aboutme\"\n            label=\"About Me\"\n            fullWidth\n            defaultValue={emp.aboutme}\n            autoComplete=\"aboutme\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n             disabled = {true}\n\n            required\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone Number\"\n            fullWidth\n            defaultValue={emp.phoneNumber}\n            autoComplete=\"phoneNumber\"\n          />\n        </Grid>\n\n        </Grid>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog> : null\n  );\n}\n\nexport default ExpertViewer;","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport Button from '@material-ui/core/Button';\nimport DialogActions from '@material-ui/core/DialogActions';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { DialogTitle, getImages, Employee } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean, execptedPrice: string, isNew: boolean) => void;\n  execptedPrice: string;\n  id : string,\n  user: any\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst BidDialog: React.SFC<AcceptProps> = ({execptedPrice, user, openPop, id, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const classes = useStyles();\n  const [price, setPrice] = React.useState<string>(\"\");\n  const [newPrice, setNewPrice] = React.useState<string>(\"\");\n\n  React.useEffect(() => {\n\n   const bidExperts = execptedPrice ? JSON.parse(execptedPrice) : []\n   const currentBid = bidExperts.filter(function(el: any) { return (el.serviceProvider === id) })\n   setPrice(currentBid.length > 0 ? currentBid[0].price : \"\" );\n\n  }, [execptedPrice, id]);\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n  const handleInputChange = (e: any) => {\n    const {value} = e.target\n    setNewPrice(value)\n}\n\n  const handleClose = () => {\n      if(newPrice.length >0){\n        let items = []\n        // price exist means its updating bid\n        if(price.length > 0){\n            const bidExperts = JSON.parse(execptedPrice)\n\n            bidExperts.forEach((element: any, index: number) => {\n                if(element.serviceProvider === id) {\n                    bidExperts[index].price = newPrice;\n                }\n            });\n            console.log(\"bidExperts\",bidExperts);\n            closeAlert(true, JSON.stringify(bidExperts), false);\n\n        }else {\n            items.push({\n                serviceProvider: id,\n                price: newPrice,\n                username : user?.username\n              })\n            console.log(\"bidExperts\",items);\n            closeAlert(true, JSON.stringify(items), true);\n        }\n      }else {\n        closeAlert(false, \"\", false);\n      }\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return ( \n      <Dialog\n        open={openPop}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Service Provider Details</DialogTitle>\n        <div className={classes.container}>\n\n        <Grid container spacing={1}>\n        {price && price.length > 0 ?\n        <Grid item xs={12} >\n          <TextField\n           disabled = {true}\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"old price\"\n            fullWidth\n            defaultValue={price}\n            autoComplete=\"old price\"\n          />\n        </Grid>: null}\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"newprice\"\n            name=\"newprice\"\n            label={price && price.length > 0 ?\"Latest price\": \"Enter your Bid amount\"} \n            fullWidth\n            value={newPrice}\n            onChange={handleInputChange}\n            autoComplete=\"Bid Amount\"\n          />\n        </Grid>\n\n        </Grid>\n\n      </div>\n\n      <DialogActions>\n          <Button onClick={handleClose} variant=\"contained\" color=\"primary\" autoFocus>\n            Bid\n          </Button>\n        </DialogActions>\n\n      </Dialog>\n  );\n}\n\nexport default BidDialog;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {Ticket, bidserviceProvider, getServiceProviderBid} from './model';\nimport { assignExpertToTicket, updateTicket, createUserTicket } from '../graphql/mutations'\nimport { API, graphqlOperation} from 'aws-amplify'\nimport { AuthContext } from '../auth/auth-context'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport { DialogTitle } from '../utils/DialogTitle';\nimport AlertDialog from './AlertDialog';\nimport ImageViewer from '../utils/ImageViewer';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ExpertViewer from '../utils/ExpertViewer';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { startConvoWithUser} from './util';\nimport { useHistory } from 'react-router-dom'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\n\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Typography from '@material-ui/core/Typography';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport BidDialog from '../utils/BidDialog';\n\ninterface AcceptProps {\n  openPop: boolean;\n  close: (op: boolean, updateTicket: Ticket) => void;\n  data: Ticket;\n  setIsEmployee : boolean;\n  user: any\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      //maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    subHeader: {\n      color: \"rgba(0, 0, 0, 0.98)\",\n      fontSize: 18,\n      fontWeight: 900,\n  },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        width: 10,\n        marginBottom: 8,\n        marginLeft: 5\n    }\n  }),\n);\n\nconst AcceptTicket: React.SFC<AcceptProps> = ({data,user, openPop, close, setIsEmployee}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [formEdit, setFormEdit] = React.useState(true);\n  const history = useHistory()\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nReact.useEffect(() => {\n  if(data.id){\n    setValues(data)\n    if(data.execptedPrice){\n      setBids(JSON.parse(data.execptedPrice))\n    }\n  }\n  setclosedComment(data.closedComment)\n}, [data]);\n\nconst [bids, setBids] = React.useState<bidserviceProvider[]>([]);\n\nconst [closedComment, setclosedComment] = React.useState(\"\");\n\nconst [values, setValues] = React.useState({ content: '',price: '', title: '',\nsource: '', destination: '',time: \"\", county: ''})\n\nconst [bidAmount, setBidAmount] = React.useState(\"\");\n\nconst handleBidAmount = (e: any) => {\n  OpenBidShow();\n}\n\n\nReact.useEffect(() => {\n  if(authContext && authContext.userId ){\n  (async function anyNameFunction() {\n    const bidinfo = getServiceProviderBid(authContext.userId, data);\n    if(bidinfo)  setBidAmount(bidinfo.price) \n   })();\n  }\n  \n}, [authContext.userId]);\n\n\n\n\n  const acceptTicket = async() =>{\n    const authid = authContext.userId;\n\n    // accept Job by employee\n    if(setIsEmployee){\n\n      const phone_number = authContext.user.attributes[\"phone_number\"];\n      const  email = authContext.user.attributes[\"email\"];\n      const ticketEmployeeInfo = JSON.stringify({\n        email: email,\n        phoneNumber: phone_number,\n      });\n\n        const response =  await API.graphql(\n          graphqlOperation(assignExpertToTicket, {\n            id: data.id,\n            ticketEmployeeId: authid,\n            ticketEmployeeInfo: ticketEmployeeInfo\n          } )\n      );\n      console.log(\"accept ticket by employee\", response);\n      close(true, {...data, status: \"assinged\", ticketEmployeeId: authid });\n      const responseLink =  await API.graphql(\n        graphqlOperation(createUserTicket, { input: {\n          id:  uuid(),\n          ticketID : data.id,\n          userID : authid\n        } })\n        );\n    \n    } // make form editable\n    else if(formEdit) {\n      setFormEdit(false)\n\n    }// updated ticket by customer\n    else if(formEdit == false){\n      const response =  await API.graphql(\n        graphqlOperation(updateTicket, { input: {\n          id: data.id,\n          price : values.price,\n          time : values.time,\n          title : values.title,\n          content:  values.content ,\n          county: values.county,\n          destination : values.destination  ??  \"sfsfsf\" ,\n          source : values.source  ?? \"sfsfsf\",\n        } }\n        \n        )\n    );\n    console.log(\"update ticke4t info\", {...data , ...values});\n    close(true, {...data , ...values});\n    }\n  \n}\n\nconst acceptBid = async(item: bidserviceProvider) => {\n  \n  const response =  await API.graphql(\n    graphqlOperation(assignExpertToTicket, {\n      id: data.id,\n      price: item.price,\n      ticketEmployeeId: item.serviceProvider,\n      ticketEmployeeInfo: JSON.stringify({item})\n    } )\n);\nconsole.log(\"accept ticket by employee\", response);\nclose(true, {...data, status: \"assinged\", ticketEmployeeId: item.serviceProvider });\n\n };\n\nconst closeTicket = () => {\n setAlertType(\"closed\")\n setOpenAlert(true)\n};\n\nconst completeTicket = () => {\n  setAlertType(\"completed\")\n  setOpenAlert(true)\n };\n \n const unassignTicket = () => {\n  setAlertType(\"unassign\")\n  setOpenAlert(true)\n };\n\n\n  const handleClose = () => {\n    close(false,data);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n\n  // second alert options\n\n  const [openAlert, setOpenAlert] = React.useState(false)\n  const [alertType, setAlertType] = React.useState(\"\")\n\n  const closeAlert = async(op: boolean, comments: string) => {\n\n    if(op == true ){\n      if ( alertType == \"unassign\"){\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n            status: \"open\",\n            ticketEmployeeId: null,\n            ticketEmployeeInfo: null\n          } }\n          )\n        );\n      console.log(\"unassign close\", response);\n      close(true, {...data , ...values, status: \"open\"});\n  \n      } // completed or closed\n      else {\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n          status: alertType,\n          closedComment: comments,\n          closedTime: new Date().toUTCString()\n          } }\n          )\n        );\n      console.log(\"update ticke4t to close\", response);\n      close(true, {...data , ...values, status: alertType});\n      }\n  \n    }else {\n      setOpenAlert(false)\n    }\n \n  };\n\n  // imageViewer\n  const [openUserImage, setOpenUserImage] = React.useState(false)\n\n  const imageListen = async() => {\n    setOpenUserImage(true);\n  }\n\n  const closeAttachment =(op: boolean) =>{\n    setOpenUserImage(false);\n  }\n\n\n    // expertView\n    const [openExpert, setExpert] = React.useState(false)\n\n    const expertShow = async() => {\n      setExpert(true);\n    }\n  \n    const closeExpertShow =(op: boolean) =>{\n      setExpert(false);\n    }\n\n    const chatWithExpert = async() => {\n      const currentId = authContext.userId;\n      const otherId = data.ticketEmployeeId;\n     const conv = await startConvoWithUser(data.ticketUserId, otherId, setIsEmployee );\n\n     history.push({\n      pathname: '/chat',\n      state: { conversation: conv, user: currentId  }\n    });\n\n    }\n    \n    const sourceGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, source: value.formatted_address})\n    };\n    \n    const destGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, destination: value.formatted_address, county: value.county})\n    };\n\n\n    //   bidVeiw\n    const [openBid, setOpenBid] = React.useState(false)\n\n    const OpenBidShow = () => {\n      setOpenBid(true);\n    }\n  \n    const CloseBidShow = async(op: boolean, execptedPrice: string, isNew: boolean) =>{\n      setOpenBid(false);\n      if(op === true ){\n        console.log(\"execptedPrice\",execptedPrice);\n         await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n            execptedPrice : execptedPrice\n          } }\n          ));\n        if(isNew) {\n              await API.graphql(\n              graphqlOperation(createUserTicket, { input: {\n                id:  uuid(),\n                ticketID : data.id,\n                userID : authContext.userId\n              } })\n              );    \n        }\n        close(true, {...data, execptedPrice: execptedPrice, status: \"open\" });\n      }\n    }\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Job Details</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {formEdit}\n\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled = {formEdit}\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"source\" googleAddressReturn={sourceGoogle}\n    />\n  ): \n  <TextField label = \"source\" \n  name=\"source\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.source}\n/>\n}\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"destination\" googleAddressReturn={destGoogle}\n    />\n  ): \n  <TextField label = \"destination\" \n  name=\"destination\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.destination}\n/>\n}\n          </Grid>\n\n        <Grid item xs={12}>\n        {\n  formEdit == false? (\n    <TextField\nrequired\nid=\"time\"\nname=\"time\"\nlabel=\"time\"\ntype=\"datetime-local\"\nfullWidth\nonChange={handleInputChange}\nvalue={new Date(values.time).toLocaleString()}\nInputLabelProps={{\nshrink: true,\n}}\n/>\n  ): \n  <TextField label = \"time\" \n  name=\"time\"\n  fullWidth\n  disabled = {true}\n  defaultValue={new Date(values.time).toLocaleString()}\n/>\n}\n\n\n        </Grid>\n        <Grid item xs={12}>\n        <TextField\n          disabled = {formEdit}\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        { \n         bidAmount && setIsEmployee ?\n        <Grid item xs={12} sm={6}>\n          <TextField\n            disabled = {true}\n            required\n            id=\"bidAmount\"\n            name=\"bidAmount\"\n            label=\"Bid Amount\"\n            fullWidth\n            value={bidAmount}\n            autoComplete=\"Enter Bid Amount\"\n          />\n        </Grid> : null } \n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? \n          <Grid item xs={12}>\n          <TextField\n            disabled = {formEdit}\n            multiline\n            rows=\"3\"\n            required\n            id=\"closedComment\"\n            name=\"closedComment\"\n            label=\"closedComment\"\n            fullWidth\n            value={closedComment}\n            autoComplete=\"content\"\n          />\n          </Grid>\n          : null}      \n\n\n        <Grid item xs={12} \n          container direction=\"row\"\n        >\n        {\n          data.ticketEmployeeId ?\n          \n         ( <div>\n           <Chip\n        icon={<FaceIcon />}\n        label=\"Expert Info\"\n        clickable\n        color=\"primary\"\n        onClick={expertShow}\n        deleteIcon={<DoneIcon />}/>\n\n        <Chip\n        icon={<FaceIcon />}\n        label=\"Start Chat\"\n        clickable\n        color=\"primary\"\n        onClick={chatWithExpert}\n        deleteIcon={<ChatIcon />}/>\n\n         </div>\n         )\n        : null\n        }\n        { data.ownerUploadImages && JSON.parse(data.ownerUploadImages).length >0 ?\n              <Chip\n              label=\"See Attachments\"\n              clickable\n              color=\"primary\"\n              onClick={imageListen}\n              deleteIcon={<AttachmentIcon />}\n\n            />  : null\n        }\n        </Grid> \n\n{\n  data.status == \"open\" && setIsEmployee == false && data.ticketType === \"Bid\"? \n\n    <List \n    className={classes.root}\n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            Bids\n          </ListSubheader>\n        }\n    >\n\n    {bids.length > 0 ? bids.map(item => (\n      <div key={item.serviceProvider} >\n          <ListItem  key={item.serviceProvider}  alignItems=\"flex-start\" >\n          <ListItemText\n        primary= {`Name: ${item.username}  Price: ${item.price} `} \n      />\n         <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n      <Button  size=\"small\" color=\"primary\"variant=\"contained\" onClick={()=> acceptBid(item)} >\n            Accept \n          </Button>\n    </Grid>\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n:null}\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n</Grid>\n      </Grid>\n        </DialogContent>\n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? null :\n        <DialogActions>\n        { setIsEmployee == false?     \n          \n          <Button variant=\"contained\" onClick={closeTicket} >\n            Cancel Job\n          </Button> :\n            null}\n\n         { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={unassignTicket} color=\"secondary\">\n            Unassign\n          </Button> :\n            null}\n\n          { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={completeTicket} color=\"primary\">\n            Complete Job\n          </Button> :\n            null}\n          {\n            data.status == \"open\" && setIsEmployee == true ?\n          <Button onClick={handleBidAmount}  variant=\"contained\" color=\"primary\">\n          { data.ticketType === \"Bid\" ?\"Bid\" : \"Accept\"}\n        </Button> : null\n          }\n\n          {\n            data.status == \"open\" && setIsEmployee == false ?\n          <Button onClick={acceptTicket}  variant=\"contained\" color=\"primary\">\n          { formEdit == false ?\"Update\" : \"Edit\"}\n        </Button> : null\n          }\n          {\n            data.status == \"assinged\" && setIsEmployee == false ?\n          <Button onClick={acceptTicket}  variant=\"contained\" color=\"primary\">\n          Edit\n        </Button> : null\n          }\n        </DialogActions> \n        }\n      </Dialog>\n      {openAlert? <AlertDialog  type={alertType} openPop={openAlert} closeAlert={closeAlert}/> : null}\n      {openUserImage? <ImageViewer  inputimages={data.ownerUploadImages} openPop={openUserImage} closeAlert={closeAttachment}/> : null}\n      {openExpert? <ExpertViewer  employee={data.ticketEmployeeId} openPop={openExpert} closeAlert={closeExpertShow}/> : null}\n      {openBid? <BidDialog user= {user} id={authContext.userId} execptedPrice={data.execptedPrice} openPop={openBid} closeAlert={CloseBidShow}/> : null}\n\n    </div>\n  );\n}\n\nexport default AcceptTicket;","import React, { useEffect, useCallback, useState } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { AuthContext } from '../auth/auth-context'\nimport { onCreateTicket, onUpdatedTicket } from '../graphql/subscriptions'\nimport {Ticket, isServiceProviderBid} from './model';\nimport { getOpenTicket, getUser } from '../graphql/queries';\nimport AcceptTicket from '../ticket/ResponsiveDialog';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom'\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\nimport AuthSignIn from '../auth/SignIn';\nimport Snackbar from '../common/Snackbar'\nimport Paper from '@material-ui/core/Paper';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: props => ({ \n      width: '100%',\n      maxWidth:  window.screen.width > 700 ? 600: window.screen.width-25 ,\n      backgroundColor: theme.palette.background.paper,\n    }),\n    subHeader: {\n        color: \"rgba(0, 0, 0, 0.98)\",\n        fontSize: 18,\n        fontWeight: 900,\n        paddingLeft : 0,\n        paddingRight: 0\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    paper: {\n      //marginTop: theme.spacing(3),\n      //marginBottom: theme.spacing(3),\n      padding: theme.spacing(2),\n      boxShadow : window.screen.width > 700 ? '' :'unset',\n      [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n        marginTop: theme.spacing(6),\n        marginBottom: theme.spacing(6),\n        padding: theme.spacing(3),\n      },\n    },\n    layout: {\n      width:  window.screen.width > 700 ? 600: window.screen.width-25 ,\n     // width: 'auto',\n      //marginLeft: theme.spacing(2),\n      //marginRight: theme.spacing(2),\n      [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n        width: 600,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n      },\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    list: {\n      padding: 0,\n      paddingLeft : 0,\n      paddingRight: 0\n    },\n    cartLabel: {\n        fontWeight: 900,\n        backgroundColor: \"rgba(0, 0, 0, 0.18)\",\n        width: 50,\n        marginBottom: 8,\n        marginTop: 8,\n        marginLeft: 5,\n        borderRadius: 5,\n        paddingLeft: 5,\n        color: \"black !important\"\n    },\n    absolute: {\n      position: 'absolute',\n      bottom: theme.spacing(9),\n      right: theme.spacing(4),\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n    chipTop: {\n      marginTop: 10,\n    }\n  }));\n\nexport default function TicketList() {\n\n  const matches = useMediaQuery('(min-width:600px)');\n  const props = { width: matches ? 600: window.screen.width-50 };\n\n  const classes = useStyles(props);\n  const authContext = React.useContext(AuthContext)\n  const [openErrands, setOpenErrands] = React.useState<Ticket[]>([]);\n  const [ownerrands, setOwnerrands] = React.useState<Ticket[]>([]);\n  const [completedJob, setCompletedJob] = React.useState<Ticket[]>([]);\n\n  const [bidJob, setBidJob] = React.useState<Ticket[]>([]);\n\n  const [isAuth, setIsAuth] = React.useState<boolean>(false);\n  const history = useHistory()\n\n\n  useEffect(() => {\n    if(authContext && authContext.userId ){\n      setIsAuth(true)\n    }\n  }, [authContext.userId]);\n\n  \n  const handleListClick = (e: any) => {\n    console.log(\"button click\", e);\n    setSelectedItem(e);\n    setOpenBuy(true)\n}\n\nconst [openBuy, setOpenBuy] = React.useState(false);\n\n// @ts-ignore\nconst [selectedItem, setSelectedItem] = React.useState<Ticket>({});\n\n\nconst [isEmployee, setIsEmployee] = React.useState(false);\n\nconst createJob = () => {\n\n  console.log(\"createJob\", user);\n  if(user?.cardInfo){\n    console.log(\"createJob\");\n    history.push('/createticket')\n  }else {\n    setError(\"You need to update your profile and payment details before you can request for services\")\n  }\n};\n\n// create initial state\nconst initialState = {\n  errand: ''\n}\n\nconst [state, dispatch] = React.useReducer(reducer, initialState)\n\nconst [user, setUser] = React.useState<any>();\nconst [error, setError] = useState<string>('')\n\nconst setErrorMsg = useCallback((message: string) => {\n  setError(message)\n}, [])\n\n// update reducer\nfunction reducer(state: any, action: any) {\n  switch(action.type) {\n    case 'ADDNEWJOB':\n      {\n        const errand = action.errand;\n\n        openErrands.push(errand);\n        // create new object\n        const updated =  JSON.parse(JSON.stringify(openErrands));\n        setOpenErrands(updated);\n        return state;\n\n      }\n    case 'EXPERTUPDATE':\n{\n  const errand = action.errand;\n  // if job open details updated so updated local\n  if(errand.status == \"open\"){\n    console.log(\"updated\", openErrands);\n\n    openErrands.forEach((element, index) => {\n      if(element.id === errand.id) {\n        openErrands[index] = errand;\n      }\n  });\n\n  console.log(\"updated\", openErrands);\n\n  const updated =  JSON.parse(JSON.stringify(openErrands));\n    setOpenErrands(updated)\n\n\n  } // job moved from open to another state so remove from it\n  else {\n    var filtered = openErrands.filter(function(el) { return el.id != errand.id; }); \n    setOpenErrands(filtered);\n  }\n  return state\n\n}    \n    case 'USERUPDATE':{\n      const errand = action.errand;\n               if(errand.status != \"closed\" && errand.status != \"completed\"){\n                      // if job open details updated so updated local\n          for (var i = 0; i < ownerrands.length; i++) {\n            if(ownerrands[i].id === errand.id && ownerrands[i].status ) {\n              ownerrands[i] = errand;\n              const updated =  JSON.parse(JSON.stringify(ownerrands));\n              setOwnerrands(updated)\n              return state\n\n            }\n          }\n\n        }\n        return state;\n    }\n    default:\n      return state\n  }\n}\n\n\nconst closeAcceptButton = (op: boolean, updateTicket: Ticket) => {\n  setOpenBuy(false)\n\n  if(op){\n    if(isEmployee){\n\n      if(updateTicket.status == \"assinged\"){\n        var filtered = openErrands.filter(function(el) { return el.id != selectedItem.id; }); \n        ownerrands.push(updateTicket);\n        setOwnerrands(ownerrands)\n        setOpenErrands(filtered);\n      }// unassign so remove from queue\n      else if (updateTicket.status == \"open\"){\n        if(updateTicket.ticketType === \"Bid\" && updateTicket.execptedPrice){\n\n        let filtered = openErrands.filter(function(el) { return el.id != selectedItem.id; }); \n\n        // if ticket already bid then just update other move open to bid section\n       let isBidAv = false\n        bidJob.forEach((element, index) => {\n          if(element.id === updateTicket.id) {\n            bidJob[index] = updateTicket;\n            isBidAv = true;\n          }\n      });\n      if(isBidAv === false){\n        bidJob.push(updateTicket);\n      }\n        setBidJob(bidJob)\n        setOpenErrands(filtered);\n\n        }else {\n          var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n          setOwnerrands(filtered);\n  \n          openErrands.push(updateTicket);\n          setOpenErrands(openErrands);\n        }\n\n      }// ticket completed\n      else if (updateTicket.status == \"completed\"){\n        var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n        setOwnerrands(filtered)\n        completedJob.push(updateTicket);\n        setCompletedJob(completedJob)\n      }\n\n    }else {\n\n      // customer closed ticket\n     if( updateTicket.status == \"closed\"){\n\n      var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n      completedJob.push(selectedItem);\n      setCompletedJob(completedJob)\n      setOwnerrands(filtered);\n\n     } // customer updated ticket\n     else {\n       console.log(\"updateTicket\", updateTicket);\n      ownerrands.forEach((element, index) => {\n        if(element.id === updateTicket.id) {\n          ownerrands[index] = updateTicket;\n        }\n    });\n    // const updated =  JSON.parse(JSON.stringify(ownerrands));\n    // console.log(\"updated\", updated, ownerrands);\n      setOwnerrands(ownerrands)\n     }\n\n    }\n  }\n};\n\n\n  useEffect(() => {\n    let unsubscribe;\n\n    const id = authContext.userId;\n    if(id){\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        (async function anyNameFunction() {\n\n            if(type != \"Customer\"){\n\n              setIsEmployee(true)\n\n              const acceptedJobs = await API.graphql(graphqlOperation(getUser, { id }))\n              let getuser ;\n              console.log(\"acceptedJobs\", acceptedJobs);\n                  //@ts-ignore\n              if(acceptedJobs.data.getUser){\n                 //@ts-ignore\n                 getuser = acceptedJobs.data.getUser;\n                setUser(getuser);\n              }\n                  //@ts-ignore\n              if(acceptedJobs.data.getUser &&  acceptedJobs.data.getUser.tickets.items.length > 0){\n                                  //@ts-ignore\n                  const openErrandsTicket = acceptedJobs.data.getUser.tickets.items as any[]; //as Ticket[];\n                  const openErrands = openErrandsTicket.map(openticket=> openticket.ticket) as Ticket[];\n\n                  console.log(\"acceptedJobs\", openErrands);\n\n                  var filtered = openErrands.filter(function(el) { return (el.status !== \"closed\" && el.status !== \"completed\") }); \n                  var closed = openErrands.filter(function(el) { return (el.status === \"closed\" || el.status === \"completed\") }); \n\n                  var accepted = filtered.filter(function(el) { return (el.ticketType !== \"Bid\" ||  (el.ticketType === \"Bid\" && el.status === \"assinged\")) }); \n                  var bidedfiltered = filtered.filter(function(el) { return (el.ticketType === \"Bid\" && el.status === \"open\" ) }); \n                  console.log(\"bidedfiltered\", bidedfiltered);\n\n                  setBidJob(bidedfiltered)\n\n                  setOwnerrands(accepted)\n                  setCompletedJob(closed)\n              }\n\n            if(getuser?.active){\n\n              const commentData = await API.graphql(graphqlOperation(getOpenTicket, { status: \"open\", county: getuser.county }))\n              //@ts-ignore\n          if(commentData.data.jobsByStatus &&  commentData.data.jobsByStatus.items.length > 0){\n                                    //@ts-ignore\n             const openErrands = commentData.data.jobsByStatus.items as Ticket[];\n\n             // if job open and bidded expert have current expert then remove from open jobs\n\n             var accepted = openErrands.filter(function(el) { \n               if(el.ticketType !== \"Bid\"){\n                 return true\n               }else {\n                return isServiceProviderBid(id, el);\n                // const bidExperts = el.execptedPrice ? JSON.parse(el.execptedPrice) : []\n                // const currentBid = bidExperts.filter(function(el: any) { return (el.serviceProvider === id) })\n                // return currentBid.length > 0 ? false : true \n               }\n            }); \n            \n              console.log(\"acceptedJobs\", accepted);\n              //@ts-ignore\n              setOpenErrands(accepted)\n          }\n\n                  // @ts-ignore\n    const createdSub = API.graphql(graphqlOperation(onCreateTicket, {county: getuser.county})).subscribe({next: (todoData) => {\n            \n            const errand = todoData.value.data.onCreateTicket;\n            console.log(\"onCreateTicket\", errand);\n            dispatch({ type: 'ADDNEWJOB', errand  })\n          }\n        });\n\n\n                              // @ts-ignore\n    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: getuser.county})).subscribe({next: (todoData) => {\n      const errand = todoData.value.data.onUpdatedTicket;\n      console.log(\"onUpdatedTicket\", errand);\n      dispatch({ type: 'EXPERTUPDATE', errand  })\n\n    }\n  });\n\n        unsubscribe = () => {\n          createdSub.unsubscribe();\n          updatedsubscription.unsubscribe();\n\n          };\n\n            }\n                   \n               }else {\n                const commentData = await API.graphql(graphqlOperation(getUser, { id }))\n                console.log('fetchDate',commentData); \n\n                let getuser ;\n                    //@ts-ignore\n                if(commentData.data.getUser){\n                   //@ts-ignore\n                   getuser = commentData.data.getUser;\n                  setUser(getuser);\n                }\n\n                    //@ts-ignore\n                if(commentData.data.getUser &&  commentData.data.getUser.tickets.items.length > 0){\n\n                                                  //@ts-ignore\n              const openErrandsTicket = commentData.data.getUser.tickets.items as any[]; //as Ticket[];\n              const errands = openErrandsTicket.map(openticket=> openticket.ticket) as Ticket[];\n\n                    console.log(\"openErrands\", errands);\n                    var filtered = errands.filter(function(el) { return (el.status != \"closed\" && el.status != \"completed\") }); \n                    var closed = errands.filter(function(el) { return (el.status == \"closed\" || el.status == \"completed\") }); \n\n                    setOwnerrands(filtered)\n                    setCompletedJob(closed)\n\n                                                                \t\t\t// @ts-ignore\n\t\t    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: getuser.county})).subscribe({next: (todoData) => {\n          const errand = todoData.value.data.onUpdatedTicket;\n          console.log(\"onUpdatedTicket\", errand);\n\n          dispatch({ type: 'USERUPDATE', errand  })\n\n        }\n        });\n        \n                }\n      }\n          \n          \n           })();\n    }\n    return unsubscribe;\n\n  }, [authContext.userId]);  \n\n  return (\n     !(authContext && authContext.userId) ?  <AuthSignIn/>:\n    (<AppHomeLayout title='Ticket List' header = \"Home\">\n    <main className={classes.layout}>\n    <Paper className={classes.paper}>\n\n<Grid\n  container\n  direction=\"column\"\n>\n{\n  isEmployee ? \n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            Open Jobs\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {openErrands.length > 0 ? openErrands.map(item => (\n      <div key={item.id} >\n      <ListItem className= {classes.list} key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              <b>Time</b> : {new Date(item.time).toLocaleString()} <br/>   <b>Address</b> : {item.source}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n\n<Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />\n\n\n        {/* <Input  className={classes.cartLabel} value=  {`$ ${item.price}`} disabled  /> */}\n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n:null}\n      <Divider />\n\n     {isEmployee  ? <span>\n       <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            {\"Bided Job\"}\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {bidJob.length > 0 ? bidJob.map(item => (\n      <div key={item.id} >\n      <ListItem key={item.id} className= {classes.list}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              Time : {new Date(item.time).toLocaleString()}   <br/>   Address : {item.source}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />  \n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n\n    <Divider /> </span> : null\n      }\n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            {isEmployee ? \"Accepted Jobs \" : \"Created Jobs\"}\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {ownerrands.length > 0 ? ownerrands.map(item => (\n      <div key={item.id} >\n      <ListItem  className= {classes.list} key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              <b>Time</b> : {new Date(item.time).toLocaleString()} <br/>   <b>Address</b> : {item.source}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />  \n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n\n    <Divider />\n\n<List \n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    subheader={\n      <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n        {isEmployee ? \"Completed Jobs \" : \"Closed Jobs\"}\n      </ListSubheader>\n    }\nclassName={classes.root}>\n\n{completedJob.length > 0 ? completedJob.map(item => (\n  <div key={item.id} >\n  <ListItem key={item.id} className= {classes.list}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n  <ListItemText\n    primary= {item.title}\n    secondary={\n      <React.Fragment>\n        <Typography\n          component=\"span\"\n          variant=\"body2\"\n          className={classes.inline}\n          color=\"textPrimary\"\n        >\n          Time : {new Date(item.time).toLocaleString()}  <br/>   Address : {item.source}\n        </Typography>\n\n\n      </React.Fragment>\n    }\n  />\n\n  <Grid\n  className={classes.buttonGird} \n    container\n    direction=\"row\"\n    justify=\"flex-end\"\n    alignItems=\"flex-end\"\n  >\n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n        deleteIcon={ item.status === \"closed\" ?<CloseIcon /> : <DoneIcon />}\n    />\n\n</Grid>\n\n</ListItem>\n<Divider variant=\"inset\" component=\"li\" />\n\n  </div>  \n)): <div>No Jobs</div>}\n</List>\n\n\n    {openBuy? <AcceptTicket user={user} setIsEmployee={isEmployee} data={selectedItem} openPop={openBuy} close={closeAcceptButton}/> : null}\n    </Grid>\n\n    { isEmployee == false ?<Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"primary\" className={classes.absolute}>\n          <AddIcon onClick={createJob}/>\n        </Fab>\n      </Tooltip> : null\n    }\n\n<Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        </Paper>\n        </main>\n    </AppHomeLayout>\n    )\n\n  );\n}","import './chat1.css';\nimport React from 'react';\nimport { API, graphqlOperation, Cache } from 'aws-amplify'\nimport { getConvo } from '../graphql/queries'\nimport { message}  from '../utils'\nimport { createMessage, updateMessage } from '../graphql/mutations'\nimport {onCreateMessage} from '../graphql/subscriptions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SendIcon from '@material-ui/icons/Send';\n// @ts-ignore\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport {SelectedConv, getImages, handleImageUpload} from '../utils'\n\n// @ts-ignore\nimport { v4 as uuid } from 'uuid';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\n\n/* detect url in a message and add a link tag */\nfunction detectURL(message: any) {\n\tvar urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n\treturn message.replace(urlRegex, function(urlMatch:any) {\n\t\treturn '<a href=\"' + urlMatch + '\">' + urlMatch + '</a>';\n\t})\n}\n\n/* ========== */\n/* Title component */\ntype TitleProp = {\n\towner: string\n\tbackButton: () => void\n  }\nclass Title extends React.Component<TitleProp> {\n\tconstructor(props: any, context: any) {\n\t\tsuper(props, context);\n\t}\n\n\t\t\t\t// <div className={\"chatApp__convTitle\"}>\n\t\t\t// <ArrowBackIcon style={{ paddingRight: 100 }} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t//    Chat</div>\n\trender() {\n\t\treturn (\n\n\t\t\t<MuiDialogTitle className={\"chatApp__convTitle_modifed_root\"} disableTypography>\n\t\t\t<ArrowBackIosIcon className={\"chatApp__convTitle_modifed_btn\"} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t<Typography className={\"chatApp__convTitle_modifed_title\"} variant=\"h6\">{this.props.owner ? this.props.owner : 'Chat'}</Typography>\n\t\t  </MuiDialogTitle>\n\t\t);\n\t}\n}\n/* end Title component */\n/* ========== */\n\n/* ========== */\n/* InputMessage component - used to type the message */\nlet uploadFile: any = null;\ntype InputMessageProp = {\n    isLoading: boolean\n    owner: string,\n    ownerAvatar: string,\n    sendMessageLoading: ( message: any)  => void,\n\tsendMessage: ( message: any)  => void,\n\tsenderUsername: string\n  }\n\n\n  type InputMessageState = {\n\tmessageInput: any,\n\tcontent: string,\n\tpopoverOpen: boolean,\n\tfile: any,\n\tfilePreviewSrc: any\n  }\nclass InputMessage extends React.Component<InputMessageProp, InputMessageState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpopoverOpen: false,\n\t\t\tcontent: '',\n\t\t\tmessageInput: '',\n\t\t\tfile: '',\n\t\t\tfilePreviewSrc: ''\n\t\t};\n\t\tthis.handleSendMessage = this.handleSendMessage.bind(this);\n\n\n\n\t}\n\n\tmessageInput: any;\n\n\townerInput: any;\n\townerAvatarInput :any;\n\thandleSendMessage(event: any) {\n\t\tevent.preventDefault();\n\t\t/* Disable sendMessage if the message is empty */\n\t\tif( uploadFile ||this.messageInput.value.length > 0 ) {\n\t\t\tthis.props.sendMessageLoading( this.messageInput.value);\n\t\t\t/* Reset input after send*/\n\t\t\tthis.messageInput.value = '';\n\t\t\tthis.close();\n\t\t}\n\t}\n\t\n\thandleFileChange = (e: any) => {\n\t\tconst file = e.target.files[0]\n\t\tconsole.log(file)\n\t\tif (file && file.type.startsWith('image/')) {\n\t\t  const reader = new FileReader()\n\t\t  const self = this\n\t\t  reader.onload = function(e) {\n\t\t\tself.setState({ popoverOpen: true, filePreviewSrc: this.result })\n\t\t  }\n\t\t  reader.readAsDataURL(file)\n\t\t  this.setState({ file })\n\t\t  uploadFile = file;\n\t\t}\n\t  }\n\n\t  close = () => {\n\t\tthis.setState({ file: undefined, popoverOpen: false })\n\t\tuploadFile = null;\n\t  }\n\t\n\n\trender() {\n\t\tconst { filePreviewSrc } = this.state;\n\t\tconst imgBtnClass ='btn btn-block ' + (this.state.file ? 'btn-success' : 'btn-primary')\n\n\t\t/* If the chatbox state is loading, loading class for display */\n\t\tvar loadingClass = this.props.isLoading ? 'chatApp__convButton--loading' : '';\n\t\tlet sendButtonIcon =     <SendIcon color='action'/>\n\t\t//<i className={\"material-icons\"}>send</i>;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSendMessage}>\n                 <div className={'chatApp__convButtonLeft' + loadingClass}> \n                  {/* <input\n\t\t\t\t      className={'zeroWidth'}\n                      type=\"file\"\n                      onChange={this.handleFileChange}\n\t\t\t\t\t/> */}\n\t\t\t\t\t\n\t\t\t\t\t<input accept=\"image/*\" className={'zeroWidth'} id=\"icon-button-file\" onChange={this.handleFileChange} type=\"file\" />\n      <label className={'fileUploadIcon'} htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" className={'fileUploadIcon'} aria-label=\"upload picture\" component=\"span\">\n          <AttachmentIcon className={'fileUploadIcon'}  />\n        </IconButton>\n      </label>\n\n\t\t\t\t<label className={imgBtnClass} id=\"Popover1\">\n                      <i className=\"fas fa-camera\" />\n                    </label>\n\t\t\t\t    <Popover\n                      placement=\"top-start\"\n                      isOpen={this.state.popoverOpen}\n                      target=\"Popover1\"\n                    >\n                      <PopoverHeader>\n                        <span>Preview</span>\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          aria-label=\"Close\"\n                          onClick={this.close}\n                        >\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </PopoverHeader>\n                      <PopoverBody>\n                        <img\n                          alt=\"previw\"\n                          className=\"msg-image\"\n                          src={filePreviewSrc}\n                        />\n                      </PopoverBody>\n                    </Popover>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={owner => (this.ownerInput = owner)}\n\t\t\t\t\tvalue={this.props.owner}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={ownerAvatar => (this.ownerAvatarInput = ownerAvatar)}\n\t\t\t\t\tvalue={this.props.ownerAvatar}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={message => (this.messageInput = message)}\n\t\t\t\t\tclassName={\"chatApp__convInput\"}\n\t\t\t\t\tplaceholder=\"Text message\"\n\t\t\t\t/>\n\t\t\t\t<div className={'chatApp__convButton ' + loadingClass} onClick={this.handleSendMessage}>\n\t\t\t\t{sendButtonIcon}\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</form>\n\t\t);\n\t}\n}\n/* end InputMessage component */\n/* ========== */\n\n\n/* ========== */\n/* MessageList component - contains all messages */\ntype MessageListProp = {\n    messages: any,\n\towner: string,\n\townerAvatar: string,\n\tsenderAvatar: string\n  }\nclass MessageList extends React.Component<MessageListProp> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__convTimeline\"}>\n\t\t\t{this.props.messages.slice(0).reverse().map(\n\t\t\t\t(messageItem: any) => (\n\t\t\t\t\t<MessageItem\n\t\t\t\t\t\tkey={messageItem.id}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\tsender={messageItem.owner}\n\t\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\t\tsenderAvatar={this.props.senderAvatar}\n\t\t\t\t\t\tmessage={messageItem.content}\n\t\t\t\t\t\tfile={messageItem.file}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageList component */\n/* ========== */\n\n/* ========== */\n/* MessageItem component - composed of a message and the sender's avatar */\ntype MessageItemProp = {\n    owner: string,\n    sender: string\n\tsenderAvatar: string\n\townerAvatar: string\n\tmessage: string,\n\tfile: string;\n  }\n\n  type MessageItemState = {\n\tfileUrl: any,\n\tkey: string\n  }\nclass MessageItem extends React.Component<MessageItemProp, MessageItemState> {\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfileUrl: null,\n\t\t\tkey: \"\"\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any) {\n\t\tconst { file: prevMsg } = prevProps\n\t\tconst { file: nodebugImage } = this.props\n\t\tlet currMsg = null;\n\t\tif(nodebugImage){\n\t\t\tcurrMsg = JSON.parse(nodebugImage);\n\t\t}\n\n\t\tif (\n\t\t  prevMsg &&\n\t\t  prevMsg.key === null &&\n\t\t  currMsg &&\n\t\t  currMsg.key\n\t\t) {\n\t\t  this.checkFileUrl()\n\t\t}\n\t  }\n\n\t  async componentDidMount() {\n\t\tawait this.checkFileUrl()\n\t  }\n\n\t  async checkFileUrl() {\n\t\tconst {file} = this.props;\n\n\t\tif (file) {\n\t\tlet nonFile = JSON.parse(file);\n        const images = Array.isArray(nonFile) ? nonFile[0] : nonFile ;\n\t\t  let fileUrl = Cache.getItem(images.key)\n\t\t  if (fileUrl) {\n\t\t\tthis.setState({ key: images.key })\n\t\t\treturn this.setState({ fileUrl })\n\t\t  }\n\t\n\t\t  fileUrl = await getImages([images]);\n\t\t  const expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t  Cache.setItem(images.key, fileUrl, { expires })\n\t\t  this.setState({ fileUrl })\n\n\t\t//   Storage.get(keyWithoutPrefix, { identityId }).then(fileUrl => {\n\t\t// \tconsole.log(`New url for ${file.key}: ${fileUrl}`)\n\t\t\n\t\t// \tconst expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t// \tCache.setItem(file.key, fileUrl, { expires })\n\t\t// \tthis.setState({ fileUrl })\n\t\t//  })\n\t\t}\n\t  }\n\n\t// \n\t senderAvatar =  this.props.owner == this.props.sender ? this.props.ownerAvatar : this.props.senderAvatar ;\n\trender() {\n\n\t\t/* message position formatting - right if I'm the author */\n\t\tlet messageRight = (( this.props.owner == this.props.sender ) ? 'highlight msg-right' : 'highlight');\n\n\t\tlet messagePosition = (( this.props.owner == this.props.sender ) ? 'chatApp__convMessageItem--right' : 'chatApp__convMessageItem--left');\n\t\treturn (\n\t\t\t<div className={\"chatApp__convMessageItem \" + messagePosition + \" clearfix\"}>\n\t\t\t\t<img src={this.senderAvatar} alt={this.props.sender} className=\"chatApp__convMessageAvatar\" /> \n\t\t\t\t{\n\t\t\t\t\tthis.props.file && this.state.fileUrl? (<div className={messageRight}>\n\t\t\t\t\t<img\n\t\t\t\t\t  alt=\"awesome\"\n\t\t\t\t\t  src={this.state.fileUrl}\n\t\t\t\t\t  className=\"msg-image\"\n\t\t\t\t\t  id=\"ImgPopover\"\n\t\t\t\t\t/>\n\t\t\t\t  </div>):\n\t\t\t\t<div className=\"chatApp__convMessageValue\" dangerouslySetInnerHTML={{__html: this.props.message}}></div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageItem component */\n/* ========== */\n\n/* ========== */\n/* ChatBox component - composed of Title, MessageList, TypingIndicator, InputMessage */\n\ntype ChatBoxProp = {\n    messages: any\n    owner: string,\n\townerAvatar: string,\n\tsenderAvatar: string,\n\tsendMessage: ( message: any) => void;\n\tbackButton: () => void;\n\tsenderUsername : string;\n  }\n\n  type ChatBoxState = {\n    isLoading: boolean\n  }\n\nclass ChatBox extends React.Component<ChatBoxProp, ChatBoxState> {\n\tconstructor(prop: any) {\n\t\tsuper(prop);\n\t\tthis.state = {\n\t\t\tisLoading: false\n\t\t};\n\t\tthis.sendMessageLoading = this.sendMessageLoading.bind(this);\n\t\tvar timeout = null;\n\t}\n\t/* catch the sendMessage signal and update the loading state then continues the sending instruction */\n\tsendMessageLoading( message: any) {\n\t\tthis.setState({ isLoading: true });\n\t\tthis.props.sendMessage( message);\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ isLoading: false });\n\t\t}, 400);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__conv\"}>\n\t\t\t\t<Title\n\t\t\t\t\towner={this.props.senderUsername}\n\t\t\t\t\tbackButton={this.props.backButton}\n\t\t\t\t/>\n\t\t\t\t<MessageList\n\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\tmessages={this.props.messages}\n\t\t\t\t\tsenderAvatar= {this.props.senderAvatar}\n\t\t\t\t/>\n\t\t\t\t<div className={\"chatApp__convSendMessage clearfix\"}>\n\t\t\t\t\t<InputMessage\n\t\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\t\tsendMessage={this.props.sendMessage}\n\t\t\t\t\t\tsendMessageLoading={this.sendMessageLoading}\n\t\t\t\t\t\tsenderUsername={this.props.senderUsername}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatBox component */\n/* ========== */\n\n/* ========== */\n/* ChatRoom component - composed of multiple ChatBoxes */\ntype ChatRoomState = {\n    messages: any\n  }\n  type ChatRoomProps = {\n\tselectedConv: SelectedConv;\n\tbackButton : () => void\n  }\nexport class ChatRoom extends React.Component<ChatRoomProps, ChatRoomState> {\n\tconstructor(props: any) {\n\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [{\n\t\t\t\tid: 1,\n\t\t\t\tsender: 'Shun',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=32',\n\t\t\t\tmessage: 'Hello 👋'\n\t\t\t}\n\t\t\t],\n\t\t};\n\t\tthis.sendMessage = this.sendMessage.bind(this);\n\t}\n\tasync componentDidMount() {\n\t\tconst convId = this.props.selectedConv.convId;\n\t\tconst ownerId = this.props.selectedConv.owner;\n\n\t\ttry {\n\t\t\tconst commentData = await API.graphql(graphqlOperation(getConvo, { id: convId}))\n\n\t\t\tconsole.log(\"messages\", commentData);\n\t\t\t//@ts-ignore\n\t\t\tif(commentData.data.getConvo.messages){\n\t\t\t\t//@ts-ignore\n\t\t\t\tconst messages =  commentData.data.getConvo.messages.items as message[];\n\t\t\t\tthis.setState({ messages: messages.reverse() });\n\n\t\t\t\tconst ids = messages.filter(res=> res.isSent === \"false\" && \n\t\t\t\tthis.props.selectedConv.sender === res.owner\n\t\t\t\t).map(ele=>ele.id);\n\t\t\t\tconsole.log(\"messagesids\", ids);\n\n\t\t\t\tif(ids.length > 0){\n\t\t\t\t\tlet myInit = { \n\t\t\t\t\t\tresponse: true,\n\t\t\t\t\t\tbody: {\n\t\t\t\t\t\t\tids\n\t\t\t\t\t\t},\n\t\t\t\t\t\theaders: {} // OPTIONAL\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t  API.post(\"chatreplyfun\", \"/chatreplyfun\",myInit);\n\n\t\t\t\t}\n\n\n\t\t\t}else {\n\t\t\t\tthis.setState({ messages: [] });\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t    const subscription = API.graphql(graphqlOperation(onCreateMessage, {messageConversationId: convId})).subscribe({next: (todoData) => {\n\t\t\tconst newMessage = todoData.value.data.onCreateMessage;\n\t\t\tconst messages = this.state.messages;\n\t\t\tmessages.push(newMessage);\n\t\t\tthis.setState({ messages: messages });\n\t\t\tconsole.log(\"newMessage\", newMessage);\n            if(ownerId !== newMessage.owner){\n\t\t\t\tconsole.log(\"updatedflag\", newMessage, ownerId);\n\t\t\t\tAPI.graphql(graphqlOperation(updateMessage,{ id: newMessage.id} ))\n\t\t\t}\n\n\t\t  }\n\t\t});\n\t\t  \n\n\t\t} catch (err) {\n\t\t  console.log('error: ', err)\n\t\t}\n\t}\n\n\t/* adds a new message to the chatroom */\n\t// sendMessage( message) {\n\t// \tsetTimeout(() => {\n\t// \t\tlet messageFormat = detectURL(message);\n\t// \t\tlet newMessageItem = {\n\t// \t\t\tid: this.state.messages.length + 1,\n\t// \t\t\tsender: sender,\n\t// \t\t\tsenderAvatar: senderAvatar,\n\t// \t\t\tmessage: messageFormat\n\t// \t\t};\n\t// \t\tthis.setState({ messages: [...this.state.messages, newMessageItem] });\n\t// \t}, 400);\n\t// }\n\n\tsendMessage = async (message: any) => {\n\t\tif (message.trim().length === 0 && !uploadFile) {\n\t\t\treturn\n\t\t  }\n\t\t  let sendMes ;\n\t\t  if(uploadFile){\n\t\t\tconst S3path = await handleImageUpload([uploadFile])\n\t\t\tconsole.log('file for s3', S3path)\n\t\t\tlet  file = JSON.stringify(S3path);\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: \"false\",\n\t\t\t\tchatbot: false,\n\t\t\t\tfile,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId,\n\t\t\t\treceiver: this.props.selectedConv.sender\n\t\t\t};\n\t\t  }else {\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: \"false\",\n\t\t\t\tchatbot: false,\n\t\t\t\tcontent: message ,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId,\n\t\t\t\treceiver: this.props.selectedConv.sender\n\t\t\t};\n\n\t\t  }\n\t\t \n\t\t\n        try {\n            const response = await API.graphql(\n                graphqlOperation(createMessage, { input: sendMes })\n\t\t\t);\n\t\t\t//this.setState({ messages: [...this.state.messages, newMessageItem] });\n\n        } catch (e) {\n           \n        }\n\t}\n\t\n\trender() {\n\t\tlet users:any = [];\n\t\tlet chatBoxes:any = [];\n\t\tlet messages = this.state.messages;\n\t\tlet sendMessage = this.sendMessage;\n\n\t\t/* user details - can add as many users as desired */\n\t\tusers[0] = { name: 'de1aa72c-0ab0-472b-9eed-2e88693321ee', avatar: 'https://i.pravatar.cc/150?img=32' };\n\t\t//users[1] = { name: 'Gabe', avatar: 'https://i.pravatar.cc/150?img=56' };\n\t\t/* test with two other users :)\n\t\tusers[2] = { name: 'Kate', avatar: 'https://i.pravatar.cc/150?img=47' };\n\t\tusers[3] = { name: 'Patrick', avatar: 'https://i.pravatar.cc/150?img=14' };\n\t\t*/\n\t\t\n\t\t/* creation of a chatbox for each user present in the chatroom */\n\n\t\tconst props = this.props.selectedConv;\n\t\tconst backButton = this.props.backButton;\n\n\t\tObject.keys(users).map(function(key) {\n\t\t\tvar user = users[key];\n\t\t\tchatBoxes.push(\n\t\t\t\t// @ts-ignore\n\t\t\t\t<ChatBox\n\t\t\t\t\tkey={key}\n\t\t\t\t\towner={props.owner}\n\t\t\t\t\townerAvatar={props.ownerAvatar}\n\t\t\t\t\tsenderAvatar={props.senderAvatar}\n\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tbackButton={backButton}\n\t\t\t\t\tsenderUsername={props.senderUsername}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className={\"chatApp__room\"}>\n\t\t\t\t{chatBoxes}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatRoom component */\n/* ========== */\n","import React, { useContext, useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { getUserConversations, getUserMessages } from '../graphql/queries'\nimport { AuthContext } from '../auth/auth-context'\nimport {conversationLink, Conversation, getCacheImage, SelectedConv} from '../utils'\nimport './chat1.css';\nimport {ChatRoom} from './chat1'\nimport { useLocation } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport IconButton from '@material-ui/core/IconButton';\nimport CommentIcon from '@material-ui/icons/Comment';\nimport Badge from '@material-ui/core/Badge';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n     // maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        width: 10,\n        marginBottom: 8,\n        marginLeft: 5\n    }\n  }),\n);\n\nexport default function ChatList() {\n  const classes = useStyles();\n  const [converstaions, setConverstaions] = React.useState([]);\n  const authContext = useContext(AuthContext)\n  const [flag, setFlagValue] = React.useState(false);\n  const [selectedConv, setSelectedConv] = React.useState<SelectedConv>({\n    convId: '', senderUsername: '',\n    owner: '', ownerAvatar: '', senderAvatar: '', sender: ''\n  });\n\n  const [openChats , setOpenChats ] = React.useState<string[]>([]);\n  const [ownerAvatar, setOwnerAvatar] = React.useState({});\n\n  const location = useLocation();\n    \n  useEffect(() => {\n    // console.log(location.pathname); // result: '/secondpage'\n    // console.log(location.search); // result: '?query=abc'\n   // console.log(location.state.deail); // result: 'some_value'\n\n    const fetchData = async (location: any) => {\n\n      //@ts-ignore\n    if(location.state && location.state.conversation ){\n      console.log(location); \n\n       //@ts-ignore\n       const conversation = location.state.conversation.conversation as  Conversation  ;\n              //@ts-ignore\n       const currentId = location.state.user as  string  ;\n      const user = conversation.associated.items.filter(conv => (conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      const otherUser = conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      console.log(\"selected file\",user, otherUser); \n\n      const useravatar = JSON.parse(user[0].user.avatar);\n      const ownerAvatar = await getCacheImage(useravatar[0]);\n      setOwnerAvatar(ownerAvatar);\n\n      const otherUseravatar = JSON.parse(otherUser[0].user.avatar);\n      const senderAvatar = await getCacheImage(otherUseravatar[0]);\n\n      setSelectedConv({\n        convId: conversation.id,\n         owner: currentId,\n         ownerAvatar: ownerAvatar,\n         senderAvatar: senderAvatar,\n         senderUsername:otherUser[0].user?.username ?? otherUser[0].employee?.username ,\n         sender: otherUser[0].convoLinkUserId \n       });\n       setFlagValue(true);\n    }\n\n    };\n\n    if(location){\n      fetchData(location);\n    } \n }, [location]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const id = authContext.userId;\n        const type = authContext.user.attributes[\"custom:account_type\"];\n\n          const commentData = await API.graphql(graphqlOperation(getUserConversations, { id: id }))\n         console.log(\"commentData\", commentData);\n          // @ts-ignore \n          if(commentData.data.getUser && commentData.data.getUser.userConversations.items.length > 0){\n          // @ts-ignore \n          const comments = commentData.data.getUser.userConversations.items;\n\n        // @ts-ignore \n        const useravatar = JSON.parse(commentData.data.getUser.avatar);\n        const getImage = await getCacheImage(useravatar[0]);\n        setOwnerAvatar(getImage);\n\n        for(var i = 0; i < comments.length; i++) {\n          const chat = comments[i];\n          const otherUser = chat.conversation.associated.items.filter((conv : any)=> !(conv.convoLinkUserId ==  id || conv.convoLinkEmployeeId ==  id  ))\n          const images = otherUser[0].user?.avatar ?? otherUser[0].employee?.avatar ;\n\n          comments[i].avatar = await getCacheImage(JSON.parse(images)[0]);\n         //console.log(\"images\",images);\n         comments[i].username = otherUser[0].user?.username ?? otherUser[0].employee?.username ;\n         comments[i].receiver = otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId ;\n        }\n          setConverstaions(comments);\n          }\n\n      const IgetUserMessages = await API.graphql(graphqlOperation(getUserMessages, { receiver: id, isSent: \"false\" }))\n        //@ts-ignore\n         if(IgetUserMessages.data.messageByReceiver && IgetUserMessages.data.messageByReceiver.items.length > 0){\n                  //@ts-ignore\n          const links = IgetUserMessages.data.messageByReceiver.items;\n          let chatsLinks:string[] = []\n          links.forEach((link:any) =>{\n            chatsLinks.push(link.owner);\n          }); \n          console.log(\"commentschatsLinks\", chatsLinks, converstaions);\n          setOpenChats(chatsLinks);\n\n      }\n\n      } catch (error) {\n        console.log('unable get conversation for users:', error)\n      }\n    };\n    if(authContext.userId){\n      fetchData();\n    }\n  }, [authContext.userId]);\n\n  const handleClick = (value: conversationLink) => () => {\n    const currentId = authContext.userId;\n    //const otherUser = value.conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n\n    setSelectedConv({\n      convId: value.conversation.id,\n      owner: authContext.userId,\n      ownerAvatar: ownerAvatar as string,//\"https://i.pravatar.cc/150?img=56\",\n      senderAvatar: value.avatar,\n      senderUsername: value.username,\n      sender: value.receiver//otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId \n    });\n    setFlagValue(true);\n  };\n\n  const backButton = () => {\n    setFlagValue(false);\n\n  }\n\n  return (\n    <div>\n    { flag == false ?(\n      <AppHomeLayout title='RA2 Serverless'>\n\n    <List className={classes.root}>\n\n    {converstaions.length > 0 ? converstaions.map((item: conversationLink,index) => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" dense button onClick={handleClick(item)}>\n      <ListItemAvatar>\n        <Avatar alt=\"Remy Sharp\" src={item.avatar} />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.username}\n      />\n      <ListItemSecondaryAction>\n              <IconButton edge=\"end\" aria-label=\"comments\">\n                <Badge color=\"secondary\" overlap=\"circle\" badgeContent=\" \"\n            invisible={openChats.includes(item.receiver)? false: true}\n            >\n    <CommentIcon color='action'/>\n    </Badge>\n    \n              </IconButton>\n            </ListItemSecondaryAction>\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )): <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <div>No Message Available </div>\n    </Grid>\n    }\n    </List>\n    </AppHomeLayout>)\n    : \n    <div>\n      \t{/* <div className=\"chatApp__loaderWrapper\">\n\t\t<div className=\"chatApp__loaderText\">Loading...</div>\n\t\t<div className=\"chatApp__loader\"></div>\n\t</div> */}\n      <ChatRoom selectedConv={selectedConv} backButton={backButton}>\n\n  </ChatRoom >\n\n</div>\n    }\n    </div>\n\n  );\n}","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\n\nimport Home from './Home'\n//import Privacy from './Privacy'\nimport Auth from '../auth/Auth';\nimport Checkout from '../profilepage/Checkout';\nimport CreateTicket from '../ticket/CreateTicket';\nimport TicketList from '../ticket/TicketList';\nimport ResponsiveDialog from '../ticket/ResponsiveDialog';\nimport ChatList from '../chat/ChatList';\nimport Stripe from '../profilepage/Stripe/Stripe';\n\nexport interface AppProps {}\n\nconst App: React.SFC<AppProps> = () => {\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n\n  //@ts-ignore\n  const RequireAuth =  ({ children })  => {\n    console.log(authContext.userId);\n    if (!authContext.userId) {\n      return <Redirect to={\"/\"} />;\n    }\n    console.log(\"children\",children);\n\n    return children;\n  };\n  //@ts-ignore\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n      authContext.userId\n        ? <Component {...props} />\n        : <Redirect to='/auth' />\n    )} />\n  )\n\n  // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route {...rest} render={(props) => (\n  //     authContext.userId\n  //       ? <Redirect to='/auth' />\n  //       : <Component {...props} />\n  //   )} />\n  // )\n\n  return (\n    <Switch>\n\n      {/* <PrivateRoute path='/' component={TicketList} /> */}\n\n       <Route exact path='/' component={TicketList} /> \n\n      <Route path='/auth' component={Auth} />\n \n      {/* <RequireAuth>\n      <Route path='/checkout' component={Checkout} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/createticket' component={CreateTicket} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/ticketList' component={TicketList} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/dum' component={ResponsiveDialog} />\n      </RequireAuth>  */}\n\n      {/* <RequireAuth>\n      <Route path='/chat' component={ChatList} />\n      </RequireAuth> */}\n      <PrivateRoute path='/chat' component={ChatList} />\n\n      <PrivateRoute path='/checkout' component={Checkout} />\n      <PrivateRoute path='/createticket' component={CreateTicket} />\n      <PrivateRoute path='/ticketList' component={TicketList} />\n\n\n />\n      \n    </Switch>\n  )\n}\n// <Route path='/privacy' component={Privacy} />\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport AuthContextProvider from './auth/auth-context'\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\nlet AwsConfig = JSON.parse(JSON.stringify(config))\n\nAmplify.configure(AwsConfig);\n\nconst app = (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  )\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      color: \"#fff\",\n      backgroundColor: \"#3f51b5\"\n    },\n    title:{\n        color: \"#fff\",\n        backgroundColor: \"#3f51b5\"\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography className={classes.title} variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});"],"sourceRoot":""}
{"version":3,"sources":["aws-exports.js","utils/S3Handler.ts","utils/ImageViewer.tsx","auth/auth-context.tsx","utils/BackDrop.tsx","utils/index.ts","app/AppThemer.tsx","app/AppFooter.tsx","app/AppHeader.tsx","app/AppLayout.tsx","common/Snackbar.tsx","auth/components/styles.tsx","auth/components/AuthButton.tsx","auth/components/AuthPasswordField.tsx","auth/components/AuthLayout.tsx","auth/components/AuthPhoneField.tsx","auth/SignIn.tsx","auth/components/AuthEmailField.tsx","auth/components/AuthReEnterPasswordField.tsx","auth/SignUp.tsx","auth/components/AuthCodeField.tsx","auth/ConfirmSignUp.tsx","auth/ConfirmSignUpEmail.tsx","auth/ResetPassword.tsx","auth/ConfirmResetPassword.tsx","auth/Auth.tsx","profilepage/LocationSearchInput.tsx","profilepage/util.ts","profilepage/AddressForm.tsx","profilepage/EmployeeBackgroundCheck.tsx","app/AppHomeLayout.tsx","graphql/mutations.js","graphql/queries.js","utils/Stripe.ts","profilepage/Stripe/CardSetupForm.tsx","profilepage/Stripe/Stripe.tsx","profilepage/Checkout.tsx","ticket/CreateTicket.tsx","graphql/subscriptions.js","ticket/AlertDialog.tsx","utils/ExpertViewer.tsx","ticket/util.ts","ticket/ResponsiveDialog.tsx","ticket/TicketList.tsx","chat/chat1.tsx","chat/ChatList.tsx","app/App.tsx","serviceWorker.ts","index.tsx","utils/DialogTitle.tsx"],"names":["awsmobile","region","ampConfig","aws_user_files_s3_bucket_region","bucket","aws_user_files_s3_bucket","uploadImage","file","a","fileName","name","mimeType","type","key","uuid","fileForUpload","Storage","put","contentType","console","log","getImages","imageFiles","promises","map","getImage","Promise","all","result","get","avatarUrl","handleImageUpload","compress","imageFile","Blob","size","options","maxSizeMB","maxWidthOrHeight","useWebWorker","imageCompression","compressedFile","useStyles","makeStyles","theme","createStyles","container","padding","ImageViewer","inputimages","openPop","closeAlert","React","useState","scroll","setScroll","useContext","AuthContext","images","setImages","classes","useEffect","files","JSON","parse","fetchData","handleClose","descriptionElementRef","useRef","descriptionElement","current","focus","open","fullScreen","onClose","aria-labelledby","aria-describedby","id","className","currElement","index","src","alt","createContext","user","provider","email","phoneNumber","userId","accountType","isAuthenticated","signUp","reject","confirmSignUp","resendSignUp","signIn","signOut","resetPassword","confirmResetPassword","AuthContextProvider","children","setUser","setProvider","setEmail","setName","setphoneNumber","setUserId","setAccountType","history","useHistory","getUserData","Hub","listen","data","payload","event","push","localStorage","setItem","Auth","currentAuthenticatedUser","then","email1","attributes","name1","provider1","getItem","username","catch","err","useCallback","userEmail","password","resolve","phone_number","message","code","forgotPassword","newPassword","forgotPasswordSubmit","Provider","value","backdrop","zIndex","drawer","color","TVBackdrop","props","onClick","defaultTheme","typography","fontFamily","join","createMuiTheme","Themer","ThemeProvider","NoSsr","Copyright","Typography","variant","align","Link","href","Date","getFullYear","footer","spacing","marginTop","backgroundColor","Footer","useTheme","Container","maxWidth","appBar","boxShadow","appBarBefore","border","menuButton","marginRight","spacer","flexGrow","Header","header","authContext","setOpenCart","authLink","IconButton","aria-label","AppBar","position","Toolbar","edge","root","display","flexDirection","minHeight","main","marginBottom","Layout","title","document","CssBaseline","variantIcon","success","CheckCircleIcon","warning","WarningIcon","error","ErrorIcon","info","InfoIcon","useStyles1","green","palette","dark","primary","amber","icon","fontSize","iconVariant","opacity","alignItems","MySnackbarContentWrapper","Icon","SnackbarContent","clsx","action","useStyles2","margin","SnackBar","setMessage","setOpen","reason","bar","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","form","width","textfield","paper","avatar","secondary","submit","links","btn","btnFederated","grey","btnElems","gridTemplateColumns","btnIcon","gridColumnEnd","btnLabel","height","justifyContent","textTransform","input","AuthButton","disabled","Button","fullWidth","AuthPasswordField","setPassword","showPassword","setShowPassword","valid","setValid","hint","setHint","delay","hintString","FormHelperText","FormControl","required","InputLabel","htmlFor","OutlinedInput","onChange","e","target","clearTimeout","setTimeout","isValid","test","length","endAdornment","InputAdornment","onMouseDown","preventDefault","Visibility","VisibilityOff","labelWidth","AuthLayout","Avatar","component","AuthPhoneField","setPhoneNumber","TextField","label","autoComplete","helperText","currentTarget","AuthSignIn","disable","setDisable","setError","setErrorMsg","onSubmit","submitHandler","noValidate","Grid","item","xs","AuthEmailField","AuthReEnterPasswordField","setRePassword","AuthSignUp","radio","setRadio","formattedPhone","replace","rePassword","FormLabel","RadioGroup","row","FormControlLabel","control","Radio","setCode","AuthConfirmSignUp","location","state","setSuccessMsg","AuthCodeField","AuthConfirmSignUpEmail","AuthReset","routes","exact","path","SignIn","SignUp","ConfirmSignUp","ConfirmSignUpEmail","ResetPassword","ConfirmResetPassword","Fragment","LocationSearchInput","usePlacesAutocomplete","requestOptions","debounce","ready","suggestions","status","setValue","clearSuggestions","handleSelect","description","getGeocode","address","results","geometry","lat","lng","latitudes","toString","longitudes","googleAddressReturn","getLatLng","suggestion","structured_formatting","main_text","secondary_text","stripAddress","address_components","street_number","filter","ll","types","includes","route","postal_code","country","administrative_area_level_1","locality","administrative_area_level_2","address1","long_name","city","county","zip","formatted_address","buttons","button","marginLeft","AddressForm","handleInputChange","setValues","values","handleNext","valuessss","pictures","nextButton","stringify","setLoaded","S3path","picture","firstName","lastName","middelName","address2","aboutme","setPictures","onDrop","loaded","gutterBottom","sm","multiline","rows","withPreview","withIcon","imgExtension","maxFileSize","direction","justify","currencies","EmployeeBackgroundCheck","payment","routingNumber","bankAccountNumber","ssn","backgroundcheck","secondaryPayment","secondaryPaymentType","dob","reroutingNumber","rebankAccountNumber","md","Divider","InputLabelProps","shrink","select","SelectProps","native","option","backButton","top","bottom","paddingBottom","appBarSpacer","mixins","toolbar","stickToBottom","paddingLeft","paddingRight","paddingTop","rootB","HomeLayout","Paper","square","BottomNavigation","newValue","BottomNavigationAction","createConvo","gql","createTicket","updateTicket","assignExpertToTicket","createMessage","updateUser","registerUser","registerFullEmployee","updateEmployee","createConvoLink","updateConvoLink","getUser","getEmployee","getFullUser","getFullEmployee","getConvo","getOpenTicket","getUserConversations","getEmployeeConversations","createCustomer","myInit","response","body","phone","headers","API","post","customerId","url","customerKey","intent","client_secret","CardSetupForm","stripe","useStripe","elements","useElements","handleSubmit","keys","confirmCardSetup","payment_method","card","getElement","CardNumberElement","billing_details","setupIntent","useMemo","style","base","letterSpacing","invalid","cardNumber","expiry","cvc","onReady","onBlur","onFocus","stripePromise","loadStripe","Stripe","layout","breakpoints","up","stepper","Checkout","activeStep","setActiveStep","setAddress","setPayment","isCreate","setisCreate","isEmp","setisEmp","setBackdrop","steps","navigator","geolocation","getCurrentPosition","Object","enableHighAccuracy","timeout","maximumAge","op","graphql","graphqlOperation","commentData","cardInfo","updateProfile","paymentV","registered","active","zipcode","handleBack","AppHomeLayout","Stepper","Step","StepLabel","step","Error","getStepContent","Backdrop","CircularProgress","CreateTicket","createNewTicket","ticketUserInfo","newId","countAndId","price","time","content","destination","source","ownerUploadImages","ticketUserId","onCreateMessage","onCreateTicket","onUpdatedTicket","AlertDialog","textValue","setTextValue","handleOperation","Dialog","keepMounted","DialogTitle","DialogContent","DialogContentText","autoFocus","DialogActions","ExpertViewer","employee","emp","setEmp","defaultValue","launchNewConversation","expertid","chat","conversation","owner","convoLinkUserId","convoLinkConversationId","service","convoLinkEmployeeId","ownerConvLink","serviceConvLink","ownerConvLinkConf","serviceConvLinkConf","mm","xy","findConverationWithUser","expertId","setIsEmployee","employeeConversations","items","convoLinks","convoLink","find","c","associated","some","conversationName","userConversations","startConvoWithUser","conversationInfo","AcceptTicket","close","formEdit","setFormEdit","setclosedComment","closedComment","acceptTicket","authid","ticketEmployeeInfo","ticketEmployeeId","openAlert","setOpenAlert","alertType","setAlertType","comments","closedTime","toUTCString","openUserImage","setOpenUserImage","imageListen","openExpert","setExpert","expertShow","chatWithExpert","currentId","otherId","conv","pathname","dividers","Chip","clickable","deleteIcon","background","subHeader","fontWeight","inline","rating","buttonCart","buttonGird","cartLabel","borderRadius","absolute","right","fab","chipTop","TicketList","cartValue","openErrands","setOpenErrands","ownerrands","setOwnerrands","completedJob","setCompletedJob","setIsAuth","handleListClick","setSelectedItem","setOpenBuy","openBuy","selectedItem","isEmployee","useReducer","errand","updated","forEach","element","filtered","el","i","dispatch","unsubscribe","acceptedJobs","employeeTickets","closed","jobsByStatus","createdSub","subscribe","next","todoData","updatedsubscription","userTickets","errands","undefined","List","subheader","ListSubheader","ListItem","ListItemText","Tooltip","Fab","Title","context","Component","uploadFile","InputMessage","messageInput","ownerInput","ownerAvatarInput","handleFileChange","startsWith","reader","FileReader","self","onload","setState","popoverOpen","filePreviewSrc","this","readAsDataURL","handleSendMessage","bind","sendMessageLoading","imgBtnClass","loadingClass","isLoading","sendButtonIcon","accept","Popover","placement","isOpen","PopoverHeader","aria-hidden","PopoverBody","ref","ownerAvatar","placeholder","MessageList","messages","slice","reverse","messageItem","sender","senderAvatar","MessageItem","fileUrl","prevProps","prevState","prevMsg","nodebugImage","currMsg","checkFileUrl","Cache","expires","getTime","messageRight","messagePosition","dangerouslySetInnerHTML","__html","ChatBox","prop","sendMessage","senderUsername","ChatRoom","trim","sendMes","isSent","chatbot","messageConversationId","selectedConv","convId","newMessage","users","chatBoxes","ChatList","converstaions","setConverstaions","flag","setFlagValue","setSelectedConv","useLocation","otherUser","theArray","dense","ListItemAvatar","App","PrivateRoute","rest","render","to","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","AwsConfig","Amplify","configure","app","basename","process","ReactDOM","getElementById","URL","origin","addEventListener","fetch","indexOf","unregister","reload","checkValidServiceWorker","withStyles","closeButton","other","disableTypography"],"mappings":"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","file":"static/js/main.219e2d5d.chunk.js","sourcesContent":["// WARNING: DO NOT EDIT. This file is automatically generated by AWS Amplify. It will be overwritten.\n\nconst awsmobile = {\n    \"aws_project_region\": \"us-east-1\",\n    \"aws_cognito_identity_pool_id\": \"us-east-1:780660c0-fe39-4799-8b55-aa24ea58f027\",\n    \"aws_cognito_region\": \"us-east-1\",\n    \"aws_user_pools_id\": \"us-east-1_FrdnQ508F\",\n    \"aws_user_pools_web_client_id\": \"36ple9cs7k9q8ub2cmvu5kec13\",\n    \"oauth\": {},\n    \"aws_appsync_graphqlEndpoint\": \"https://ntirg4wvdfhq5penwxblokjri4.appsync-api.us-east-1.amazonaws.com/graphql\",\n    \"aws_appsync_region\": \"us-east-1\",\n    \"aws_appsync_authenticationType\": \"AMAZON_COGNITO_USER_POOLS\",\n    \"aws_cloud_logic_custom\": [\n        {\n            \"name\": \"stripeapi\",\n            \"endpoint\": \"https://15xvd10j24.execute-api.us-east-1.amazonaws.com/dev\",\n            \"region\": \"us-east-1\"\n        }\n    ],\n    \"aws_user_files_s3_bucket\": \"ondemandappd2a9576520ae431a98cad954a5d551bc211754-dev\",\n    \"aws_user_files_s3_bucket_region\": \"us-east-1\"\n};\n\n\nexport default awsmobile;\n","import ampConfig from '../aws-exports'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport imageCompression from 'browser-image-compression';\nimport { Storage, Auth, } from 'aws-amplify'\n\nconst {\n  aws_user_files_s3_bucket_region: region,\n  aws_user_files_s3_bucket: bucket\n} = ampConfig;\n\n\nasync function uploadImage(file: any) {\n\n    if (file) {\n        \n        const { name: fileName, type: mimeType } = file  \n        const key = `${uuid()}${fileName}`\n        const fileForUpload = {\n            bucket,\n            key,\n            region,\n        }\n\n        try {\n            await Storage.put(key ,file, {\n                contentType: mimeType\n            })\n          console.log('successfully stored user data!')\n          return fileForUpload;\n        } catch (err) {\n          console.log('error: ', err)\n        }\n    }\n}\n\nexport async function getImages(imageFiles: any[]) {\n    console.log('getImages!', imageFiles);\n\n    // map array to promises\n    const promises = imageFiles.map(getImage);\n    // wait until all promises are resolved\n    const result = await Promise.all(promises);\n    console.log('getImages!', result);\n    return result;\n}\n\nasync function getImage(imageFiles: any) {\n    const avatarUrl = await Storage.get(imageFiles.key )\n    return avatarUrl;\n}\n\n  \n\nexport async function handleImageUpload(imageFiles: any[]) {\n\n  // map array to promises\n  const promises = imageFiles.map(compress);\n  // wait until all promises are resolved\n  const result = await Promise.all(promises);\n  console.log('Done!', result);\n  return result;\n}\n\nasync function compress(imageFile: any) {\n\n        console.log('originalFile instanceof Blob', imageFile instanceof Blob); // true\n        console.log(`originalFile size ${imageFile.size / 1024 / 1024} MB`);\n      \n        const options = {\n          maxSizeMB: 1,\n          maxWidthOrHeight: 1920,\n          useWebWorker: false\n        }\n        try {\n          const compressedFile = await imageCompression(imageFile, options);\n          console.log('compressedFile instanceof Blob', compressedFile instanceof Blob); // true\n          console.log(`compressedFile size ${compressedFile.size / 1024 / 1024} MB`); // smaller than maxSizeMB\n          return await uploadImage(compressedFile); // write your own logic\n        } catch (error) {\n            console.log(error);\n          }\n\n  }","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  inputimages: string;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ImageViewer: React.SFC<AcceptProps> = ({inputimages, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      const files = JSON.parse(inputimages);\n      const result = await getImages(files);\n      console.log(\"images\", result);\n      //@ts-ignore\n      setImages(result);\n    };\n    fetchData();\n  }, []);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return (\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Ticket Details</DialogTitle>\n        <div className={classes.container}>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog>\n  );\n}\n\nexport default ImageViewer;","import React, { useState, useCallback, useEffect } from 'react'\nimport { Auth, Hub } from 'aws-amplify'\nimport { useHistory } from 'react-router-dom'\n\nexport interface AuthContextProps {\n  user: any\n  provider: string\n  name: string\n  email: string,\n  phoneNumber: string,\n  userId: string,\n  accountType: string,\n  isAuthenticated(): boolean\n  signUp(username: string, password: string, phoneNumber: string, accountType: string): Promise<any>\n  confirmSignUp(phoneNumber: string, code: string): Promise<any>\n  resendSignUp(phoneNumber: string): Promise<any>\n  signIn(phoneNumber: string, password: string): Promise<any>\n  signOut(): Promise<any>\n  resetPassword(phoneNumber: string): Promise<any>\n  confirmResetPassword(\n    phoneNumber: string,\n    newPassword: string,\n    code: string\n  ): Promise<any>\n}\n\nexport const AuthContext = React.createContext<AuthContextProps>({\n  user: null,\n  provider: '',\n  name: '',\n  email: '',\n  phoneNumber: '',\n  userId: '',\n  accountType: '',\n  isAuthenticated: () => false,\n  signUp: () => new Promise(reject => reject(0)),\n  confirmSignUp: () => new Promise(reject => reject(0)),\n  resendSignUp: () => new Promise(reject => reject(0)),\n  signIn: () => new Promise(reject => reject(0)),\n  signOut: () => new Promise(reject => reject(0)),\n  resetPassword: () => new Promise(reject => reject(0)),\n  confirmResetPassword: () => new Promise(reject => reject(0))\n})\n\nexport interface AuthContextProviderProps {\n  children: any\n}\n\nconst AuthContextProvider: React.SFC<AuthContextProviderProps> = ({\n  children\n}) => {\n  const [user, setUser] = useState<any>(null)\n  const [provider, setProvider] = useState<string>('')\n  const [email, setEmail] = useState<string>('')\n  const [name, setName] = useState<string>('')\n  const [phoneNumber, setphoneNumber] = useState<string>('')\n  const [userId, setUserId] = useState<string>('')\n  const [accountType, setAccountType] = useState<string>('')\n\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('checking for authenticated user...')\n    getUserData()\n  }, [])\n\n  useEffect(() => {\n    Hub.listen('auth', data => {\n      const { payload } = data\n      switch (payload.event) {\n        case 'signIn':\n          getUserData()\n          history.push('/')\n          break\n        case 'signOut':\n          setUser(null)\n          setProvider('')\n          localStorage.setItem('provider', '')\n          setEmail('')\n          setName('')\n          setphoneNumber('')\n          setUserId('')\n          history.push('/')\n          break\n      }\n    })\n  }, [])\n\n  const getUserData = () => {\n    Auth.currentAuthenticatedUser()\n      .then(data => {\n        console.log('current', data)\n        setUser(data)\n        const email1 = data.email || data.attributes.email || ''\n        const name1 = data.name || data.attributes.email || ''\n        const provider1 = localStorage.getItem('provider') || ''\n\n        setUserId(data.username)\n        setEmail(email1)\n        setName(name1)\n        setProvider(provider1)\n        setAccountType(data.attributes[\"custom:account_type\"])\n\n        // console.log('email:', email1, email)\n        // console.log('name:', name1)\n        // console.log('provider:', provider1)\n         console.log('provider:', accountType,data.attributes, data.attributes[\"custom:account_type\"])\n\n\n      })\n      .catch(err => {\n        console.log('no current authenticated user')\n      })\n  }\n\n  const isAuthenticated = (): boolean => user !== null\n\n  const signUp = useCallback((userEmail: string, password: string, phoneNumber: string, accountType: string) => {\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.signUp({\n          username: \"+1\"+phoneNumber,\n          password: password,\n          attributes: {\n            email: userEmail,          \n            phone_number: \"+1\"+phoneNumber,\n            'custom:account_type': accountType\n        },\n        })\n        console.log(user)\n        resolve(user)\n      } catch (err) {\n        console.log(err)\n        let message: string = 'An internal error occurred.'\n        switch (err.code) {\n          case 'UserNotConfirmedException':\n          case 'PasswordResetRequiredException':\n          case 'NotAuthorizedException':\n          case 'UserNotFoundException':\n          case 'UsernameExistsException':\n            message = err.message\n            break\n          default:\n            console.log(err)\n            break\n        }\n        reject(message)\n      }\n    })\n  }, [])\n\n  const confirmSignUp = useCallback((phoneNumber: string, code: string) => {\n    console.log('confirm sign up', phoneNumber, code)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const { user } = await Auth.confirmSignUp(\"+1\"+phoneNumber, code)\n        resolve(user)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const signIn = useCallback((phoneNumber: string, password: string) => {\n    console.log('sign in', phoneNumber, password)\n    return new Promise(async (resolve, reject) => {\n      try {\n        const data = await Auth.signIn({\n          username: \"+1\"+phoneNumber,\n          password: password\n        })\n        localStorage.setItem('provider', 'email')\n        console.log(data)\n        resolve(data)\n      } catch (err) {\n        const message = err.message || 'An internal error occurred.'\n        reject(message)\n      }\n    })\n  }, [])\n\n  const resendSignUp = useCallback((phoneNumber: string) => {\n    console.log('resend sign up', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.resendSignUp(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const signOut = useCallback(() => {\n    console.log('sign out')\n    return new Promise((resolve, reject) => {\n      Auth.signOut()\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const resetPassword = useCallback((phoneNumber: string) => {\n    console.log('reset password', phoneNumber)\n    return new Promise((resolve, reject) => {\n      Auth.forgotPassword(\"+1\"+phoneNumber)\n        .then(data => {\n          resolve(data)\n        })\n        .catch(err => {\n          const message = err.message || 'An internal error occurred.'\n          reject(message)\n        })\n    })\n  }, [])\n\n  const confirmResetPassword = useCallback(\n    (phoneNumber: string, newPassword: string, code: string) => {\n      console.log('confirm reset password', phoneNumber, code, newPassword)\n      return new Promise((resolve, reject) => {\n        Auth.forgotPasswordSubmit(\"+1\"+phoneNumber, code, newPassword)\n          .then(data => resolve(data))\n          .catch(err => {\n            const message = err.message || 'An internal error occurred.'\n            reject(message)\n          })\n      })\n    },\n    []\n  )\n\n  return (\n    <AuthContext.Provider\n      value={{\n        user: user,\n        provider: provider,\n        name: name,\n        email: email,\n        phoneNumber: phoneNumber,\n        accountType: accountType,\n        userId: userId,\n        isAuthenticated: isAuthenticated,\n        signUp: signUp,\n        confirmSignUp: confirmSignUp,\n        resendSignUp: resendSignUp,\n        signIn: signIn,\n        signOut: signOut,\n        resetPassword: resetPassword,\n        confirmResetPassword: confirmResetPassword\n      }}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider\n","import React from 'react';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    backdrop: {\n      zIndex: theme.zIndex.drawer + 1,\n      color: '#fff',\n    },\n  }),\n);\n\n interface TVBackdropProps {\n    open: boolean;\n  }\n\n export const TVBackdrop: React.SFC<TVBackdropProps> = (props) => {\n  const classes = useStyles();\n  //const [open, setOpen] = React.useState(false);\n  const handleClose = () => {\n    //setOpen(false);\n  };\n\n  return (\n    <div>\n      <Backdrop className={classes.backdrop} open={props.open} onClick={handleClose}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </div>\n  );\n};\n","export * from './DialogTitle';\nexport * from './S3Handler';\nexport * from './ImageViewer';\nexport * from './model';\nexport * from './BackDrop';","import React from 'react'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { createMuiTheme } from '@material-ui/core'\nimport NoSsr from '@material-ui/core/NoSsr'\n\nconst defaultTheme = {\n  typography: {\n    fontFamily: ['Roboto', 'sans-serif'].join(',')\n  }\n}\nconst theme = createMuiTheme(defaultTheme)\n\nexport interface ThemerProps {\n  children: any\n}\n\nconst Themer: React.SFC<ThemerProps> = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <NoSsr>{children}</NoSsr>\n    </ThemeProvider>\n  )\n}\n\nexport default Themer\n","import React from 'react'\n\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport Link from '@material-ui/core/Link'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nfunction Copyright() {\n  return (\n    <Typography variant='body2' color='textSecondary' align='center'>\n      {'TravTail ™ '}\n      <Link\n        color='inherit'\n        href='https://travtail.com/'>\n        \n      </Link>\n      {new Date().getFullYear()}\n    </Typography>\n  )\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    footer: {\n      padding: theme.spacing(2),\n      marginTop: 'auto',\n      backgroundColor: '#f6f6f6'\n    }\n  })\n)\n\nexport interface FooterProps {}\n\nconst Footer: React.SFC<FooterProps> = () => {\n  const classes = useStyles(useTheme())\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth='sm'>\n        <Copyright />\n      </Container>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React, { useContext } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nimport { Toolbar, AppBar, IconButton, Button } from '@material-ui/core'\nimport HomeIcon from '@material-ui/icons/Home'\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    appBar: { boxShadow: 'none', backgroundColor: 'transparent' },\n    appBarBefore: { backgroundColor: '#fff', border: 1 },\n\n    menuButton: {\n      marginRight: theme.spacing(2)\n    },\n    spacer: {\n      flexGrow: 1\n    }\n  })\n)\n\nexport interface HeaderProps {\n  header?: string;\n}\n\nconst Header: React.SFC<HeaderProps> = ({ header }) => {\n  const classes = useStyles(useTheme())\n  const authContext = useContext(AuthContext);\n  const history = useHistory()\n\n  const [openCart, setOpenCart] = React.useState(false);\n\n  const buyButton = () => {\n    setOpenCart(true)\n  };\n\n  const closeBuyButton = () => {\n    setOpenCart(false)\n  };\n\n  let authLink = authContext.isAuthenticated() ? (\n    <div>\n      <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\"\n    className={classes.menuButton}\n    onClick={() => history.push('/chat')}\n>\n    <NotificationsIcon color='action'/>\n</IconButton>\n\n{ header ?(<IconButton aria-label=\"show 17 new notifications\" color=\"inherit\"\n    className={classes.menuButton}\n    onClick={buyButton}\n>\n    <AddShoppingCartIcon color='action'/>\n</IconButton>) : null}\n\n    {/* <Button color='primary' onClick={() => authContext.signOut()}>\n      Sign Out\n    </Button> */}\n    </div>\n  ) : null\n\n  return (\n    <AppBar position='fixed' className={authContext.isAuthenticated() ? classes.appBarBefore :classes.appBar}>\n      <Toolbar>\n        <IconButton\n          edge='start'\n          className={classes.menuButton}\n          onClick={() => history.push('/')}\n          color='inherit'\n          aria-label='home'>\n          <HomeIcon color='action' />\n        </IconButton>\n        <div className={classes.spacer}></div>\n        {authLink}\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default Header\n","import React, { useEffect } from 'react'\n\nimport Themer from './AppThemer'\nimport Footer from './AppFooter'\nimport Header from './AppHeader'\n\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '100vh'\n    },\n    main: {\n      // marginTop: theme.spacing(8),// sign In  top\n      marginBottom: theme.spacing(2)\n    }\n  })\n)\n\nexport interface LayoutProps {\n  title: string\n  children: any\n}\n\nconst Layout: React.SFC<LayoutProps> = ({ title, children }) => {\n  const classes = useStyles(useTheme())\n\n  useEffect(() => {\n    document.title = title\n  }, [title])\n\n  return (\n    <Themer>\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header />\n        <Container className={classes.main} maxWidth='sm'>\n          {children}\n        </Container>\n        <Footer />\n      </div>\n    </Themer>\n  )\n}\n\nexport default Layout\n","import React, { SyntheticEvent, useState, useEffect } from 'react'\nimport clsx from 'clsx'\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle'\nimport ErrorIcon from '@material-ui/icons/Error'\nimport InfoIcon from '@material-ui/icons/Info'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { amber, green } from '@material-ui/core/colors'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport SnackbarContent from '@material-ui/core/SnackbarContent'\nimport WarningIcon from '@material-ui/icons/Warning'\nimport { makeStyles, Theme } from '@material-ui/core/styles'\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon\n}\n\nconst useStyles1 = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600]\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main\n  },\n  warning: {\n    backgroundColor: amber[700]\n  },\n  icon: {\n    fontSize: 20\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1)\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center'\n  }\n}))\n\nexport interface Props {\n  className: string\n  message: string\n  onClose: () => void\n  variant: keyof typeof variantIcon\n}\n\nfunction MySnackbarContentWrapper(props: Props) {\n  const classes = useStyles1()\n  const { className, message, onClose, variant } = props\n  const Icon = variantIcon[variant]\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby='client-snackbar'\n      message={\n        <span id='client-snackbar' className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key='close'\n          aria-label='close'\n          color='inherit'\n          onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>\n      ]}\n    />\n  )\n}\n\nconst useStyles2 = makeStyles((theme: Theme) => ({\n  margin: {\n    margin: theme.spacing(1)\n  }\n}))\n\nexport interface SnackBarProps {\n  variant: keyof typeof variantIcon\n  message: string\n  setMessage: (message: string) => void\n}\n\nconst SnackBar: React.SFC<SnackBarProps> = ({\n  variant,\n  message,\n  setMessage\n}) => {\n  const classes = useStyles2()\n  const [open, setOpen] = useState(false)\n\n  useEffect(() => {\n    setOpen(message === '' ? false : true)\n  }, [message])\n\n  useEffect(() => {\n    !open && setMessage('')\n  }, [open])\n\n  const handleClose = (event?: SyntheticEvent, reason?: string) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const bar = (\n    <Snackbar\n      anchorOrigin={{\n        vertical: 'bottom',\n        horizontal: 'center'\n      }}\n      open={open}\n      autoHideDuration={3000}\n      onClose={handleClose}>\n      <MySnackbarContentWrapper\n        onClose={handleClose}\n        className={classes.margin}\n        variant={variant}\n        message={message}\n      />\n    </Snackbar>\n  )\n\n  return <div>{bar}</div>\n}\n\nexport default SnackBar","import {\n  useTheme,\n  createStyles,\n  makeStyles,\n  Theme\n} from '@material-ui/core/styles'\n\nexport const useStyles = makeStyles((theme: Theme = useTheme()) =>\n  createStyles({\n    form: {\n      width: '100%', // Fix IE 11 issue.\n      marginTop: theme.spacing(1)\n    },\n    textfield: {\n      margin: theme.spacing(2, 0, 0),\n    },\n    paper: {\n      marginTop: theme.spacing(8),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    avatar: {\n      margin: theme.spacing(1),\n      backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n      margin: theme.spacing(3, 0, 2)\n    },\n    links: {\n      padding: '0px 5px'\n    },\n    btn: {\n      width: '100%',\n      maxWidth: '260px',\n      marginTop: theme.spacing(2)\n    },\n    btnFederated: {\n      backgroundColor: 'white',\n      color: theme.palette.grey[600]\n    },\n    btnElems: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    },\n    btnIcon: {\n      display: 'flex',\n      gridColumnEnd: 'span 2'\n    },\n    btnLabel: {\n      height: '100%',\n      display: 'flex',\n      justifyContent: 'center',\n      gridColumnEnd: 'span 10',\n      textTransform: 'none'\n    },\n    input: {\n      padding : '11.5px 10px'\n    },\n    container: {\n      display: 'grid',\n      width: '100%',\n      gridTemplateColumns: 'repeat(12, 2fr)'\n    }\n  })\n)\n","import React from 'react'\n\nimport Button from '@material-ui/core/Button'\nimport { useStyles } from './styles'\n\nexport interface AuthButtonProps {\n  children: any\n  disabled: boolean\n}\n\nconst AuthButton: React.SFC<AuthButtonProps> = ({ children, disabled }) => {\n  const classes = useStyles()\n\n  return (\n    <Button\n      type='submit'\n      disabled={disabled}\n      fullWidth\n      variant='contained'\n      color='primary'\n      size='large'\n      className={classes.submit}>\n      {children}\n    </Button>\n  )\n}\n\nexport default AuthButton\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n  setPassword: (password: string) => void\n}\n\nconst AuthPasswordField: React.SFC<AuthPasswordFieldProps> = ({\n  setPassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      setPassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-password' error={!valid}>\n        Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthPasswordField\n","import React from 'react'\n\nimport Avatar from '@material-ui/core/Avatar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport Container from '@material-ui/core/Container'\nimport { useStyles } from './styles'\n\nexport interface AuthLayoutProps {\n  title: string\n  children: any\n}\n\nconst AuthLayout: React.SFC<AuthLayoutProps> = ({ title, children }) => {\n  const classes = useStyles()\n\n  return (\n    <Container maxWidth='xs'>\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component='h1' variant='h5'>\n          {title}\n        </Typography>\n        {children}\n      </div>\n    </Container>\n  )\n}\n\nexport default AuthLayout\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthPhoneFieldProps {\n  setPhoneNumber: (phoneNumber: string) => void\n}\n\nconst AuthPhoneField: React.SFC<AuthPhoneFieldProps> = ({ setPhoneNumber }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (phoneNumber: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/im.test(phoneNumber)\n      console.log(\"phone\",phoneNumber);\n      setValid(isValid)\n      setHint(\n        isValid ? '' : phoneNumber.length > 0 ? 'Invalid phoneNumber.' : 'Enter phoneNumber.'\n      )\n      setPhoneNumber(isValid ? phoneNumber : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='phoneNumber'\n      label='Phone Number'\n      name='phoneNumber'\n      autoComplete='phoneNumber'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthPhoneField\n","import React, { useContext, useState, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthSignInProps {}\n\nconst AuthSignIn: React.SFC<AuthSignInProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && password))\n  }, [phoneNumber, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .signIn(phoneNumber, password)\n      .then(data => {\n        console.log('sign in success!')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Sign In'>\n      <AuthLayout title='Sign In'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthButton disabled={disable}>Sign In</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/resetpassword')}\n                variant='body2'>\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup')}\n                variant='body2'>\n                Sign Up\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignIn\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setEmail: (email: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setEmail }) => {\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (email: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^[a-zA-Z0-9.]+@[a-zA-Z0-9]+\\.[A-Za-z]+$/.test(email)\n      setValid(isValid)\n      setHint(\n        isValid ? '' : email.length > 0 ? 'Invalid email.' : 'Enter email.'\n      )\n      setEmail(isValid ? email : '')\n      delay = null\n    }, 200)\n  }\n\n  return (\n    <TextField\n      error={!valid}\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='email'\n      label='Email Address'\n      name='email'\n      autoComplete='email'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState } from 'react'\n\nimport { useStyles } from './styles'\nimport {\n  FormControl,\n  InputLabel,\n  OutlinedInput,\n  InputAdornment,\n  IconButton,\n  FormHelperText\n} from '@material-ui/core'\n\nimport { Visibility, VisibilityOff } from '@material-ui/icons'\n\nexport interface AuthPasswordFieldProps {\n    setRePassword: (rePassword: string) => void\n}\n\nconst AuthReEnterPasswordField: React.SFC<AuthPasswordFieldProps> = ({\nsetRePassword\n}) => {\n  const [showPassword, setShowPassword] = useState<boolean>(false)\n  const [valid, setValid] = useState<boolean>(true)\n  const [hint, setHint] = useState<string>('')\n\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword)\n  }\n\n  const handleMouseDownPassword = (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault()\n  }\n\n  let delay: any = null\n  const validate = (password: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = /^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z]).{8,32}$/.test(password)\n      setValid(isValid)\n      setHint(password.length > 0 ? 'Invalid password.' : 'Enter password.')\n      setRePassword(isValid ? password : '')\n      delay = null\n    }, 200)\n  }\n\n  const classes = useStyles()\n  const hintString = valid ? null : (\n    <FormHelperText error={!valid} id='standard-weight-helper-text'>\n      {hint}\n    </FormHelperText>\n  )\n  return (\n    <FormControl\n      required\n      variant='outlined'\n      fullWidth\n      className={classes.textfield}>\n      <InputLabel htmlFor='outlined-adornment-re-password' error={!valid}>\n        Re Enter Password\n      </InputLabel>\n      <OutlinedInput\n        required\n        error={!valid}\n        id='outlined-adornment-re-password'\n        type={showPassword ? 'text' : 'password'}\n        onChange={e => validate(e.target.value)}\n        endAdornment={\n          <InputAdornment position='end'>\n            <IconButton\n              aria-label='toggle password visibility'\n              onClick={handleClickShowPassword}\n              onMouseDown={handleMouseDownPassword}>\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={80}\n      />\n      {hintString}\n    </FormControl>\n  )\n}\n\nexport default AuthReEnterPasswordField\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\n\nimport { AuthContext } from './auth-context'\nimport AuthLayout from './components/AuthLayout'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthReEnterPasswordField from './components/AuthReEnterPasswordField'\nimport AuthPhoneField from './components/AuthPhoneField'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthButton from './components/AuthButton'\nimport { useStyles } from './components/styles'\n\nexport interface AuthSignUpProps {}\n\nconst AuthSignUp: React.SFC<AuthSignUpProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [email, setEmail] = useState<string>('')\n  const [password, setPassword] = useState<string>('')\n  const [rePassword, setRePassword] = useState<string>('')\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const history = useHistory()\n\n\n  const [radio, setRadio] = React.useState('');\n\n  const handleRadioChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRadio((event.target as HTMLInputElement).value);\n  };\n\n  useEffect(() => {\n    setDisable(!(email && password && phoneNumber && radio))\n  }, [email, password, phoneNumber, radio])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault();\n    const formattedPhone = phoneNumber.replace( /^\\D+/g, '');\n    authContext\n      .signUp(email, password, formattedPhone, radio)\n      .then(data => {\n        history.push('/auth/signup/confirm', formattedPhone)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='Sign Up'>\n      <AuthLayout title='Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthEmailField setEmail={email => setEmail(email)} />\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthReEnterPasswordField setRePassword={rePassword => setRePassword(rePassword)} />\n\n\n          <FormControl  className={classes.form}  component=\"fieldset\">\n      <FormLabel component=\"legend\">Account Type</FormLabel>\n      <RadioGroup row aria-label=\"position\"  value={radio} onChange={handleRadioChange}>\n      <FormControlLabel value=\"Customer\" control={<Radio />} label=\"Customer\" />\n          <FormControlLabel value=\"Employee\" control={<Radio />} label=\"Employee\" />\n      </RadioGroup>\n    </FormControl>\n\n\n          <AuthButton disabled={disable}>Sign Up</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth')}\n                variant='body2'>\n                {'Sign In'}\n              </Link>\n            </Grid>\n            <Grid item className={classes.links}>\n              <Link\n                href='#'\n                onClick={() => history.push('/auth/signup/confirmemail')}\n                variant='body2'>\n                {'Confirm Sign Up'}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthSignUp\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\n\nexport interface AuthEmailFieldProps {\n  setCode: (code: string) => void\n}\n\nconst AuthEmailField: React.SFC<AuthEmailFieldProps> = ({ setCode }) => {\n  const [hint, setHint] = useState<string>('')\n\n  let delay: any = null\n  const validate = (code: string): any => {\n    if (delay !== null) {\n      clearTimeout(delay)\n    }\n    delay = setTimeout(() => {\n      const isValid = code.length === 6\n      setHint(isValid ? '' : 'Incorrect code length.')\n      setCode(isValid ? code : '')\n      delay = null\n    }, 300)\n  }\n\n  return (\n    <TextField\n      variant='outlined'\n      margin='normal'\n      required\n      fullWidth\n      id='confirmation'\n      label='Confirmation Code'\n      name='confirmation'\n      helperText={hint}\n      onChange={e => validate(e.currentTarget.value)}\n    />\n  )\n}\n\nexport default AuthEmailField\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const phoneNumber = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!code)\n  }, [code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthConfirmSignUpEmailProps {}\n\nconst AuthConfirmSignUpEmail: React.SFC<AuthConfirmSignUpEmailProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!(phoneNumber && code))\n  }, [phoneNumber, code])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmSignUp(phoneNumber, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(phoneNumber)\n      .then(data => {\n        setMessage('Code resent to your phoneNumber.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Sign Up'>\n      <AuthLayout title='Confirm Sign Up'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUpEmail\n","import React, { useState, useEffect, useContext, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from './auth-context'\nimport Layout from '../app/AppLayout'\nimport AuthButton from './components/AuthButton'\nimport AuthEmailField from './components/AuthEmailField'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\nimport AuthPhoneField from './components/AuthPhoneField'\n\nexport interface AuthResetProps {}\n\nconst AuthReset: React.SFC<AuthResetProps> = () => {\n  const authContext = useContext(AuthContext)\n  const [error, setError] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [email, setEmail] = useState<string>('')\n  const history = useHistory()\n  const [phoneNumber, setPhoneNumber] = useState<string>('')\n\n  useEffect(() => {\n    setDisable(!phoneNumber)\n  }, [phoneNumber])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .resetPassword(phoneNumber)\n      .then(data => {\n        console.log('response', data, phoneNumber)\n        history.push('/auth/resetpassword/confirm', phoneNumber)\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const classes = useStyles()\n\n  return (\n    <Layout title='RA2 Reset Password'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPhoneField setPhoneNumber={phoneNumber => setPhoneNumber(phoneNumber)} />\n          <AuthButton disabled={disable}>Reset</AuthButton>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthReset\n","import React, { useState, useContext, useEffect, useCallback } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Link, Grid } from '@material-ui/core'\n\nimport Layout from '../app/AppLayout'\nimport Snackbar from '../common/Snackbar'\n\nimport { AuthContext } from './auth-context'\nimport AuthPasswordField from './components/AuthPasswordField'\nimport AuthCodeField from './components/AuthCodeField'\nimport AuthButton from './components/AuthButton'\nimport AuthLayout from './components/AuthLayout'\nimport { useStyles } from './components/styles'\n\nexport interface AuthConfirmSignUpProps {\n  location: any\n}\n\nconst AuthConfirmSignUp: React.SFC<AuthConfirmSignUpProps> = props => {\n  const authContext = useContext(AuthContext)\n  const [password, setPassword] = useState<string>('')\n  const [code, setCode] = useState<string>('')\n  const [disable, setDisable] = useState<boolean>(true)\n  const [error, setError] = useState<string>('')\n  const [message, setMessage] = useState<string>('')\n  const history = useHistory()\n  const email = props.location.state || ''\n\n  useEffect(() => {\n    setDisable(!(code && password))\n  }, [code, password])\n\n  const submitHandler = (e: any) => {\n    e.preventDefault()\n    authContext\n      .confirmResetPassword(email, password, code)\n      .then(data => {\n        console.log(data)\n        history.push('/')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const resendHandler = () => {\n    authContext\n      .resendSignUp(email)\n      .then(data => {\n        setMessage('Code resent to your email.')\n      })\n      .catch(err => {\n        console.error('error:', err)\n        setError(err)\n      })\n  }\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const setSuccessMsg = useCallback((message: string) => {\n    setMessage(message)\n  }, [])\n\n  const classes = useStyles()\n  return (\n    <Layout title='RA2 Confirm Reset'>\n      <AuthLayout title='Reset Password'>\n        <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        <Snackbar\n          variant='success'\n          message={message}\n          setMessage={message => setSuccessMsg(message)}\n        />\n        <form\n          className={classes.form}\n          onSubmit={e => submitHandler(e)}\n          noValidate>\n          <AuthPasswordField setPassword={password => setPassword(password)} />\n          <AuthCodeField setCode={code => setCode(code)} />\n          <AuthButton disabled={disable}>Confirm</AuthButton>\n          <Grid container>\n            <Grid item xs className={classes.links}></Grid>\n            <Grid item className={classes.links}>\n              <Link href='#' onClick={() => resendHandler()} variant='body2'>\n                Resend code\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </AuthLayout>\n    </Layout>\n  )\n}\n\nexport default AuthConfirmSignUp\n","import React, { useContext, useEffect } from 'react'\nimport { Route, Switch, useHistory } from 'react-router-dom'\n\nimport { AuthContext } from './auth-context'\nimport SignIn from './SignIn'\nimport SignUp from './SignUp'\nimport ConfirmSignUp from './ConfirmSignUp'\nimport ConfirmSignUpEmail from './ConfirmSignUpEmail'\nimport ResetPassword from './ResetPassword'\nimport ConfirmResetPassword from './ConfirmResetPassword'\n\nexport interface AuthProps {}\n\nconst Auth: React.SFC<AuthProps> = () => {\n  const authContext = useContext(AuthContext)\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('authenticated?', authContext.isAuthenticated())\n    if (authContext.isAuthenticated()) {\n      history.push('/')\n    }\n  }, [])\n\n  authContext.isAuthenticated() && history.push('/')\n\n  const routes = authContext.isAuthenticated() ? null : (\n    <Switch>\n      <Route exact path='/auth' component={SignIn} />\n      <Route exact path='/auth/signup' component={SignUp} />\n      <Route exact path='/auth/signup/confirm' component={ConfirmSignUp} />\n      <Route\n        exact\n        path='/auth/signup/confirmemail'\n        component={ConfirmSignUpEmail}\n      />\n      <Route exact path='/auth/resetpassword' component={ResetPassword} />\n      <Route\n        exact\n        path='/auth/resetpassword/confirm'\n        component={ConfirmResetPassword}\n      />\n    </Switch>\n  )\n\n  return <React.Fragment>{routes}</React.Fragment>\n}\n\nexport default Auth\n","import React, { useRef } from 'react';\nimport usePlacesAutocomplete, { getGeocode, getLatLng, GeocodeResult } from 'use-places-autocomplete';\n//import useOnclickOutside from 'react-cool-onclickoutside';\nimport TextField from '@material-ui/core/TextField';\n\n interface LocationSearchProps {\n    googleAddressReturn: (value: GeocodeResult) => void;\n    label: string;\n  }\n  \n    const LocationSearchInput: React.SFC<LocationSearchProps> = (props) => {        \n  const {\n    ready,\n    value,\n    suggestions: { status, data },\n    setValue,\n    clearSuggestions\n  } = usePlacesAutocomplete({\n    requestOptions: { /* Define search scope here */ },\n    debounce: 500\n  });\n   const ref = useRef();\n//   useOnclickOutside(ref, () => {\n//     // When user clicks outside of the component, we can dismiss\n//     // the searched suggestions by calling this method\n//     clearSuggestions();\n//   });\n\n  const handleInput = (e: any) => {\n    // Update the keyword of the input element\n    setValue(e.target.value);\n  };\n\n  // @ts-ignore\n  const handleSelect = ({ description }) => () => {\n    // When user selects a place, we can replace the keyword without request data from API\n    // by setting the second parameter as \"false\"\n    setValue(description, false);\n    clearSuggestions();\n\n    // Get latitude and longitude via utility functions\n    getGeocode({ address: description })\n      .then(results => \n        {\n            console.log(results);\n            const { lat, lng } =  results[0].geometry.location\n            console.log('📍 Coordinates: ', results[0].geometry.location);\n\n            results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            return getLatLng(results[0]).then(({ lat, lng }) => {\n                console.log('📍 getLatLng: ', results);\n\n                results[0].latitudes = lat.toString()\n            results[0].longitudes = lng.toString()\n            props.googleAddressReturn(results);\n            })\n            \n        })\n      .catch(error => {\n        console.log('😱 Error: ', error)\n      });\n\n  };\n\n  const renderSuggestions = () =>\n    data.map(suggestion => {\n      const {\n        id,\n        structured_formatting: { main_text, secondary_text }\n      } = suggestion;\n\n      return (\n        <li\n          key={id}\n          onClick={handleSelect(suggestion)}\n        >\n          <strong>{main_text}</strong> <small>{secondary_text}</small>\n        </li>\n      );\n    });\n\n  return (\n    <div>\n\n    <TextField\n            required\n            label={props.label}\n            fullWidth\n            disabled={!ready}\n            onChange={handleInput}\n            value={value}\n            autoComplete=\"billing address-level2\"\n          />\n      {/* We can use the \"status\" to decide whether we should display the dropdown or not */}\n      {status === 'OK' && <ul>{renderSuggestions()}</ul>}\n    </div>\n  );\n};\n\nexport default LocationSearchInput;","import { GeocoderResult} from './model';\n\nexport const stripAddress = (result : GeocoderResult[] ) => {\n\n    var address_components = [\n        {\n           \"long_name\" : \"924\",\n           \"short_name\" : \"924\",\n           \"types\" : [ \"street_number\" ]\n        },\n        {\n           \"long_name\" : \"Players Court\",\n           \"short_name\" : \"Players Ct\",\n           \"types\" : [ \"route\" ]\n        },\n        {\n           \"long_name\" : \"Players Club of Brentwood\",\n           \"short_name\" : \"Players Club of Brentwood\",\n           \"types\" : [ \"neighborhood\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Nashville\",\n           \"short_name\" : \"Nashville\",\n           \"types\" : [ \"locality\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Davidson County\",\n           \"short_name\" : \"Davidson County\",\n           \"types\" : [ \"administrative_area_level_2\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"Tennessee\",\n           \"short_name\" : \"TN\",\n           \"types\" : [ \"administrative_area_level_1\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"United States\",\n           \"short_name\" : \"US\",\n           \"types\" : [ \"country\", \"political\" ]\n        },\n        {\n           \"long_name\" : \"37211\",\n           \"short_name\" : \"37211\",\n           \"types\" : [ \"postal_code\" ]\n        }\n     ]\n     \n     address_components= result[0].address_components;\n    const street_number =  address_components.filter(ll => {\n     if(ll.types.includes(\"street_number\")){\n           return true;\n     }\n     return false;\n     });\n     \n    const route= address_components.filter(ll => {\n     if(ll.types.includes(\"route\")){\n        return true;\n  }\n  return false;\n  });\n\n  const postal_code= address_components.filter(ll => {\n    if(ll.types.includes(\"postal_code\")){\n       return true;\n }\n return false;\n });\n\n const country= address_components.filter(ll => {\n    if(ll.types.includes(\"country\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_1= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_1\")){\n       return true;\n }\n return false;\n });\n\n const locality= address_components.filter(ll => {\n    if(ll.types.includes(\"locality\")){\n       return true;\n }\n return false;\n });\n\n const administrative_area_level_2= address_components.filter(ll => {\n    if(ll.types.includes(\"administrative_area_level_2\")){\n       return true;\n }\n return false;\n });\n\n\n     let address = {\n        address1 : street_number[0] ? street_number[0].long_name: ''+' '+\n        route[0]? route[0].long_name: '',\n        city : locality[0] ? locality[0].long_name : '',\n        county : administrative_area_level_2[0].long_name,\n        state:  administrative_area_level_1[0].long_name,\n        country : country[0].long_name,\n        zip : postal_code[0].long_name,\n       latitudes: result[0].latitudes,\n       longitudes :  result[0].longitudes,\n       formatted_address:  result[0].formatted_address\n      }\n     console.log('address',address);\n     return address;\n}","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport { GeocoderResult} from './model';\nimport LocationSearchInput from './LocationSearchInput';\nimport {stripAddress} from './util';\nimport ImageUploader from 'react-images-upload';\nimport {handleImageUpload, getImages, TVBackdrop} from '../utils';\nimport Snackbar from '../common/Snackbar'\nimport { AuthContext } from '../auth/auth-context'\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport interface AddressFormProps {\n  address: string;\n  nextButton: (value: string) => void\n}\n\n  const AddressForm: React.SFC<AddressFormProps> = (props) => {\n    const authContext = React.useContext(AuthContext)\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nconst handleNext = async() => {\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n\n  if( props.address){\n    const address = JSON.parse(props.address)\n    const valuessss = {...values, pictures: address.pictures, phoneNumber: phone_number, email: email}\n    props.nextButton(JSON.stringify(valuessss));\n\n  }else {\n    setLoaded(true)\n\n    console.log(\"value\",values, pictures);\n    if(pictures.length >0){\n     const S3path = await handleImageUpload(pictures); \n     console.log(\"S3path\",S3path);\n     const valuessss = {...values, pictures: JSON.stringify(S3path),\n      phoneNumber: phone_number, email: email\n    }\n     props.nextButton(JSON.stringify(valuessss));\n    }else {\n     // props.nextButton(JSON.stringify(values));\n     // setLoaded(false)\n     setError(\"picture missing\");\n    }\n    setLoaded(false)\n  }\n}\n\nReact.useEffect(() => {\n\n  const fetchData = async (inputimages: string) => {\n    const address = JSON.parse(inputimages)\n\n    let picture = null;\n    if(address.pictures){\n      const files = JSON.parse(address.pictures);\n      picture = await getImages(files);\n      console.log(\"images\", picture);\n    }\n   \n    setValues({...address, pictures: picture});\n    setLoaded(false)\n  };\n\n  if(props.address){\n    setLoaded(true)\n    fetchData(props.address);\n  } \n\n}, [props.address]);\n\n\n const [values, setValues] = useState({firstName: '', lastName: '',middelName: '',address1: '', address2: '',\n city: '', state: '',zip: '', country: '',county: '', latitudes: '', longitudes: '', aboutme: \"\", pictures: \"\"})\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {firstName, lastName, address1, city, zip, country, aboutme} = values\n    setDisable(!(firstName &&  lastName && address1 &&  city &&  zip &&  country && aboutme))\n  }, [values ])\n\n  const resultGoogle = (result: GeocoderResult[]) => {\n    console.log(\"address\",result);\n    const value = stripAddress(result);\n    setValues({...values, ...value})\n  };\n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  // onload\n  const [loaded, setLoaded] = useState<boolean>(false);\n\n  //error\n  const [error, setError] = useState<string>('')\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n      Your Information\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.firstName}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"middelName\"\n            name=\"middelName\"\n            label=\"Middel Name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.middelName}\n            autoComplete=\"middelName\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"lastName\"\n            name=\"lastName\"\n            label=\"Last name\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.lastName}\n            autoComplete=\"lname\"\n          />\n        </Grid>\n\n      {\n         values.address1.length < 2 ? ( \n          <Grid item xs={12} sm={6}>\n            <LocationSearchInput label= \"Enter your Home address\" googleAddressReturn={resultGoogle}\n         />\n          </Grid>\n        ):\n        <Grid container spacing={1}>\n        <Grid item xs={12}>\n          <TextField\n            required\n            id=\"address1\"\n            name=\"address1\"\n            label=\"Address line 1\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address1}\n            autoComplete=\"billing address-line1\"\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            id=\"address2\"\n            name=\"address2\"\n            label=\"Address line 2\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.address2}\n            autoComplete=\"billing address-line2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"city\"\n            name=\"city\"\n            label=\"City\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.city}\n            autoComplete=\"billing address-level2\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField id=\"state\" name=\"state\" label=\"State/Province/Region\"\n                      onChange={handleInputChange}\n                      value={values.state}\n          fullWidth />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"zip\"\n            name=\"zip\"\n            label=\"Zip / Postal code\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.zip}\n            autoComplete=\"billing postal-code\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"country\"\n            name=\"country\"\n            label=\"Country\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.country}\n            autoComplete=\"billing country\"\n          />\n        </Grid>\n\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"aboutme\"\n          name=\"aboutme\"\n          label=\"About Me\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.aboutme}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n\n{\n  values.pictures ?\n  <img\n  src={ values.pictures}\n/>\n  \n  :\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n      maxFileSize={5242880}\n    />\n           \n}\n</Grid>\n\n        \n         </Grid>\n        }\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={handleNext}>next</Button>\n\n</Grid>\n\n<TVBackdrop open={loaded}/>\n<Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default AddressForm\n","import React, { useState, useEffect, useCallback } from 'react'\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Snackbar from '../common/Snackbar'\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles(theme => ({\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nconst currencies = [\n    {\n      value: 'Paypal',\n      label: 'Paypal',\n    },\n    {\n      value: 'Venmo',\n      label: 'Venmo',\n    }\n  ];\n\nexport interface PaymentFormProps {\n  payment: string;\n  nextButton: (value: string) => void\n  backButton: () => void\n}\n\nconst EmployeeBackgroundCheck: React.SFC<PaymentFormProps> = (props) => {\n\n  const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name ==\"secondaryPayment\" || name ==\"dob\"){\n      setValues({...values, [name]: value})\n    }else {\n      const re = /^[0-9\\b]+$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }\n   \n\n}\n\nconst handleNext = () => {\n    const {routingNumber, bankAccountNumber, ssn, reroutingNumber, rebankAccountNumber} = values\n    if(reroutingNumber !== routingNumber){\n        setError(\"Routing number mismattched\")\n        setDisable(true)\n        return\n    }\n    if(bankAccountNumber !== rebankAccountNumber){\n        setError(\"Account number mismattched\")\n        setDisable(true)\n        return\n    }\n\n    if(ssn.length < 2){\n      setError(\"SSN Number missing\")\n      setDisable(true)\n      return\n  }\n\n     console.log(\"value\",values);\n     props.nextButton(JSON.stringify(values));\n}\n\nuseEffect(() => {\n  if(props.payment) setValues(JSON.parse(props.payment))\n}, [props.payment]);\n\n const [values, setValues] = useState({routingNumber: '', bankAccountNumber: '',ssn: '',\n  backgroundcheck: false,  secondaryPayment: '', secondaryPaymentType: 'Paypal',dob: '',\n  reroutingNumber: '', rebankAccountNumber: ''\n})\n\nconst [error, setError] = useState<string>('')\n\nconst setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {routingNumber, bankAccountNumber, ssn} = values;\n    (routingNumber &&  bankAccountNumber && ssn ) ?  setDisable(false) :  setDisable(true)\n\n}, [values ]);\n\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Payment method\n      </Typography>\n      <Grid container spacing={1}>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"routingNumber\" name=\"routingNumber\"  label=\"Routing Number\"     \n                  onChange={handleInputChange}\n            value={values.routingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"reroutingNumber\" name=\"reroutingNumber\"  label=\"Re Enter Routing Number\"     \n                  onChange={handleInputChange}\n            value={values.reroutingNumber} \n            fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"bankAccountNumber\"  name=\"bankAccountNumber\" label=\"Bank Account Number\"\n                         onChange={handleInputChange}\n                         value={values.bankAccountNumber} \n          fullWidth />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField required id=\"rebankAccountNumber\" name=\"rebankAccountNumber\" label=\"Re Enter Bank Account Number\" fullWidth\n                         onChange={handleInputChange}\n                         value={values.rebankAccountNumber} \n          \n          />\n        </Grid>\n        <Divider />\n\n        <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n            SSN Number for background Check\n        </Typography>\n          <TextField\n            required\n            id=\"ssn\"\n            name=\"ssn\"\n            label=\"SSN\"\n            helperText=\"Enter SSN for background Check\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.ssn} \n          />\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"dob\"\n            name=\"dob\"\n            label=\"Enter your date of birthday\"\n            helperText=\"Enter your date of birthday\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.dob} \n            type=\"date\"\n            InputLabelProps={{\n              shrink: true,\n            }}\n          />\n        </Grid>\n\n        <Divider />\n\n        <Grid item xs={12} md={6}>\n        <Typography variant=\"h6\" gutterBottom>\n            Secondary payment method\n        </Typography>\n        <TextField\n          id=\"secondaryPaymentType\"\n        name=\"secondaryPaymentType\"\n            label=\"secondaryPaymentType\"\n          select\n          value={values.secondaryPaymentType}\n          onChange={handleInputChange}\n          SelectProps={{\n            native: true,\n          }}\n          helperText=\"Please select your currency\"\n          variant=\"outlined\"\n        >\n          {currencies.map((option) => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </TextField>\n\n        </Grid>\n\n        <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"secondaryPayment\"\n            name=\"secondaryPayment\"\n            label=\"Enter your email for secondary Payment\"\n            helperText=\"Enter your email for secondary Payment\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.secondaryPayment} \n          />\n        </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled= {disable} \n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleNext}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n      </Grid>\n\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n\n    </React.Fragment>\n  );\n}\n\nexport default EmployeeBackgroundCheck\n","import React, { useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport Themer from './AppThemer'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Header from './AppHeader'\n\nimport BottomNavigation from '@material-ui/core/BottomNavigation'\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport SearchIcon  from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nimport Paper from '@material-ui/core/Paper';\nimport ContactPhoneIcon from '@material-ui/icons/ContactPhone';\nimport Container from '@material-ui/core/Container'\nimport { createStyles, makeStyles } from '@material-ui/core/styles'\nimport AppBar from '@material-ui/core/AppBar';\n\nconst useStyles = makeStyles(theme  =>\n  createStyles({\n    appBar: {\n      top: 'auto',\n      bottom: 0,\n    },\n    paper: {\n      paddingBottom: 50,\n    },\n    root: {\n      display: 'flex',\n      flexDirection: 'column',\n      minHeight: '90vh'\n    },\n    appBarSpacer: theme.mixins.toolbar,\n\n    stickToBottom: {\n      //width: '100%',\n     // position: 'fixed',\n    //  bottom: 0,\n    },\n    main: {\n      flexGrow: 1,\n      display: 'flex',\n      //alignItems: 'center',\n      minHeight: '90vh',\n      paddingLeft: 10,\n      paddingRight: 10,\n      paddingTop: 5\n    },\n    rootB: {\n    },\n  })\n)\n\nexport interface HomeLayoutProps {\n  title: string,\n  children: any,\n  header?: string\n}\n\nconst HomeLayout: React.SFC<HomeLayoutProps> = ({ title, children, header }) => {\n  useEffect(() => {\n    document.title = title\n  })\n  const history = useHistory()\n\n  const classes = useStyles()\n  const [value, setValue] = React.useState('home');\n\n  const handleChange = (event: any, newValue: any) => {\n    console.log(\"newValue\", newValue);\n    setValue(newValue);\n    if(newValue == 'account'){\n      history.push('/checkout')\n    }else if(newValue == 'home'){\n      history.push('/')\n    }else if(newValue == 'service'){\n      history.push('/service')\n    }\n  };\n\n  return (\n    <Themer>\n       <React.Fragment>\n      <CssBaseline />\n      <Header header= {header}/>\n\n        <main>\n        <div className={classes.appBarSpacer} />\n\n      <Paper square className={classes.paper}>\n        <Container className={classes.main}>{children}\n        </Container>\n\n      </Paper>\n\n      </main >\n\n      <AppBar position=\"fixed\" color=\"primary\" className={classes.appBar}>\n      <BottomNavigation value={value} onChange={handleChange} className={classes.stickToBottom}>\n      <BottomNavigationAction label=\"Home\" value=\"home\" icon={<HomeIcon />} />\n      <BottomNavigationAction label=\"support\" value=\"support\" icon={<ContactPhoneIcon />} />\n      <BottomNavigationAction label=\"Account\" value=\"account\" icon={<AccountCircleIcon />} />\n\n    </BottomNavigation>\n      </AppBar>\n    </React.Fragment>\n\n      \n      \n\n    </Themer>\n  )\n}\n\nexport default HomeLayout\n","import gql from 'graphql-tag'\n\nexport const createConvo = gql`\n  mutation CreateConvo($input: CreateConversationInput!) {\n    createConvo(input: $input) {\n      id\n      name\n      createdAt\n      associated {\n        items {\n          convoLinkUserId\n          user {\n            id\n            username\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createTicket = gql`\n  mutation CreateTicket($input: CreateTicketInput!) {\n    createTicket(input: $input) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      closedComment\n    }\n  }\n`\nexport const updateTicket = gql`\n    mutation UpdateTicket($input: UpdateTicketInput!\n      ) {\n      updateTicket(\n        input: $input\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n  `\n\nexport const assignExpertToTicket = gql`\n    mutation UpdateTicket($id: ID!, $ticketEmployeeId: ID!, $ticketEmployeeInfo: String) {\n      updateTicket(\n        input: {\n          id: $id\n          ticketEmployeeId: $ticketEmployeeId\n          ticketEmployeeInfo: $ticketEmployeeInfo\n          status: \"assinged\"\n        }\n      )\n    {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n    }\n  }\n`\n\nexport const createMessage = gql`\n  mutation CreateMessage($input: CreateMessageInput!) {\n    createMessage(input: $input) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const registerFullUser = gql`\n  mutation RegisterFullUser($input: CreateUserInput!) {\n    registerFullUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployeeUser = gql`\n  mutation registerEmployeeUser($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateUser = gql`\n  mutation UpdateUser($input: UpdateUserInput!) {\n    updateUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerUser = gql`\n  mutation RegisterUser($input: CreateUserInput!) {\n    registerUser(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const registerFullEmployee = gql`\n  mutation RegisterFullEmployee($input: CreateEmployeeInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const updateEmployee = gql`\n  mutation UpdateEmployee($input: UpdateEmployeeInput!) {\n    updateEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n  }\n}\n`\n\nexport const registerEmployee = gql`\n  mutation RegisterEmployee($input: CreateUserInput!) {\n    registerEmployee(input: $input) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const createConvoLink = gql`\n  mutation createConvoLink($input: CreateConvoLinkInput!) {\n    createConvoLink(input: $input) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\nexport const updateConvoLink = gql`\n  mutation updateConvoLink($id: ID!) {\n    updateConvoLink(input: { id: $id, status: \"READY\" }) {\n      id\n      name\n      convoLinkUserId\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import gql from 'graphql-tag'\n\nexport const getUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      county\n      avatar\n      userTickets {\n        items {\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n          employee{\n            username\n            address\n            avatar\n            aboutme\n            address\n          }\n        }\n      }\n    }\n  }\n`\n\nexport const getEmployee = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      county\n      avatar\n      employeeTickets {\n        items {\n          id\n          content\n          time\n          destination\n          price\n          title\n          county\n          source\n          status\n          ticketEmployeeId\n          ticketUserId\n          closedComment\n          closedTime\n          ownerUploadImages\n          employeeUploadImages\n        }\n      }\n    }\n  }\n`\n\nexport const getFullUser = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getFullEmployee = gql`\n  query GetFullEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      active\n      address\n      zipcode\n      latitudes\n      longitudes\n      cardInfo\n    }\n  }\n`\n\nexport const getConvo = gql`\n  query GetConvo($id: ID!, $nextToken: String) {\n    getConvo(id: $id) {\n      id\n      messages(sortDirection: DESC, limit: 20, nextToken: $nextToken) {\n        nextToken\n        items {\n          id\n          content\n          createdAt\n          owner\n          chatbot\n          isSent\n          file\n          messageConversationId\n        }\n      }\n    }\n  }\n`\n\nexport const searchMessages = gql`\n  query SearchMessages(\n    $filter: SearchableMessageFilterInput\n    $sort: SearchableMessageSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchMessages(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        content\n        createdAt\n        owner\n        chatbot\n        isSent\n        file {\n          bucket\n          region\n          key\n        }\n        messageConversationId\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchUsers = gql`\n  query SearchUsers(\n    $filter: SearchableUserFilterInput\n    $sort: SearchableUserSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchUsers(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        username\n        registered\n        userConversations {\n          items {\n            id\n            name\n            status\n            convoLinkUserId\n          }\n          nextToken\n        }\n      }\n      nextToken\n    }\n  }\n`\nexport const searchConvoLinks = gql`\n  query SearchConvoLinks(\n    $filter: SearchableConvoLinkFilterInput\n    $sort: SearchableConvoLinkSortInput\n    $limit: Int\n    $nextToken: Int\n  ) {\n    searchConvoLinks(\n      filter: $filter\n      sort: $sort\n      limit: $limit\n      nextToken: $nextToken\n    ) {\n      items {\n        id\n        name\n        status\n        convoLinkUserId\n        user {\n          id\n          username\n          registered\n        }\n        conversation {\n          id\n          name\n          createdAt\n        }\n      }\n      nextToken\n    }\n  }\n`\n\nexport const getOpenTicket = gql`\nquery getOpenTicket($status: String!, $county: String! ) {\n  jobsByStatus(county: $county,  status: {\n    eq: $status\n  }) \n   {\n      items {\n        id\n        content\n        time\n        destination\n        price\n        title\n        county\n        source\n        status\n        ownerUploadImages\n        employeeUploadImages\n      }\n    nextToken\n   }\n}\n`\n\n\n\nexport const getUserConversations = gql`\n  query GetUser($id: ID!) {\n    getUser(id: $id) {\n      id\n      username\n      registered\n      userConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                }\n                convoLinkEmployeeId\n                employee {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport const getEmployeeConversations = gql`\n  query GetEmployee($id: ID!) {\n    getEmployee(id: $id) {\n      id\n      username\n      registered\n      employeeConversations {\n        items {\n          id\n          name\n          status\n          conversation {\n            id\n            name\n            createdAt\n            associated {\n              items {\n                convoLinkUserId\n                user {\n                  id\n                  username\n                  avatar\n                }\n                convoLinkEmployeeId\n                employee {\n                  id\n                  username\n                  avatar\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`","import { API} from 'aws-amplify'\n\nexport const  createCustomer=  async(email: string, phoneNumber: string) =>{\n    let myInit = { \n        response: true,\n        body: {\n            email: email,\n            phone: phoneNumber\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response =  await API.post(\"stripeapi\", \"/stripe/createcustomer\",myInit);\n    console.log(\"setupIntents\", response);\n\n    return {\n        customerId: response.data.url.id,\n        customerKey: response.data.intent.client_secret\n    }\n}\n\nexport const  payment =  async(customerId: string, money: string) =>{\n    let myInit1 = { // OPTIONAL\n        response: true,\n        body: {\n            customerId: customerId,\n            money: money\n        },\n        headers: {} // OPTIONAL\n    }\n\n    const response1 =  await API.post(\"stripeapi\", \"/stripe/createpayment\",myInit1);\n    console.log(\"setupIntents\", response1);\n    \n}","\nimport React from 'react';\nimport {useStripe, useElements} from '@stripe/react-stripe-js';\nimport {\n    CardNumberElement,\n    CardCvcElement,\n    CardExpiryElement\n  } from \"@stripe/react-stripe-js\";\nimport Grid from '@material-ui/core/Grid';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { createCustomer} from '../../utils/Stripe';\nimport { AuthContext } from '../../auth/auth-context'\nimport TextField from '@material-ui/core/TextField';\nimport Snackbar from '../../common/Snackbar'\nimport {TVBackdrop} from '../../utils';\n\nimport './SplitForm.css'\n\n\nconst useOptions = () => {\n    const fontSize = \"16px\";\n    const options = React.useMemo(\n      () => ({\n        style: {\n          base: {\n            fontSize,\n            color: \"#424770\",\n            letterSpacing: \"0.025em\",\n            fontFamily: \"Source Code Pro, monospace\",\n            \"::placeholder\": {\n              color: \"#aab7c4\"\n            }\n          },\n          invalid: {\n            color: \"#9e2146\"\n          }\n        }\n      }),\n      [fontSize]\n    );\n  \n    return options;\n  };\n\n  const useStyles = makeStyles(theme => ({\n    buttons: {\n      display: 'flex',\n      justifyContent: 'flex-end',\n    },\n    button: {\n      marginTop: theme.spacing(3),\n      marginLeft: theme.spacing(1),\n    },\n  }));\n\n  \n  export interface CardSetupFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n  \nconst CardSetupForm: React.SFC<CardSetupFormProps> = (props) => {\n  const stripe = useStripe();\n  const elements = useElements();\n  const classes = useStyles();\n  const authContext = React.useContext(AuthContext)\n  const [loaded, setLoaded] = React.useState<boolean>(false);\n\n  React.useEffect(() => {\n    //if(props.payment) setValues(JSON.parse(props.payment))\n  }, [props.payment]);\n\n  const handleSubmit = async (event: any) => {\n\n    // We don't want to let default form submission happen here,\n    // which would refresh the page.\n    event.preventDefault();\n\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n\n    if (values.name.length < 2) {\n        setError(\"Enter Name\")\n\n        return;\n      }\n      setLoaded(true)\n\n    const phone = authContext.user.attributes[\"phone_number\"];\n    const email = authContext.user.attributes[\"email\"];\n\n    const keys = await createCustomer(email, phone);\n\n    //@ts-ignore\n    const result = await stripe.confirmCardSetup(keys.customerKey, {\n      payment_method: {\n           //@ts-ignore\n           card: elements.getElement(CardNumberElement),\n           billing_details: {\n          name: values.name,\n        },\n      }\n    });\n\n    if (result.error) {\n        setError(result.error.message)\n\n        console.log(\"esult.setupIntent.payment_method\", result);\n\n      // Display result.error.message in your UI.\n    } else {\n        console.log(\"esult.setupIntent.payment_method\", result.setupIntent);\n      // The setup has succeeded. Display a success message and send\n      // result.setupIntent.payment_method to your server to save the\n      // card to a Customer\n      setLoaded(false)\n\n      props.nextButton(JSON.stringify({\n        ...keys,\n        name:values.name\n       // card: elements.getElement(CardNumberElement)\n    }));\n\n    }\n\n \n  };\n  const options = useOptions();\n  const [error, setError] = React.useState<string>('')\n  const [values, setValues] = React.useState({cardNumber: '', expiry: '',cvc: '', name: ''})\n  const setErrorMsg = React.useCallback((message: string) => {\n    setError(message)\n  }, [])\n  \n  return (\n         <form onSubmit={handleSubmit}>\n             { !props.payment\n          ? \n            <Grid container spacing={1}>\n\n            <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"firstName\"\n            name=\"firstName\"\n            label=\"First name\"\n            fullWidth\n            onChange={(e: any) => {\n                const {value} = e.target\n                setValues({...values, name: value});\n              }}            \n            value={values.name}\n            autoComplete=\"fname\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n\n              <label>\n        Card number\n        <CardNumberElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            // const {value} = event.target;\n            // setValues({...values, name: value});\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        Expiration date\n        <CardExpiryElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid item xs={12} sm={6}>\n\n      <label>\n        CVC\n        <CardCvcElement\n          options={options}\n          onReady={() => {\n            console.log(\"CardNumberElement [ready]\");\n          }}\n          onChange={event => {\n            console.log(\"CardNumberElement [change]\", event);\n          }}\n          onBlur={() => {\n            console.log(\"CardNumberElement [blur]\");\n          }}\n          onFocus={() => {\n            console.log(\"CardNumberElement [focus]\");\n          }}\n        />\n      </label>\n      </Grid>\n\n      <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n        <div className={classes.buttons}>\n                <Button \n                 variant=\"contained\"\n                onClick={props.backButton} className={classes.button}>\n                      Back\n                    </Button>\n                  <Button\n                  disabled={!stripe}\n                    variant=\"contained\"\n                    color=\"primary\"\n                    onClick={handleSubmit}\n                    className={classes.button}\n                  >\n                   Save\n                  </Button>\n                   </div>\n              </Grid>\n\n              <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n        </Grid>\n: \n<Grid\ncontainer\ndirection=\"row\"\njustify=\"center\"\nalignItems=\"center\"\n>\n<div> you already have payment details in your account. if you want update details contact@travtrail.com </div>\n</Grid>\n}\n<TVBackdrop open={loaded}/>\n\n    </form>   \n  );\n}\n\nexport default  CardSetupForm;","import React from 'react';\nimport {Elements} from '@stripe/react-stripe-js';\nimport {loadStripe} from '@stripe/stripe-js';\n\nimport CheckoutForm from './CardSetupForm';\n\n// Make sure to call `loadStripe` outside of a component’s render to avoid\n// recreating the `Stripe` object on every render.\nconst stripePromise = loadStripe(\"pk_test_n28At7VrrTS32nAdaH5oyTo100BjZFd5oo\");\n\nexport interface PaymentFormProps {\n    payment: string;\n    nextButton: (value: string) => void\n    backButton: () => void,\n    address: string;\n  }\n\n  \nconst Stripe: React.SFC<PaymentFormProps> = (props) => {\n\n  return (\n    <Elements stripe={stripePromise}>\n      <CheckoutForm address={props.address} payment={props.payment} nextButton= {props.nextButton} backButton= {props.backButton}/>\n    </Elements>\n  );\n}\n\nexport default  Stripe;","import React, { useEffect, useCallback, useState } from 'react'\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Typography from '@material-ui/core/Typography';\nimport AddressForm from './AddressForm';\nimport EmployeeBackgroundCheck from './EmployeeBackgroundCheck';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { registerUser, updateUser, registerFullEmployee, updateEmployee } from '../graphql/mutations'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport {  getFullUser, getFullEmployee } from '../graphql/queries'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Stripe from './Stripe/Stripe';\n\nimport Snackbar from '../common/Snackbar'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  stepper: {\n    padding: theme.spacing(3, 0, 5),\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n  backdrop: {\n    zIndex: theme.zIndex.drawer + 1,\n    color: '#fff',\n  },\n}));\n\nexport interface CheckoutProps {}\n\nconst Checkout: React.SFC<CheckoutProps> = () => {\n    const classes = useStyles();\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [address, setAddress] = React.useState(\"\");\n  const [payment, setPayment] = React.useState(\"\");\n  const [error, setError] = useState<string>('')\n  const [isCreate, setisCreate] = useState<boolean>(true)\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n  const [isEmp, setisEmp] = useState<boolean>(false)\n  const [backdrop, setBackdrop] = React.useState(false);\n\n  const steps = ['Your Information', 'Payment details'];\n\n  const navigator_utl = () =>{\n    navigator.geolocation.getCurrentPosition(\n      position => {\n        if(Object.keys(position).length > 0){\n          // setlatitudes(position.coords.latitude.toString());\n          // setlongitudes(position.coords.longitude.toString());\n        }else {\n          setError(\"longitude and latitude missing\")\n        }\n      },\n      error => {\n        setError(error.message)\n      },\n      { enableHighAccuracy: true, timeout: 20000, maximumAge: 1000 }\n    );\n\n}\n\nuseEffect(() => {\n  navigator_utl();\n}, []);\n\n\nuseEffect(() => {\n  if(authContext && authContext.userId ){\n\n    const type = authContext.user.attributes[\"custom:account_type\"];\n    type ===\"Customer\" ? setisEmp(false) : setisEmp(true)\n  \n    const op =  type ===\"Customer\" ? getFullUser : getFullEmployee;    \n\n    const id = authContext.userId;\n  //\"37ff912b-27ac-4e5d-87e5-a4edaad80213\";\n  (async function anyNameFunction() {\n    const commentData = await API.graphql(graphqlOperation(op, { id }))\n    console.log('fetchDate',commentData); \n\n    if( type ===\"Customer\"){\n    //@ts-ignore\n    if(commentData.data.getUser){\n      setisCreate(false);\n    //@ts-ignore\n    setAddress(commentData.data.getUser.address)\n        //@ts-ignore\n    setPayment(commentData.data.getUser.cardInfo)\n    }\n    }else {\n          //@ts-ignore\n    if(commentData.data.getEmployee){\n      setisCreate(false);\n    //@ts-ignore\n    setAddress(commentData.data.getEmployee.address)\n        //@ts-ignore\n    setPayment(commentData.data.getEmployee.cardInfo)\n    }\n\n    }\n\n   })();\n  }\n  \n}, [authContext.userId]);\n\n\n\n  const updateProfile = async(paymentV: string) =>{\n\n    setBackdrop(true)\n    const id = authContext.userId;\n    const type = authContext.user.attributes[\"custom:account_type\"];\n\n    const op =  type ===\"Customer\" ? (isCreate?  registerUser: updateUser) :\n       (isCreate?  registerFullEmployee: updateEmployee)\n       \n     // isCreate ? registerUser : updateUser\n    const response =  await API.graphql(\n      graphqlOperation(op, { input: {\n        id : id,\n        username : JSON.parse(address).firstName,\n        registered : \"yes\",\n        active : \"yes\",\n        address : address,\n        zipcode : JSON.parse(address).zip,\n        latitudes: JSON.parse(address).latitudes,\n        longitudes :  JSON.parse(address).longitudes,\n        aboutme: JSON.parse(address).aboutme,\n        avatar: JSON.parse(address).pictures,\n        cardInfo :  paymentV,\n        county: JSON.parse(address).county\n      } })\n  );\n  console.log(\"response\", response);\n  setBackdrop(false);\n\n  history.push('/');\n\n\n  }\n\nconst nextButton = async(value: string) => {\n  console.log(\"nextButton\", value);\n  if(activeStep == 0){\n    setAddress(value);\n  }else if(activeStep == 1)\n  {\n    setPayment(value);\n    updateProfile(value);\n    return;\n  }\n  handleNext();\n}\n\n function getStepContent(step: any) {\n\n  switch (step) {\n    case 0:\n      return <AddressForm address={address} nextButton= {nextButton} />;\n    case 1:\n       if(isEmp){\n         return <EmployeeBackgroundCheck payment={payment} nextButton= {nextButton} backButton= {handleBack} />;\n       }else {\n           return <Stripe address={address} payment={payment} nextButton= {nextButton} backButton= {handleBack} />\n       }   \n    // case 2:\n    //   return <Review address={address} payment={payment} nextButton= {updateProfile} backButton= {handleBack}/>;\n    default:\n      throw new Error('Unknown step');\n  }\n\n}\n\n\n  const handleNext = () => {\n    setActiveStep(activeStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n  };\n\n  const setErrorMsg = useCallback((message: string) => {\n    setError(message)\n  }, [])\n\n  return (\n    <React.Fragment>\n    <AppHomeLayout title='RA2 Serverless'>\n\n      <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n          <Stepper activeStep={activeStep} className={classes.stepper}>\n            {steps.map(label => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Need Update BackEnd.\n                </Typography>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </main>\n      </AppHomeLayout>\n      <Snackbar\n          variant='error'\n          message={error}\n          setMessage={message => setErrorMsg(message)}\n        />\n      <Backdrop className={classes.backdrop} open={backdrop}>\n        <CircularProgress color=\"inherit\" />\n      </Backdrop>\n    </React.Fragment>\n  );\n}\n\nexport default Checkout;\n","import React, { useState, useEffect, } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport {makeStyles}  from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\n//import {Ticket} from './model'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\n//@ts-ignore\n//import DateTimePicker from 'react-datetime-picker';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport AppHomeLayout from '../app/AppHomeLayout'\n//import TextareaAutosize from '@material-ui/core/TextareaAutosize';\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { createTicket } from '../graphql/mutations'\nimport { useHistory } from 'react-router-dom'\n// @ts-ignore\nimport { uuid } from 'uuidv4';\nimport { AuthContext } from '../auth/auth-context'\nimport ImageUploader from 'react-images-upload';\n\nimport {handleImageUpload} from '../utils/S3Handler';\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    position: 'relative',\n  },\n  layout: {\n    width: 'auto',\n    //marginLeft: theme.spacing(2),\n    //marginRight: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n      width: 600,\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(3),\n    marginBottom: theme.spacing(3),\n    padding: theme.spacing(2),\n    [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\n      marginTop: theme.spacing(6),\n      marginBottom: theme.spacing(6),\n      padding: theme.spacing(3),\n    },\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n  },\n  button: {\n    marginTop: theme.spacing(3),\n    marginLeft: theme.spacing(1),\n  },\n}));\n\nexport interface AddressFormProps {\n  nextButton: (value: string) => void\n}\n\n  const CreateTicket: React.SFC<AddressFormProps> = (props) => {\n\n    const classes = useStyles();\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    if(name == \"price\"){\n      const re = /^([1-9]{0,2}((.)[0-9]{0,2}))$/;\n      if (e.target.value === '' || re.test(e.target.value)) {\n        setValues({...values, [name]: value})\n      }\n    }else {\n      setValues({...values, [name]: value})\n\n    }\n}\nconst history = useHistory()\nconst authContext = React.useContext(AuthContext)\n\n\nconst createNewTicket = async() =>{\n  console.log(\"createNewTicket\", values);\n  const id = authContext.userId;\n\n  const phone_number = authContext.user.attributes[\"phone_number\"];\n  const email = authContext.user.attributes[\"email\"];\n  const ticketUserInfo = JSON.stringify({\n    email: email,\n    phoneNumber: phone_number\n  });\n  let S3path: any[] = [];\n  if(pictures.length > 0){\n     S3path = await handleImageUpload(pictures); \n  }\n\n  const newId= uuid();\n  const county = \"Davidson County\";\n\n  const response =  await API.graphql(\n    graphqlOperation(createTicket, { input: {\n      id: newId,\n      countAndId: `${county}_${newId}`,\n      price : values.price,\n      time : values.time,\n      title : values.title,\n      content:  values.content ,\n      destination : values.destination?? \"Davidson County\" ,\n      source : values.source ?? \"Davidson County\" ,\n      county: county,\n      ownerUploadImages : JSON.stringify(S3path),\n      ticketUserId: id,\n      status: 'open',\n      ticketUserInfo: ticketUserInfo\n    } })\n);\nconsole.log(\"response\", response);\n\nhistory.push('/')\n\n}\nconst sourceGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, source: value.formatted_address})\n};\n\nconst destGoogle = (result: GeocoderResult[]) => {\n  console.log(\"address\",result);\n  const value = stripAddress(result);\n  setValues({...values, destination: value.formatted_address, county: value.county})\n};\n\n const [values, setValues] = useState({ content: '',price: '', title: '',\n source: '', destination: '',time: \"\", county: ''})\n\n  const [disable, setDisable] = useState<boolean>(true)\n\n  useEffect(() => {\n    const {content, title, price,  time} = values\n    setDisable(!(content &&  title && price  &&  time))\n  }, [values ]);\n\n  const onChange = (date: any) => {\n   setValues({...values, [\"time\"]: date})\n  };\n  \n\n  // image upload\n  const [pictures, setPictures] = useState<any[]>([]);\n  const [key, setKey] = useState<any>({});\n\n  const onDrop = async (picture: any) => {\n    setPictures(picture);\n  };\n\n  return (\n    <React.Fragment>\n          <AppHomeLayout title='RA2 Serverless'>\n          <CssBaseline />\n      <main className={classes.layout}>\n        <Paper className={classes.paper}>\n\n      <Typography variant=\"h6\" gutterBottom >\n      Job Details\n      </Typography>\n      <Grid container spacing={1}>\n      <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <LocationSearchInput label = \"source\" googleAddressReturn={sourceGoogle}\n         />\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n          <LocationSearchInput label = \"destination\" googleAddressReturn={destGoogle}\n         />\n          </Grid>\n\n        <Grid item xs={12}>\n        {/* <DateTimePicker\n           name= \"Job Date\"\n          onChange={onChange}\n          value={values.time}\n        /> */}\n         <TextField\n          required\n          id=\"time\"\n          name=\"time\"\n          label=\"time\"\n          type=\"datetime-local\"\n          //defaultValue=\"2017-05-24T10:30\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.time}\n    InputLabelProps={{\n      shrink: true,\n    }}\n  />\n        </Grid>\n        <Grid item xs={12}>\n        <TextField\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n\n        <Grid item xs={12}>\n        <ImageUploader\n      withPreview={true}\n      withIcon={true}\n      onChange={onDrop}\n      imgExtension={[\".jpg\", \".gif\", \".png\", \".gif\"]}\n      maxFileSize={5242880}\n    />\n    \n            </Grid>\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n<Button disabled= {disable} variant=\"contained\"\n  color=\"primary\"\n  className={classes.button}\nonClick={createNewTicket}>Create Ticket</Button>\n\n</Grid>\n      </Grid>\n\n      </Paper>\n      </main>\n\n      </AppHomeLayout>\n    </React.Fragment>\n  );\n}\n\nexport default CreateTicket\n","import gql from 'graphql-tag'\n\nexport const onCreateMessage = gql`\n  subscription OnCreateMessage($messageConversationId: ID!) {\n    onCreateMessage(messageConversationId: $messageConversationId) {\n      id\n      content\n      createdAt\n      owner\n      chatbot\n      isSent\n      file\n      messageConversationId\n      conversation {\n        id\n        name\n        createdAt\n      }\n    }\n  }\n`\n\nexport const onCreateTicket = gql`\n  subscription OnCreateTicket($county: String!) {\n    onCreateTicket(county: $county) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ownerUploadImages\n      employeeUploadImages\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n`\n\nexport const onUpdatedTicket = gql`\n  subscription OnUpdatedTicket($county: String!) {\n    onUpdatedTicket(county: $county) {\n      id\n      content\n      time\n      destination\n      price\n      title\n      county\n      source\n      status\n      ticketEmployeeId\n      closedComment\n      closedTime\n    }\n  }\n`\n\nexport const onUpdateConvoLink = gql`\n  subscription OnUpdateConvoLink($convoLinkUserId: ID, $status: String) {\n    onUpdateConvoLink(convoLinkUserId: $convoLinkUserId, status: $status) {\n      id\n      name\n      status\n      conversation {\n        id\n        name\n        createdAt\n        associated {\n          items {\n            convoLinkUserId\n            user {\n              id\n              username\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport TextField from '@material-ui/core/TextField';\nimport { DialogTitle } from '../utils/DialogTitle';\n\n\ninterface AlertDialogProps {\n    openPop: boolean;\n    type: string\n    closeAlert: (op: boolean, data: string) => void;\n  }\n\n const AlertDialog: React.SFC<AlertDialogProps> = ({ openPop,type,  closeAlert}) => {\n\n    const [disable, setDisable] = React.useState<boolean>(true)\n    const [textValue, setTextValue] =  React.useState<string>(\"\");\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setTextValue(value)\n    if(textValue && textValue.length > 0){\n        setDisable(false)\n    }\n}\n\nconst handleOperation = () => {\n    closeAlert(true, textValue);\n  };\n\n  const handleClose = () => {\n    closeAlert(false, \"\");\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        keepMounted\n        fullWidth ={true}\n        maxWidth=\"lg\"\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n          {\n              type == \"closed\" ?(< div>\n              <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} > Close Ticket</DialogTitle>\n              <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                Do you want close ticket? <br></br>\n                Reasons for cancellation.\n                </DialogContentText>\n                <TextField\n          multiline\n          rows=\"4\"\n          required\n          id=\"content\"\n          autoFocus\n          name=\"content\"\n          label=\"Close ticket\"\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n              </DialogContent>\n              <DialogActions>\n                <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"secondary\">\n                  Close Ticket\n                </Button>\n              </DialogActions> </div>) : \n\n              (< div>\n                <DialogTitle id=\"alert-dialog-slide-title\" onClose={handleClose} >{type}</DialogTitle>\n                <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                {type== \"completed\" ? \"Completed\" : \"Unassign\"} comments .\n                </DialogContentText>\n            <TextField\n          multiline\n          rows=\"6\"\n          required\n          autoFocus\n          id=\"content\"\n          name=\"content\"\n          label={type== \"completed\" ? \"Completed\" : \"Unassign\"}\n          fullWidth\n          value={textValue}\n          onChange={handleInputChange}\n          autoComplete=\"content\"\n        />\n                </DialogContent>\n                <DialogActions>\n                  <Button variant=\"contained\" disabled={disable} onClick={handleOperation} color=\"primary\">\n                  {type== \"completed\" ? \"Completed\" : \"Unassign\"}\n                  </Button>\n                </DialogActions> </div>)\n\n          }\n\n      </Dialog>\n    </div>\n  );\n}\n\nexport default AlertDialog;","import React from 'react';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\n//import DialogTitle from '@material-ui/core/DialogTitle';\nimport { AuthContext } from '../auth/auth-context'\nimport { ImageGroup, Image } from 'react-fullscreen-image'\nimport { DialogTitle, getImages, Employee } from '../utils';\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport './imageView.css';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\ninterface AcceptProps {\n  openPop: boolean;\n  closeAlert: (op: boolean) => void;\n  employee: Employee;\n\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n        padding: 15\n    }\n})\n);\n\nconst ExpertViewer: React.SFC<AcceptProps> = ({employee, openPop, closeAlert}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [images, setImages] = React.useState<string[]>([]);\n  const classes = useStyles();\n  const [emp, setEmp] = React.useState<Employee>();\n\n  React.useEffect(() => {\n\n\n  }, [authContext.userId]);  \n\n  React.useEffect(() => {\n    const fetchData = async (phone: string) => {\n        const address = JSON.parse(employee.address)\n        setEmp({\n            ...employee,\n            phoneNumber: phone,\n            username : `${address.firstName} ${address.lastName}`\n        })\n        if(employee.avatar){\n            const files = JSON.parse(employee.avatar);\n            const result = await getImages(files);\n            console.log(\"images\", result);\n            //@ts-ignore\n            setImages(result);\n        }\n\n    };\n    const id = authContext.userId;\n    if(id){\n       const phone =  authContext.user.attributes[\"phone_number\"];\n        fetchData(phone);\n    }\n  }, [authContext.userId]);\n\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n\n  const handleClose = () => {\n    closeAlert(false);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n  //const mm = \"https://homepages.cae.wisc.edu/~ece533/images/airplane.png\";\n\n  return (\n      <Dialog\n        open={openPop}\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Exprert Details</DialogTitle>\n        <div className={classes.container}>\n\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n           disabled = {true}\n            required\n            id=\"username\"\n            name=\"username\"\n            label=\"UserName\"\n            fullWidth\n            defaultValue={emp?.username}\n            autoComplete=\"username\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {true}\n\n            required\n            id=\"aboutme\"\n            name=\"aboutme\"\n            label=\"About Me\"\n            fullWidth\n            defaultValue={emp?.aboutme}\n            autoComplete=\"aboutme\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n             disabled = {true}\n\n            required\n            id=\"phoneNumber\"\n            name=\"phoneNumber\"\n            label=\"Phone Number\"\n            fullWidth\n            defaultValue={emp?.phoneNumber}\n            autoComplete=\"phoneNumber\"\n          />\n        </Grid>\n\n        </Grid>\n\n           <ImageGroup>\n        <ul className=\"images\">\n          {images.map((currElement, index)=> (\n            <li key={index}>\n              <Image src={currElement} alt=\"mountains\" />\n            </li>\n          ))}\n        </ul>\n      </ImageGroup>\n      </div>\n      </Dialog>\n  );\n}\n\nexport default ExpertViewer;","import { API, graphqlOperation } from 'aws-amplify'\nimport { getConvo, getUserConversations, getEmployeeConversations } from '../graphql/queries'\n\nimport {\n  createConvo,\n  createConvoLink,\n  updateConvoLink\n} from '../graphql/mutations';\n\nexport const launchNewConversation = async(userId : string, expertid: string) => {\n    try {\n      const id = userId;\n      const chat =  {  name: 'direct' };\n  \n      const conversation = await API.graphql(graphqlOperation(createConvo, { input: chat }))\n      console.log(\"conversation\", conversation);\n  \n      // const otherChatName = chatName(me.username)\n      // const myChatName = chatName(user.username)\n      // @ts-ignore \n      const owner = {convoLinkUserId: id, convoLinkConversationId: conversation.data.createConvo.id , \n        status: \"CREATING\", name: 'chat'};\n      // @ts-ignore \n      const service = {convoLinkEmployeeId: expertid , convoLinkConversationId: conversation.data.createConvo.id, \n        status: \"CREATING\", name: 'chat'};\n  \n      const ownerConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: owner }));\n      const serviceConvLink = await API.graphql(graphqlOperation(createConvoLink, { input: service }));\n      \n          // @ts-ignore \n      const ownerConvLinkConf = ownerConvLink.data.createConvoLink.id;\n          // @ts-ignore \n      const serviceConvLinkConf = serviceConvLink.data.createConvoLink.id\n  \n     const mm =  await API.graphql(graphqlOperation(updateConvoLink, {id : ownerConvLinkConf}));\n     console.log(' mm next steps', mm)\n     const xy =  await API.graphql(graphqlOperation(updateConvoLink, {id : serviceConvLinkConf}));\n  \n     console.log(' xy next steps', xy)\n\n      // const links = await Promise.all([\n      //   linkNewConversation(createConvo.id, user.id, otherChatName),\n      //   linkNewConversation(createConvo.id, me.id, myChatName)\n      // ])\n      // console.log('next steps', links)\n      // const promises = links.map(c => this.updateToReadyConversation(c))\n      // const convoLinks = await Promise.all(promises)\n  \n  \n      console.log('item created!',conversation)\n    } catch (err) {\n      console.log('error creating talk...', err)\n    }\n  }\n\n  export const findConverationWithUser = async(ticketUserId : string, expertId: string, setIsEmployee: boolean) => {\n    console.log('findConverationWithUser', ticketUserId, expertId, setIsEmployee)\n\n    const op =  setIsEmployee ? getEmployeeConversations :getUserConversations;\n    const id =  setIsEmployee ? expertId :ticketUserId;\n\n    const commentData = await API.graphql(graphqlOperation(op, { id }))\n    console.log('fetchDate',commentData); \n\n    if(setIsEmployee){\n\n              //@ts-ignore\n    if(commentData.data.getEmployee &&  commentData.data.getEmployee.employeeConversations.items.length > 0){\n      //@ts-ignore\nconst convoLinks = commentData.data.getEmployee.employeeConversations.items as any;\n\nconst convoLink = convoLinks.find((c :any) => {\nconst {\nconversation: { associated: { items: assoc = [] } = {} } = {}\n} = c\nreturn assoc.some((a :any)=> a.convoLinkUserId === ticketUserId)\n})\n\nreturn convoLink\n? {\nconversation: convoLink.conversation,\nconversationName: convoLink.name\n}\n: null\n}\n\n    }else {\n              //@ts-ignore\n    if(commentData.data.getUser &&  commentData.data.getUser.userConversations.items.length > 0){\n      //@ts-ignore\nconst convoLinks = commentData.data.getUser.userConversations.items as any;\n\nconst convoLink = convoLinks.find((c :any) => {\nconst {\nconversation: { associated: { items: assoc = [] } = {} } = {}\n} = c\nreturn assoc.some((a :any)=> a.convoLinkEmployeeId === expertId)\n})\n\nreturn convoLink\n? {\nconversation: convoLink.conversation,\nconversationName: convoLink.name\n}\n: null\n}\n\n    }\n\n    return null;\n  }\n\n\n  export const startConvoWithUser = async (userId: string, expertId: string, setIsEmployee: boolean) => {\n    let conversationInfo = await findConverationWithUser(userId, expertId, setIsEmployee);\n    console.log('existing conv', conversationInfo)\n\n    if (!conversationInfo) {\n      console.log('no convo, launch new')\n       await launchNewConversation(userId, expertId )\n    }\n    return conversationInfo\n\n  }\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog, { DialogProps } from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\nimport {Ticket} from './model';\nimport { assignExpertToTicket, updateTicket } from '../graphql/mutations'\nimport { API, graphqlOperation} from 'aws-amplify'\nimport { AuthContext } from '../auth/auth-context'\nimport LocationSearchInput from '../profilepage/LocationSearchInput';\nimport {stripAddress} from '../profilepage/util';\nimport { GeocoderResult} from '../profilepage/model';\nimport { DialogTitle } from '../utils/DialogTitle';\nimport AlertDialog from './AlertDialog';\nimport ImageViewer from '../utils/ImageViewer';\nimport Chip from '@material-ui/core/Chip';\nimport FaceIcon from '@material-ui/icons/Face';\nimport DoneIcon from '@material-ui/icons/Done';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ExpertViewer from '../utils/ExpertViewer';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport { startConvoWithUser} from './util';\nimport { useHistory } from 'react-router-dom'\n\n\ninterface AcceptProps {\n  openPop: boolean;\n  close: (op: boolean, updateTicket: Ticket) => void;\n  data: Ticket;\n  setIsEmployee : boolean\n}\n\n\nconst AcceptTicket: React.SFC<AcceptProps> = ({data, openPop, close, setIsEmployee}) => {\n  const [scroll, setScroll] = React.useState<DialogProps['scroll']>('paper');\n  const authContext = React.useContext(AuthContext)\n  const [formEdit, setFormEdit] = React.useState(true);\n  const history = useHistory()\n\n  React.useEffect(() => {\n    if(openPop){\n      setScroll(\"paper\");\n    }\n  }, [openPop]);\n\n  const handleInputChange = (e: any) => {\n    const {name, value} = e.target\n    setValues({...values, [name]: value})\n}\n\nReact.useEffect(() => {\n  if(data.id){\n    setValues(data)\n  }\n  setclosedComment(data.closedComment)\n}, [data]);\n\n\nconst [closedComment, setclosedComment] = React.useState(\"\");\n\nconst [values, setValues] = React.useState({ content: '',price: '', title: '',\nsource: '', destination: '',time: \"\", county: ''})\n\n\n  const acceptTicket = async() =>{\n\n    // accept Job by employee\n    if(setIsEmployee){\n      const authid = authContext.userId;\n\n      const phone_number = authContext.user.attributes[\"phone_number\"];\n      const  email = authContext.user.attributes[\"email\"];\n      const ticketEmployeeInfo = JSON.stringify({\n        email: email,\n        phoneNumber: phone_number,\n      });\n\n      const response =  await API.graphql(\n        graphqlOperation(assignExpertToTicket, {\n          id: data.id,\n          ticketEmployeeId: authid,\n          ticketEmployeeInfo: ticketEmployeeInfo\n        } )\n    );\n    console.log(\"accept ticket by employee\", response);\n    close(true, {...data, status: \"assinged\", ticketEmployeeId: authid });\n    }// make form editable\n    else if(formEdit) {\n      setFormEdit(false)\n\n    }// updated ticket by customer\n    else if(formEdit == false){\n      const response =  await API.graphql(\n        graphqlOperation(updateTicket, { input: {\n          id: data.id,\n          price : values.price,\n          time : values.time,\n          title : values.title,\n          content:  values.content ,\n          county: values.county,\n          destination : values.destination  ??  \"sfsfsf\" ,\n          source : values.source  ?? \"sfsfsf\",\n        } }\n        \n        )\n    );\n    console.log(\"update ticke4t info\", {...data , ...values});\n    close(true, {...data , ...values});\n    }\n  \n}\n\nconst closeTicket = () => {\n setAlertType(\"closed\")\n setOpenAlert(true)\n};\n\nconst completeTicket = () => {\n  setAlertType(\"completed\")\n  setOpenAlert(true)\n };\n \n const unassignTicket = () => {\n  setAlertType(\"unassign\")\n  setOpenAlert(true)\n };\n\n\n  const handleClose = () => {\n    close(false,data);\n  };\n\n  const descriptionElementRef = React.useRef<HTMLElement>(null);\n  React.useEffect(() => {\n    if (openPop) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [openPop]);\n\n\n  // second alert options\n\n  const [openAlert, setOpenAlert] = React.useState(false)\n  const [alertType, setAlertType] = React.useState(\"\")\n\n  const closeAlert = async(op: boolean, comments: string) => {\n\n    if(op == true ){\n      if ( alertType == \"unassign\"){\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n            status: \"open\",\n            ticketEmployeeId: null,\n            ticketEmployeeInfo: null\n          } }\n          )\n        );\n      console.log(\"unassign close\", response);\n      close(true, {...data , ...values, status: \"open\"});\n  \n      } // completed or closed\n      else {\n        const response =  await API.graphql(\n          graphqlOperation(updateTicket, { input: {\n            id: data.id,\n          status: alertType,\n          closedComment: comments,\n          closedTime: new Date().toUTCString()\n          } }\n          )\n        );\n      console.log(\"update ticke4t to close\", response);\n      close(true, {...data , ...values, status: alertType});\n      }\n  \n    }else {\n      setOpenAlert(false)\n    }\n \n  };\n\n  // imageViewer\n  const [openUserImage, setOpenUserImage] = React.useState(false)\n\n  const imageListen = async() => {\n    setOpenUserImage(true);\n  }\n\n  const closeAttachment =(op: boolean) =>{\n    setOpenUserImage(false);\n  }\n\n\n    // expertView\n    const [openExpert, setExpert] = React.useState(false)\n\n    const expertShow = async() => {\n      setExpert(true);\n    }\n  \n    const closeExpertShow =(op: boolean) =>{\n      setExpert(false);\n    }\n\n    const chatWithExpert = async() => {\n      const currentId = authContext.userId;\n      const otherId = data.ticketEmployeeId;\n     const conv = await startConvoWithUser(data.ticketUserId, otherId, setIsEmployee );\n\n     history.push({\n      pathname: '/chat',\n      state: { conversation: conv, user: currentId  }\n    });\n\n    }\n    \n    const sourceGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, source: value.formatted_address})\n    };\n    \n    const destGoogle = (result: GeocoderResult[]) => {\n      console.log(\"address\",result);\n      const value = stripAddress(result);\n      setValues({...values, destination: value.formatted_address, county: value.county})\n    };\n\n  return (\n    <div>\n      <Dialog\n        open={openPop}\n        fullScreen\n        onClose={handleClose}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\"\n      >\n        <DialogTitle id=\"scroll-dialog-title\" onClose={handleClose} >Ticket Details</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n        <Grid container spacing={1}>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {formEdit}\n\n            required\n            id=\"title\"\n            name=\"title\"\n            label=\"Title\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.title}\n            autoComplete=\"title\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n                    disabled = {formEdit}\n\n            required\n            id=\"price\"\n            name=\"price\"\n            label=\"Price\"\n            fullWidth\n            onChange={handleInputChange}\n            value={values.price}\n            autoComplete=\"price\"\n          />\n        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"source\" googleAddressReturn={sourceGoogle}\n    />\n  ): \n  <TextField label = \"source\" \n  name=\"source\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.source}\n/>\n}\n          </Grid>\n\n          <Grid item xs={12} sm={6}>\n\n          {\n  formEdit== false ? (\n    <LocationSearchInput label = \"destination\" googleAddressReturn={destGoogle}\n    />\n  ): \n  <TextField label = \"destination\" \n  name=\"destination\"\n  fullWidth\n  disabled = {true}\n  defaultValue={data.destination}\n/>\n}\n          </Grid>\n\n        <Grid item xs={12}>\n        {\n  formEdit == false? (\n    <TextField\nrequired\nid=\"time\"\nname=\"time\"\nlabel=\"time\"\ntype=\"datetime-local\"\nfullWidth\nonChange={handleInputChange}\nvalue={values.time}\nInputLabelProps={{\nshrink: true,\n}}\n/>\n  ): \n  <TextField label = \"time\" \n  name=\"time\"\n  fullWidth\n  disabled = {true}\n  defaultValue={values.time}\n/>\n}\n\n\n        </Grid>\n        <Grid item xs={12}>\n        <TextField\n          disabled = {formEdit}\n          multiline\n          rows=\"6\"\n          required\n          id=\"content\"\n          name=\"content\"\n          label=\"content\"\n          fullWidth\n          onChange={handleInputChange}\n          value={values.content}\n          autoComplete=\"content\"\n        />\n        </Grid>\n        <Grid item xs={12} \n          container direction=\"row\"\n        >\n        {\n          data.ticketEmployeeId ?\n          \n         ( <div>\n           <Chip\n        icon={<FaceIcon />}\n        label=\"Expert Info\"\n        clickable\n        color=\"primary\"\n        onClick={expertShow}\n        deleteIcon={<DoneIcon />}/>\n\n        <Chip\n        icon={<FaceIcon />}\n        label=\"Start Chat\"\n        clickable\n        color=\"primary\"\n        onClick={chatWithExpert}\n        deleteIcon={<ChatIcon />}/>\n\n         </div>\n         )\n        : null\n        }\n        { data.ownerUploadImages && JSON.parse(data.ownerUploadImages).length >0 ?\n              <Chip\n              label=\"See Attachments\"\n              clickable\n              color=\"primary\"\n              onClick={imageListen}\n              deleteIcon={<AttachmentIcon />}\n\n            />  : null\n        }\n        </Grid> \n\n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? \n          <Grid item xs={12}>\n          <TextField\n            disabled = {formEdit}\n            multiline\n            rows=\"3\"\n            required\n            id=\"closedComment\"\n            name=\"closedComment\"\n            label=\"closedComment\"\n            fullWidth\n            value={closedComment}\n            autoComplete=\"content\"\n          />\n          </Grid>\n          : null}      \n\n\n        <Grid\n  container\n  direction=\"row\"\n  justify=\"flex-end\"\n  alignItems=\"center\"\n>\n\n</Grid>\n      </Grid>\n        </DialogContent>\n\n        {\n          data.status == \"closed\" || data.status == \"completed\" ? null :\n        <DialogActions>\n        { setIsEmployee == false?     \n          \n          <Button variant=\"contained\" onClick={closeTicket} >\n            Close Ticket\n          </Button> :\n            null}\n\n         { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={unassignTicket} color=\"secondary\">\n            Unassign\n          </Button> :\n            null}\n\n          { setIsEmployee &&  data.status == \"assinged\"?     \n          \n          <Button variant=\"contained\" onClick={completeTicket} color=\"primary\">\n            Complete Job\n          </Button> :\n            null}\n\n\n          {\n            data.status == \"open\"  ?\n          <Button onClick={acceptTicket}  variant=\"contained\" color=\"primary\">\n          { setIsEmployee ? \"Accept\" :  formEdit == false ?\"Update\" : \"Edit\"}\n        </Button> : null\n          }\n        </DialogActions> \n        }\n      </Dialog>\n      {openAlert? <AlertDialog  type={alertType} openPop={openAlert} closeAlert={closeAlert}/> : null}\n      {openUserImage? <ImageViewer  inputimages={data.ownerUploadImages} openPop={openUserImage} closeAlert={closeAttachment}/> : null}\n      {openExpert? <ExpertViewer  employee={data.employee} openPop={openExpert} closeAlert={closeExpertShow}/> : null}\n\n    </div>\n  );\n}\n\nexport default AcceptTicket;","import React, { useEffect, useCallback, useState } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation,  Auth, Storage, Cache } from 'aws-amplify'\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport { AuthContext } from '../auth/auth-context'\nimport { onCreateTicket, onUpdatedTicket } from '../graphql/subscriptions'\nimport {Ticket} from './model';\nimport { getOpenTicket, getEmployee, getUser } from '../graphql/queries';\nimport AcceptTicket from '../ticket/ResponsiveDialog';\nimport Fab from '@material-ui/core/Fab';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom'\nimport Chip from '@material-ui/core/Chip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport DoneIcon from '@material-ui/icons/Close';\nimport Avatar from '@material-ui/core/Avatar';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    subHeader: {\n        color: \"rgba(0, 0, 0, 0.98)\",\n        fontSize: 18,\n        fontWeight: 500,\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        fontWeight: 900,\n        backgroundColor: \"rgba(0, 0, 0, 0.18)\",\n        width: 50,\n        marginBottom: 8,\n        marginTop: 8,\n        marginLeft: 5,\n        borderRadius: 5,\n        paddingLeft: 5,\n        color: \"black !important\"\n    },\n    absolute: {\n      position: 'absolute',\n      bottom: theme.spacing(9),\n      right: theme.spacing(4),\n    },\n    fab: {\n      margin: theme.spacing(2),\n    },\n    chipTop: {\n      marginTop: 10,\n    }\n  }),\n);\n\nexport default function TicketList() {\n  const classes = useStyles();\n  const [cartValue, setCartValue] = React.useState({});\n  const authContext = React.useContext(AuthContext)\n  const [openErrands, setOpenErrands] = React.useState<Ticket[]>([]);\n  const [ownerrands, setOwnerrands] = React.useState<Ticket[]>([]);\n  const [completedJob, setCompletedJob] = React.useState<Ticket[]>([]);\n\n  const [isAuth, setIsAuth] = React.useState<boolean>(false);\n  const history = useHistory()\n\n\n  useEffect(() => {\n    if(authContext && authContext.userId ){\n      setIsAuth(true)\n    }\n  }, [authContext.userId]);\n\n  \n  const handleListClick = (e: any) => {\n    console.log(\"button click\", e);\n    setSelectedItem(e);\n    setOpenBuy(true)\n}\n\nconst [openBuy, setOpenBuy] = React.useState(false);\n\n// @ts-ignore\nconst [selectedItem, setSelectedItem] = React.useState<Ticket>({});\n\n\nconst [isEmployee, setIsEmployee] = React.useState(false);\n\nconst createJob = () => {\n  console.log(\"createJob\");\n  history.push('/createticket')\n\n};\n\n// create initial state\nconst initialState = {\n  errand: ''\n}\n\nconst [state, dispatch] = React.useReducer(reducer, initialState)\n\n\n// update reducer\nfunction reducer(state: any, action: any) {\n  switch(action.type) {\n    case 'ADDNEWJOB':\n      {\n        const errand = action.errand;\n\n        openErrands.push(errand);\n        // create new object\n        const updated =  JSON.parse(JSON.stringify(openErrands));\n        setOpenErrands(updated);\n        return state;\n\n      }\n    case 'EXPERTUPDATE':\n{\n  const errand = action.errand;\n  // if job open details updated so updated local\n  if(errand.status == \"open\"){\n    console.log(\"updated\", openErrands);\n\n    openErrands.forEach((element, index) => {\n      if(element.id === errand.id) {\n        openErrands[index] = errand;\n      }\n  });\n\n  console.log(\"updated\", openErrands);\n\n  const updated =  JSON.parse(JSON.stringify(openErrands));\n    setOpenErrands(updated)\n\n\n  } // job moved from open to another state so remove from it\n  else {\n    var filtered = openErrands.filter(function(el) { return el.id != errand.id; }); \n    setOpenErrands(filtered);\n  }\n  return state\n\n}    \n    case 'USERUPDATE':{\n      const errand = action.errand;\n               if(errand.status != \"closed\" && errand.status != \"completed\"){\n                      // if job open details updated so updated local\n          for (var i = 0; i < ownerrands.length; i++) {\n            if(ownerrands[i].id === errand.id && ownerrands[i].status ) {\n              ownerrands[i] = errand;\n              const updated =  JSON.parse(JSON.stringify(ownerrands));\n              setOwnerrands(updated)\n              return state\n\n            }\n          }\n\n        }\n        return state;\n    }\n    default:\n      return state\n  }\n}\n\n\nconst closeAcceptButton = (op: boolean, updateTicket: Ticket) => {\n  setOpenBuy(false)\n\n  if(op){\n    if(isEmployee){\n\n      if(updateTicket.status == \"assinged\"){\n        var filtered = openErrands.filter(function(el) { return el.id != selectedItem.id; }); \n        ownerrands.push(updateTicket);\n        setOwnerrands(ownerrands)\n        setOpenErrands(filtered);\n      }// unassign so remove from queue\n      else if (updateTicket.status == \"open\"){\n        var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n        setOwnerrands(filtered);\n\n        openErrands.push(updateTicket);\n        setOpenErrands(openErrands);\n\n      }// ticket completed\n      else if (updateTicket.status == \"completed\"){\n        var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n        setOwnerrands(filtered)\n        completedJob.push(updateTicket);\n        setCompletedJob(completedJob)\n      }\n\n    }else {\n\n      // customer closed ticket\n     if( updateTicket.status == \"closed\"){\n\n      var filtered = ownerrands.filter(function(el) { return el.id != selectedItem.id; }); \n      completedJob.push(selectedItem);\n      setCompletedJob(completedJob)\n      setOwnerrands(filtered);\n\n     } // customer updated ticket\n     else {\n       console.log(\"updateTicket\", updateTicket);\n      ownerrands.forEach((element, index) => {\n        if(element.id === updateTicket.id) {\n          ownerrands[index] = updateTicket;\n        }\n    });\n    // const updated =  JSON.parse(JSON.stringify(ownerrands));\n    // console.log(\"updated\", updated, ownerrands);\n      setOwnerrands(ownerrands)\n     }\n\n    }\n  }\n};\n\n\n  useEffect(() => {\n    let unsubscribe;\n\n    const id = authContext.userId;\n    if(id){\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        (async function anyNameFunction() {\n\n            if(type != \"Customer\"){\n\n              setIsEmployee(true)\n\n              const acceptedJobs = await API.graphql(graphqlOperation(getEmployee, { id }))\n              console.log('acceptedJobs',acceptedJobs); \n                  //@ts-ignore\n              if(acceptedJobs.data.getEmployee &&  acceptedJobs.data.getEmployee.employeeTickets.items.length > 0){\n                                  //@ts-ignore\n                  const openErrands = acceptedJobs.data.getEmployee.employeeTickets.items as Ticket[];\n                  console.log(\"acceptedJobs\", openErrands);\n                  var filtered = openErrands.filter(function(el) { return (el.status != \"closed\" && el.status != \"completed\") }); \n                  var closed = openErrands.filter(function(el) { return (el.status == \"closed\" || el.status == \"completed\") }); \n\n                  setOwnerrands(filtered)\n                  setCompletedJob(closed)\n              }\n\n\n              const commentData = await API.graphql(graphqlOperation(getOpenTicket, { status: \"open\", county: \"Davidson County\" }))\n              console.log('getOpenTicket',commentData); \n                  //@ts-ignore\n              if(commentData.data.jobsByStatus &&  commentData.data.jobsByStatus.items.length > 0){\n                                  //@ts-ignore\n                  const openErrands = commentData.data.jobsByStatus.items as Ticket[];\n                  console.log(\"getOpenTicket\", openErrands);\n                  //@ts-ignore\n                  setOpenErrands(openErrands)\n              }\n\n                \t\t\t// @ts-ignore\n\t\t    const createdSub = API.graphql(graphqlOperation(onCreateTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n                \n                const errand = todoData.value.data.onCreateTicket;\n                console.log(\"onCreateTicket\", errand);\n                dispatch({ type: 'ADDNEWJOB', errand  })\n              }\n            });\n\n\n                            \t\t\t// @ts-ignore\n\t\t    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n          const errand = todoData.value.data.onUpdatedTicket;\n          console.log(\"onUpdatedTicket\", errand);\n          dispatch({ type: 'EXPERTUPDATE', errand  })\n\n        }\n      });\n\n            unsubscribe = () => {\n              createdSub.unsubscribe();\n              updatedsubscription.unsubscribe();\n\n              };\n                   \n               }else {\n                const commentData = await API.graphql(graphqlOperation(getUser, { id }))\n                console.log('fetchDate',commentData); \n                    //@ts-ignore\n                if(commentData.data.getUser &&  commentData.data.getUser.userTickets.items.length > 0){\n                                    //@ts-ignore\n                    const errands = commentData.data.getUser.userTickets.items as Ticket[];\n                    console.log(\"openErrands\", errands);\n                    var filtered = errands.filter(function(el) { return (el.status != \"closed\" && el.status != \"completed\") }); \n                    var closed = errands.filter(function(el) { return (el.status == \"closed\" || el.status == \"completed\") }); \n\n                    setOwnerrands(filtered)\n                    setCompletedJob(closed)\n                }\n\n                                            \t\t\t// @ts-ignore\n\t\t    const updatedsubscription = API.graphql(graphqlOperation(onUpdatedTicket, {county: \"Davidson County\"})).subscribe({next: (todoData) => {\n          const errand = todoData.value.data.onUpdatedTicket;\n          dispatch({ type: 'USERUPDATE', errand  })\n\n        }\n        });\n      }\n          \n          \n           })();\n    }\n    return unsubscribe;\n\n  }, [authContext.userId]);  \n\n\n\n\n  return (\n    <AppHomeLayout title='RA2 Serverless' header = { Object.keys(cartValue).length > 0? \"cart\": undefined}>\n<Grid\n  container\n  direction=\"column\"\n>\n{\n  isEmployee ? \n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            Open Jobs\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {openErrands.length > 0 ? openErrands.map(item => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              Time : {item.time} <br/>   Address : {item.destination}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n\n<Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />\n\n\n        {/* <Input  className={classes.cartLabel} value=  {`$ ${item.price}`} disabled  /> */}\n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n:null}\n      <Divider />\n\n    <List \n        component=\"nav\"\n        aria-labelledby=\"nested-list-subheader\"\n        subheader={\n          <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n            {isEmployee ? \"Accepted Jobs \" : \"Created Jobs\"}\n          </ListSubheader>\n        }\n    className={classes.root}>\n\n    {ownerrands.length > 0 ? ownerrands.map(item => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n      <ListItemText\n        primary= {item.title}\n        secondary={\n          <React.Fragment>\n            <Typography\n              component=\"span\"\n              variant=\"body2\"\n              className={classes.inline}\n              color=\"textPrimary\"\n            >\n              Time : {item.time} <br/>   Address : {item.destination}\n            </Typography>\n\n\n          </React.Fragment>\n        }\n      />\n\n      <Grid\n      className={classes.buttonGird} \n        container\n        direction=\"row\"\n        justify=\"flex-end\"\n        alignItems=\"flex-end\"\n      >  \n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n    />  \n\n    </Grid>\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )):<div>No Jobs</div>}\n    </List>\n\n    <Divider />\n\n<List \n    component=\"nav\"\n    aria-labelledby=\"nested-list-subheader\"\n    subheader={\n      <ListSubheader  className={classes.subHeader} component=\"div\" id=\"nested-list-subheader\">\n        {isEmployee ? \"Completed Jobs \" : \"Closed Jobs\"}\n      </ListSubheader>\n    }\nclassName={classes.root}>\n\n{completedJob.length > 0 ? completedJob.map(item => (\n  <div key={item.id} >\n  <ListItem  key={item.id}  alignItems=\"flex-start\" onClick={() => handleListClick(item)} >\n\n  <ListItemText\n    primary= {item.title}\n    secondary={\n      <React.Fragment>\n        <Typography\n          component=\"span\"\n          variant=\"body2\"\n          className={classes.inline}\n          color=\"textPrimary\"\n        >\n          Time : {item.time} <br/>   Address : {item.destination}\n        </Typography>\n\n\n      </React.Fragment>\n    }\n  />\n\n  <Grid\n  className={classes.buttonGird} \n    container\n    direction=\"row\"\n    justify=\"flex-end\"\n    alignItems=\"flex-end\"\n  >\n     <Chip\n        avatar={<Avatar>$</Avatar>}\n        size=\"small\"\n        color=\"secondary\"\n        label= {`${item.price}`}  \n    /> \n\n     <Chip\n        size=\"small\"\n        color=\"primary\"\n        label= {item.status}\n        className={classes.chipTop}\n        deleteIcon={ item.status === \"closed\" ?<CloseIcon /> : <DoneIcon />}\n    />\n\n</Grid>\n\n</ListItem>\n<Divider variant=\"inset\" component=\"li\" />\n\n  </div>  \n)): <div>No Jobs</div>}\n</List>\n\n\n    {openBuy? <AcceptTicket  setIsEmployee={isEmployee} data={selectedItem} openPop={openBuy} close={closeAcceptButton}/> : null}\n    </Grid>\n\n    {isEmployee == false ?<Tooltip title=\"Add\" aria-label=\"add\">\n        <Fab color=\"primary\" className={classes.absolute}>\n          <AddIcon onClick={createJob}/>\n        </Fab>\n      </Tooltip> : null\n    }\n\n    </AppHomeLayout>\n\n  );\n}","import './chat1.css';\nimport React from 'react';\nimport { API, graphqlOperation, Cache } from 'aws-amplify'\nimport { getConvo } from '../graphql/queries'\nimport { message}  from '../utils'\nimport { createMessage } from '../graphql/mutations'\nimport {onCreateMessage} from '../graphql/subscriptions';\nimport IconButton from '@material-ui/core/IconButton';\nimport AttachmentIcon from '@material-ui/icons/Attachment';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport SendIcon from '@material-ui/icons/Send';\n// @ts-ignore\nimport { Popover, PopoverHeader, PopoverBody } from 'reactstrap';\nimport {SelectedConv, getImages, handleImageUpload} from '../utils'\n\n// @ts-ignore\nimport { v4 as uuid } from 'uuid';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\n\n/* detect url in a message and add a link tag */\nfunction detectURL(message: any) {\n\tvar urlRegex = /(((https?:\\/\\/)|(www\\.))[^\\s]+)/g;\n\treturn message.replace(urlRegex, function(urlMatch:any) {\n\t\treturn '<a href=\"' + urlMatch + '\">' + urlMatch + '</a>';\n\t})\n}\n\n/* ========== */\n/* Title component */\ntype TitleProp = {\n\towner: string\n\tbackButton: () => void\n  }\nclass Title extends React.Component<TitleProp> {\n\tconstructor(props: any, context: any) {\n\t\tsuper(props, context);\n\t\tconsole.log(\"title\", this.props);\n\n\t}\n\trender() {\n\t\treturn (\n\t\t\t// <div className={\"chatApp__convTitle\"}>\n\t\t\t// <ArrowBackIcon style={{ paddingRight: 100 }} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t//    Chat</div>\n\n\t\t\t<MuiDialogTitle className={\"chatApp__convTitle_modifed_root\"} disableTypography>\n\t\t\t<ArrowBackIosIcon className={\"chatApp__convTitle_modifed_btn\"} color=\"primary\" onClick={this.props.backButton} />\n\t\t\t<Typography className={\"chatApp__convTitle_modifed_title\"} variant=\"h6\">{this.props.owner}</Typography>\n\t\t  </MuiDialogTitle>\n\t\t);\n\t}\n}\n/* end Title component */\n/* ========== */\n\n/* ========== */\n/* InputMessage component - used to type the message */\nlet uploadFile: any = null;\ntype InputMessageProp = {\n    isLoading: boolean\n    owner: string,\n    ownerAvatar: string,\n    sendMessageLoading: ( message: any)  => void,\n\tsendMessage: ( message: any)  => void,\n\tsenderUsername: string\n  }\n\n\n  type InputMessageState = {\n\tmessageInput: any,\n\tcontent: string,\n\tpopoverOpen: boolean,\n\tfile: any,\n\tfilePreviewSrc: any\n  }\nclass InputMessage extends React.Component<InputMessageProp, InputMessageState> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tpopoverOpen: false,\n\t\t\tcontent: '',\n\t\t\tmessageInput: '',\n\t\t\tfile: '',\n\t\t\tfilePreviewSrc: ''\n\t\t};\n\t\tthis.handleSendMessage = this.handleSendMessage.bind(this);\n\n\n\n\t}\n\n\tmessageInput: any;\n\n\townerInput: any;\n\townerAvatarInput :any;\n\thandleSendMessage(event: any) {\n\t\tevent.preventDefault();\n\t\t/* Disable sendMessage if the message is empty */\n\t\tif( uploadFile ||this.messageInput.value.length > 0 ) {\n\t\t\tthis.props.sendMessageLoading( this.messageInput.value);\n\t\t\t/* Reset input after send*/\n\t\t\tthis.messageInput.value = '';\n\t\t\tthis.close();\n\t\t}\n\t}\n\t\n\thandleFileChange = (e: any) => {\n\t\tconst file = e.target.files[0]\n\t\tconsole.log(file)\n\t\tif (file && file.type.startsWith('image/')) {\n\t\t  const reader = new FileReader()\n\t\t  const self = this\n\t\t  reader.onload = function(e) {\n\t\t\tself.setState({ popoverOpen: true, filePreviewSrc: this.result })\n\t\t  }\n\t\t  reader.readAsDataURL(file)\n\t\t  this.setState({ file })\n\t\t  uploadFile = file;\n\t\t}\n\t  }\n\n\t  close = () => {\n\t\tthis.setState({ file: undefined, popoverOpen: false })\n\t\tuploadFile = null;\n\t  }\n\t\n\n\trender() {\n\t\tconst { filePreviewSrc } = this.state;\n\t\tconst imgBtnClass ='btn btn-block ' + (this.state.file ? 'btn-success' : 'btn-primary')\n\n\t\t/* If the chatbox state is loading, loading class for display */\n\t\tvar loadingClass = this.props.isLoading ? 'chatApp__convButton--loading' : '';\n\t\tlet sendButtonIcon =     <SendIcon color='action'/>\n\t\t//<i className={\"material-icons\"}>send</i>;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSendMessage}>\n                 <div className={'chatApp__convButtonLeft' + loadingClass}> \n                  {/* <input\n\t\t\t\t      className={'zeroWidth'}\n                      type=\"file\"\n                      onChange={this.handleFileChange}\n\t\t\t\t\t/> */}\n\t\t\t\t\t\n\t\t\t\t\t<input accept=\"image/*\" className={'zeroWidth'} id=\"icon-button-file\" onChange={this.handleFileChange} type=\"file\" />\n      <label className={'fileUploadIcon'} htmlFor=\"icon-button-file\">\n        <IconButton color=\"primary\" className={'fileUploadIcon'} aria-label=\"upload picture\" component=\"span\">\n          <AttachmentIcon className={'fileUploadIcon'}  />\n        </IconButton>\n      </label>\n\n\t\t\t\t<label className={imgBtnClass} id=\"Popover1\">\n                      <i className=\"fas fa-camera\" />\n                    </label>\n\t\t\t\t    <Popover\n                      placement=\"top-start\"\n                      isOpen={this.state.popoverOpen}\n                      target=\"Popover1\"\n                    >\n                      <PopoverHeader>\n                        <span>Preview</span>\n                        <button\n                          type=\"button\"\n                          className=\"close\"\n                          aria-label=\"Close\"\n                          onClick={this.close}\n                        >\n                          <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                      </PopoverHeader>\n                      <PopoverBody>\n                        <img\n                          alt=\"previw\"\n                          className=\"msg-image\"\n                          src={filePreviewSrc}\n                        />\n                      </PopoverBody>\n                    </Popover>\n\t\t\t\t</div>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={owner => (this.ownerInput = owner)}\n\t\t\t\t\tvalue={this.props.owner}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"hidden\"\n\t\t\t\t\tref={ownerAvatar => (this.ownerAvatarInput = ownerAvatar)}\n\t\t\t\t\tvalue={this.props.ownerAvatar}\n\t\t\t\t/>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tref={message => (this.messageInput = message)}\n\t\t\t\t\tclassName={\"chatApp__convInput\"}\n\t\t\t\t\tplaceholder=\"Text message\"\n\t\t\t\t/>\n\t\t\t\t<div className={'chatApp__convButton ' + loadingClass} onClick={this.handleSendMessage}>\n\t\t\t\t{sendButtonIcon}\n\t\t\t\t</div>\n\t\t\t\n\t\t\t</form>\n\t\t);\n\t}\n}\n/* end InputMessage component */\n/* ========== */\n\n\n/* ========== */\n/* MessageList component - contains all messages */\ntype MessageListProp = {\n    messages: any,\n    owner: string\n  }\nclass MessageList extends React.Component<MessageListProp> {\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__convTimeline\"}>\n\t\t\t{this.props.messages.slice(0).reverse().map(\n\t\t\t\t(messageItem: any) => (\n\t\t\t\t\t<MessageItem\n\t\t\t\t\t\tkey={messageItem.id}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\tsender={messageItem.owner}\n\t\t\t\t\t\tsenderAvatar={messageItem.senderAvatar}\n\t\t\t\t\t\tmessage={messageItem.content}\n\t\t\t\t\t\tfile={messageItem.file}\n\t\t\t\t\t/>\n\t\t\t\t)\n\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageList component */\n/* ========== */\n\n/* ========== */\n/* MessageItem component - composed of a message and the sender's avatar */\ntype MessageItemProp = {\n    owner: string,\n    sender: string\n    senderAvatar: string\n\tmessage: string,\n\tfile: string;\n  }\n\n  type MessageItemState = {\n\tfileUrl: any,\n\tkey: string\n  }\nclass MessageItem extends React.Component<MessageItemProp, MessageItemState> {\n\n\tconstructor(props: any) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tfileUrl: null,\n\t\t\tkey: \"\"\n\t\t};\n\t}\n\n\tcomponentDidUpdate(prevProps: any, prevState: any) {\n\t\tconst { file: prevMsg } = prevProps\n\t\tconst { file: nodebugImage } = this.props\n\t\tlet currMsg = null;\n\t\tif(nodebugImage){\n\t\t\tcurrMsg = JSON.parse(nodebugImage);\n\t\t}\n\n\t\tif (\n\t\t  prevMsg &&\n\t\t  prevMsg.key === null &&\n\t\t  currMsg &&\n\t\t  currMsg.key\n\t\t) {\n\t\t  this.checkFileUrl()\n\t\t}\n\t  }\n\n\t  async componentDidMount() {\n\t\tawait this.checkFileUrl()\n\t  }\n\n\t  async checkFileUrl() {\n\t\tconst {file} = this.props;\n\t\tconsole.log(`New url for `,file)\n\n\t\tif (file) {\n\t\tconst images = JSON.parse(file);\n\t\t  let fileUrl = Cache.getItem(images.key)\n\t\t  if (fileUrl) {\n\t\t\tconsole.log(`Retrieved cache url for ${images.key}: ${fileUrl}`)\n\t\t\tthis.setState({ key: images.key })\n\t\t\treturn this.setState({ fileUrl })\n\t\t  }\n\t\n\t\t  fileUrl = await getImages(images);\n\t\t  console.log(`Retrieved cache url for ${images.key}: ${fileUrl}`)\n\n\t\t  const expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t  Cache.setItem(images.key, fileUrl, { expires })\n\t\t  this.setState({ fileUrl })\n\n\t\t//   Storage.get(keyWithoutPrefix, { identityId }).then(fileUrl => {\n\t\t// \tconsole.log(`New url for ${file.key}: ${fileUrl}`)\n\t\t\n\t\t// \tconst expires = new Date(new Date().getTime() + 14*60000).getTime();\n\t\t// \tCache.setItem(file.key, fileUrl, { expires })\n\t\t// \tthis.setState({ fileUrl })\n\t\t//  })\n\t\t}\n\t  }\n\n\t// \n\tsenderAvatar = \"https://i.pravatar.cc/150?img=56\";\n\trender() {\n\t\t/* message position formatting - right if I'm the author */\n\t\tlet messageRight = (( this.props.owner == this.props.sender ) ? 'highlight msg-right' : 'highlight');\n\n\t\tlet messagePosition = (( this.props.owner == this.props.sender ) ? 'chatApp__convMessageItem--right' : 'chatApp__convMessageItem--left');\n\t\treturn (\n\t\t\t<div className={\"chatApp__convMessageItem \" + messagePosition + \" clearfix\"}>\n\t\t\t\t<img src={this.senderAvatar} alt={this.props.sender} className=\"chatApp__convMessageAvatar\" />\n\t\t\t\t{\n\t\t\t\t\tthis.props.file && this.state.fileUrl? (<div className={messageRight}>\n\t\t\t\t\t<img\n\t\t\t\t\t  alt=\"awesome\"\n\t\t\t\t\t  src={this.senderAvatar}\n\t\t\t\t\t  className=\"msg-image\"\n\t\t\t\t\t  id=\"ImgPopover\"\n\t\t\t\t\t/>\n\t\t\t\t  </div>):\n\t\t\t\t<div className=\"chatApp__convMessageValue\" dangerouslySetInnerHTML={{__html: this.props.message}}></div>\n\n\t\t\t\t}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end MessageItem component */\n/* ========== */\n\n/* ========== */\n/* ChatBox component - composed of Title, MessageList, TypingIndicator, InputMessage */\n\ntype ChatBoxProp = {\n    messages: any\n    owner: string,\n    ownerAvatar: string,\n\tsendMessage: ( message: any) => void;\n\tbackButton: () => void;\n\tsenderUsername : string;\n  }\n\n  type ChatBoxState = {\n    isLoading: boolean\n  }\n\nclass ChatBox extends React.Component<ChatBoxProp, ChatBoxState> {\n\tconstructor(prop: any) {\n\t\tsuper(prop);\n\t\tthis.state = {\n\t\t\tisLoading: false\n\t\t};\n\t\tthis.sendMessageLoading = this.sendMessageLoading.bind(this);\n\t\tvar timeout = null;\n\t}\n\t/* catch the sendMessage signal and update the loading state then continues the sending instruction */\n\tsendMessageLoading( message: any) {\n\t\tthis.setState({ isLoading: true });\n\t\tthis.props.sendMessage( message);\n\t\tsetTimeout(() => {\n\t\t\tthis.setState({ isLoading: false });\n\t\t}, 400);\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className={\"chatApp__conv\"}>\n\t\t\t\t<Title\n\t\t\t\t\towner={this.props.senderUsername}\n\t\t\t\t\tbackButton={this.props.backButton}\n\t\t\t\t/>\n\t\t\t\t<MessageList\n\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\tmessages={this.props.messages}\n\t\t\t\t/>\n\t\t\t\t<div className={\"chatApp__convSendMessage clearfix\"}>\n\t\t\t\t\t<InputMessage\n\t\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t\t\towner={this.props.owner}\n\t\t\t\t\t\townerAvatar={this.props.ownerAvatar}\n\t\t\t\t\t\tsendMessage={this.props.sendMessage}\n\t\t\t\t\t\tsendMessageLoading={this.sendMessageLoading}\n\t\t\t\t\t\tsenderUsername={this.props.senderUsername}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatBox component */\n/* ========== */\n\n/* ========== */\n/* ChatRoom component - composed of multiple ChatBoxes */\ntype ChatRoomState = {\n    messages: any\n  }\n  type ChatRoomProps = {\n\tselectedConv: SelectedConv;\n\tbackButton : () => void\n  }\nexport class ChatRoom extends React.Component<ChatRoomProps, ChatRoomState> {\n\tconstructor(props: any) {\n\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tmessages: [{\n\t\t\t\tid: 1,\n\t\t\t\tsender: 'Shun',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=32',\n\t\t\t\tmessage: 'Hello 👋'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 2,\n\t\t\t\tsender: 'Gabe',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=56',\n\t\t\t\tmessage: 'Hey!'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 3,\n\t\t\t\tsender: 'Gabe',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=56',\n\t\t\t\tmessage: 'How are you?'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 4,\n\t\t\t\tsender: 'Shun',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=32',\n\t\t\t\tmessage: 'Great! It\\'s been a while... 🙃'\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: 5,\n\t\t\t\tsender: 'Gabe',\n\t\t\t\tsenderAvatar: 'https://i.pravatar.cc/150?img=56',\n\t\t\t\tmessage: 'Indeed.... We\\'re gonna have to fix that. 🌮🍻'\n\t\t\t}\n\t\t\t],\n\t\t};\n\t\tthis.sendMessage = this.sendMessage.bind(this);\n\t}\n\tasync componentDidMount() {\n\t\tconsole.log(\"props\", this.props.selectedConv)\n\t\tconst convId = this.props.selectedConv.convId;\n\t\ttry {\n\t\t\tconst commentData = await API.graphql(graphqlOperation(getConvo, { id: convId}))\n\n\t\t\tconsole.log(\"messages\", commentData);\n\t\t\t//@ts-ignore\n\t\t\tif(commentData.data.getConvo.messages){\n\t\t\t\t//@ts-ignore\n\t\t\t\tconst messages =  commentData.data.getConvo.messages.items as message[];\n\t\t\t\tthis.setState({ messages: messages.reverse() });\n            \n\t\t\t}else {\n\t\t\t\tthis.setState({ messages: [] });\n\t\t\t}\n\t\t\t// @ts-ignore\n\t\t    const subscription = API.graphql(graphqlOperation(onCreateMessage, {messageConversationId: convId})).subscribe({next: (todoData) => {\n\t\t\tconst newMessage = todoData.value.data.onCreateMessage;\n\t\t\tconst messages = this.state.messages;\n\t\t\tmessages.push(newMessage);\n\t\t\tthis.setState({ messages: messages });\n\n\t\t  }\n\t\t});\n\t\t  \n\n\t\t} catch (err) {\n\t\t  console.log('error: ', err)\n\t\t}\n\t}\n\n\t/* adds a new message to the chatroom */\n\t// sendMessage( message) {\n\t// \tsetTimeout(() => {\n\t// \t\tlet messageFormat = detectURL(message);\n\t// \t\tlet newMessageItem = {\n\t// \t\t\tid: this.state.messages.length + 1,\n\t// \t\t\tsender: sender,\n\t// \t\t\tsenderAvatar: senderAvatar,\n\t// \t\t\tmessage: messageFormat\n\t// \t\t};\n\t// \t\tthis.setState({ messages: [...this.state.messages, newMessageItem] });\n\t// \t}, 400);\n\t// }\n\n\tsendMessage = async (message: any) => {\n\t\tif (message.trim().length === 0 && !uploadFile) {\n\t\t\treturn\n\t\t  }\n\t\t  let sendMes ;\n\t\t  if(uploadFile){\n\t\t\tconst S3path = await handleImageUpload([uploadFile])\n\t\t\tconsole.log('file for s3', S3path)\n\t\t\tlet  file = JSON.stringify(S3path);\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: true,\n\t\t\t\tchatbot: false,\n\t\t\t\tfile,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId\n\t\t\t};\n\t\t  }else {\n\t\t\tsendMes = {\n\t\t\t\tid: uuid(),\n\t\t\t\tisSent: true,\n\t\t\t\tchatbot: false,\n\t\t\t\tcontent: message ,\n\t\t\t\t//ownerId: 'de1aa72c-0ab0-472b-9eed-2e88693321ee',\n\t\t\t\tmessageConversationId: this.props.selectedConv.convId\n\t\t\t};\n\n\t\t  }\n\t\t \n\t\t\n        try {\n            const response = await API.graphql(\n                graphqlOperation(createMessage, { input: sendMes })\n\t\t\t);\n\t\t\t//this.setState({ messages: [...this.state.messages, newMessageItem] });\n\n        } catch (e) {\n           \n        }\n\t}\n\t\n\trender() {\n\t\tlet users:any = [];\n\t\tlet chatBoxes:any = [];\n\t\tlet messages = this.state.messages;\n\t\tlet sendMessage = this.sendMessage;\n\n\t\t/* user details - can add as many users as desired */\n\t\tusers[0] = { name: 'de1aa72c-0ab0-472b-9eed-2e88693321ee', avatar: 'https://i.pravatar.cc/150?img=32' };\n\t\t//users[1] = { name: 'Gabe', avatar: 'https://i.pravatar.cc/150?img=56' };\n\t\t/* test with two other users :)\n\t\tusers[2] = { name: 'Kate', avatar: 'https://i.pravatar.cc/150?img=47' };\n\t\tusers[3] = { name: 'Patrick', avatar: 'https://i.pravatar.cc/150?img=14' };\n\t\t*/\n\t\t\n\t\t/* creation of a chatbox for each user present in the chatroom */\n\n\t\tconst props = this.props.selectedConv;\n\t\tconst backButton = this.props.backButton;\n\n\t\tObject.keys(users).map(function(key) {\n\t\t\tvar user = users[key];\n\t\t\tchatBoxes.push(\n\t\t\t\t// @ts-ignore\n\t\t\t\t<ChatBox\n\t\t\t\t\tkey={key}\n\t\t\t\t\towner={props.owner}\n\t\t\t\t\townerAvatar={props.ownerAvatar}\n\t\t\t\t\tsendMessage={sendMessage}\n\t\t\t\t\tmessages={messages}\n\t\t\t\t\tbackButton={backButton}\n\t\t\t\t\tsenderUsername={props.senderUsername}\n\t\t\t\t/>\n\t\t\t);\n\t\t});\n\t\treturn (\n\t\t\t<div className={\"chatApp__room\"}>\n\t\t\t\t{chatBoxes}\n\t\t\t</div>\n\t\t);\n\t}\n}\n/* end ChatRoom component */\n/* ========== */\n","import React, { useContext, useEffect } from 'react'\nimport { createStyles, Theme, makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport Divider from '@material-ui/core/Divider';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport AppHomeLayout from '../app/AppHomeLayout'\nimport { API, graphqlOperation } from 'aws-amplify'\nimport { getUserConversations, getEmployeeConversations } from '../graphql/queries'\nimport { AuthContext } from '../auth/auth-context'\nimport {conversationLink, Conversation, getImages, SelectedConv} from '../utils'\nimport './chat1.css';\nimport {ChatRoom} from './chat1'\nimport { useLocation } from \"react-router-dom\";\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      maxWidth: 400,\n      backgroundColor: theme.palette.background.paper,\n    },\n    inline: {\n      display: 'inline',\n    },\n    button: {\n       width : 20,\n       marginTop: 15,\n       padding: 5,\n       margin: theme.spacing(1),\n    },\n    rating: {\n        marginLeft: 15\n    },\n    buttonCart: {\n        marginLeft: 5,\n        marginTop: 15,\n        width: 10\n    },\n    buttonGird: {\n        width: 90\n    },\n    cartLabel: {\n        width: 10,\n        marginBottom: 8,\n        marginLeft: 5\n    }\n  }),\n);\n\nexport default function ChatList() {\n  const classes = useStyles();\n  const [converstaions, setConverstaions] = React.useState([]);\n  const authContext = useContext(AuthContext)\n  const [flag, setFlagValue] = React.useState(false);\n  const [selectedConv, setSelectedConv] = React.useState<SelectedConv>({\n    convId: '', senderUsername: '',\n    owner: '', ownerAvatar: '', senderAvatar: '', sender: ''\n  });\n  const location = useLocation();\n\n  useEffect(() => {\n    // console.log(location.pathname); // result: '/secondpage'\n    // console.log(location.search); // result: '?query=abc'\n   // console.log(location.state.deail); // result: 'some_value'\n\n   //@ts-ignore\n    if(location.state && location.state.conversation ){\n      console.log(location); \n\n       //@ts-ignore\n       const conversation = location.state.conversation.conversation as  Conversation  ;\n              //@ts-ignore\n       const currentId = location.state.user as  string  ;\n      const user = conversation.associated.items.filter(conv => (conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      const otherUser = conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n      console.log(user, otherUser); \n\n      setSelectedConv({\n        convId: conversation.id,\n         owner: currentId,\n         ownerAvatar: \"https://i.pravatar.cc/150?img=56\",\n         senderAvatar: \"https://i.pravatar.cc/159?img=2\",\n         senderUsername:otherUser[0].user?.username ?? otherUser[0].employee?.username ,\n         sender: otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId \n       });\n       setFlagValue(true);\n    }\n }, [location]);\n\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const id = authContext.userId;\n        const type = authContext.user.attributes[\"custom:account_type\"];\n        console.log('authContext',authContext,type);\n\n        if(type == \"Customer\"){\n          const commentData = await API.graphql(graphqlOperation(getUserConversations, { id }))\n  \n          // @ts-ignore \n          if(commentData.data.getUser && commentData.data.getUser.userConversations.items.length > 0){\n          // @ts-ignore \n          const comments = commentData.data.getUser.userConversations.items;\n\n          comments.forEach(function(chat: any, index: any, theArray: any) {\n            const otherUser = chat.conversation.associated.items.filter((conv : any)=> !(conv.convoLinkUserId ==  id || conv.convoLinkEmployeeId ==  id  ))\n\n            theArray[index].username = otherUser[0].user?.username ?? otherUser[0].employee?.username ;\n          });\n\n          setConverstaions(comments);\n          }\n\n        }else {\n          const commentData = await API.graphql(graphqlOperation(getEmployeeConversations, { id }))\n          console.log('getEmployeeConversations',commentData);\n\n          // @ts-ignore \n          if(commentData.data.getEmployee && commentData.data.getEmployee.employeeConversations.items.length > 0){\n          // @ts-ignore \n          const comments = commentData.data.getEmployee.employeeConversations.items;\n\n          comments.forEach(function(chat: any, index: any, theArray: any) {\n            const otherUser = chat.conversation.associated.items.filter((conv : any)=> !(conv.convoLinkUserId ==  id || conv.convoLinkEmployeeId ==  id  ))\n\n            theArray[index].username = otherUser[0].user?.username ?? otherUser[0].employee?.username ;\n          });\n\n          setConverstaions(comments);\n        }\n      }\n\n      } catch (error) {\n        console.log('unable get conversation for users:', error)\n      }\n    };\n    if(authContext.userId){\n      fetchData();\n    }\n  }, [authContext.userId]);\n\n  const handleClick = (value: conversationLink) => () => {\n    const currentId = authContext.userId;\n    const user = value.conversation.associated.items.filter(conv => (conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n    const otherUser = value.conversation.associated.items.filter(conv => !(conv.convoLinkUserId ==  currentId || conv.convoLinkEmployeeId ==  currentId  ))\n\n    setSelectedConv({\n      convId: value.conversation.id,\n      owner: authContext.userId,\n      ownerAvatar: \"https://i.pravatar.cc/150?img=56\",\n      senderAvatar: \"https://i.pravatar.cc/159?img=2\",\n      senderUsername: value.username,\n      sender: otherUser[0].convoLinkEmployeeId ?? otherUser[0].convoLinkUserId \n    });\n\n    setFlagValue(true);\n    console.log(\"value\",value);\n  };\n\n  const backButton = () => {\n    setFlagValue(false);\n\n  }\n  const conversationName = \"love\"\n  let data = null;\n\n\n  return (\n    <div>\n    { flag == false ?(\n      <AppHomeLayout title='RA2 Serverless'>\n\n    <List className={classes.root}>\n\n    {converstaions.length > 0 ? converstaions.map((item: conversationLink,index) => (\n      <div key={item.id} >\n      <ListItem  key={item.id}  alignItems=\"flex-start\" dense button onClick={handleClick(item)}>\n      <ListItemAvatar>\n        <Avatar alt=\"Remy Sharp\" src=\"https://picsum.photos/200/200\" />\n      </ListItemAvatar>\n      <ListItemText\n        primary={item.username}\n      />\n\n    </ListItem>\n    <Divider variant=\"inset\" component=\"li\" />\n\n      </div>  \n    )): <Grid\n    container\n    direction=\"row\"\n    justify=\"center\"\n    alignItems=\"center\"\n  >\n    <div>No Message Available </div>\n    </Grid>\n    }\n    </List>\n    </AppHomeLayout>)\n    : \n    <div>\n      \t{/* <div className=\"chatApp__loaderWrapper\">\n\t\t<div className=\"chatApp__loaderText\">Loading...</div>\n\t\t<div className=\"chatApp__loader\"></div>\n\t</div> */}\n      <ChatRoom selectedConv={selectedConv} backButton={backButton}>\n\n  </ChatRoom >\n\n</div>\n    }\n    </div>\n\n  );\n}","import React from 'react'\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { AuthContext } from '../auth/auth-context'\n\nimport Home from './Home'\n//import Privacy from './Privacy'\nimport Auth from '../auth/Auth';\nimport Checkout from '../profilepage/Checkout';\nimport CreateTicket from '../ticket/CreateTicket';\nimport TicketList from '../ticket/TicketList';\nimport ResponsiveDialog from '../ticket/ResponsiveDialog';\nimport ChatList from '../chat/ChatList';\nimport Stripe from '../profilepage/Stripe/Stripe';\n\nexport interface AppProps {}\n\nconst App: React.SFC<AppProps> = () => {\n  const history = useHistory()\n  const authContext = React.useContext(AuthContext)\n\n  //@ts-ignore\n  const RequireAuth =  ({ children })  => {\n    console.log(authContext.userId);\n    if (!authContext.userId) {\n      return <Redirect to={\"/\"} />;\n    }\n    console.log(\"children\",children);\n\n    return children;\n  };\n  //@ts-ignore\n  const PrivateRoute = ({ component: Component, ...rest }) => (\n    <Route {...rest} render={(props) => (\n      authContext.userId\n        ? <Component {...props} />\n        : <Redirect to='/auth' />\n    )} />\n  )\n\n  // const PrivateRoute = ({ component: Component, ...rest }) => (\n  //   <Route {...rest} render={(props) => (\n  //     authContext.userId\n  //       ? <Redirect to='/auth' />\n  //       : <Component {...props} />\n  //   )} />\n  // )\n\n  return (\n    <Switch>\n\n      {/* <PrivateRoute path='/' component={TicketList} /> */}\n\n       <Route exact path='/' component={TicketList} /> \n\n      <Route path='/auth' component={Auth} />\n \n      {/* <RequireAuth>\n      <Route path='/checkout' component={Checkout} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/createticket' component={CreateTicket} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/ticketList' component={TicketList} />\n      </RequireAuth>\n\n      <RequireAuth>\n      <Route path='/dum' component={ResponsiveDialog} />\n      </RequireAuth>  */}\n\n      {/* <RequireAuth>\n      <Route path='/chat' component={ChatList} />\n      </RequireAuth> */}\n      <PrivateRoute path='/chat' component={ChatList} />\n\n      <PrivateRoute path='/checkout' component={Checkout} />\n      <PrivateRoute path='/createticket' component={CreateTicket} />\n      <PrivateRoute path='/ticketList' component={TicketList} />\n\n\n />\n      \n    </Switch>\n  )\n}\n// <Route path='/privacy' component={Privacy} />\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport AuthContextProvider from './auth/auth-context'\n\nimport './index.css';\nimport App from './app/App';\nimport * as serviceWorker from './serviceWorker';\nimport Amplify from 'aws-amplify';\nimport config from './aws-exports';\nlet AwsConfig = JSON.parse(JSON.stringify(config))\n\nAmplify.configure(AwsConfig);\n\nconst app = (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <AuthContextProvider>\n        <App />\n      </AuthContextProvider>\n    </BrowserRouter>\n  )\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","\nimport React from 'react';\nimport { createStyles, Theme, withStyles, WithStyles } from '@material-ui/core/styles';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      margin: 0,\n      padding: theme.spacing(2),\n      color: \"#fff\",\n      backgroundColor: \"#3f51b5\"\n    },\n    title:{\n        color: \"#fff\",\n        backgroundColor: \"#3f51b5\"\n    },\n    closeButton: {\n      position: 'absolute',\n      right: theme.spacing(1),\n      top: theme.spacing(1),\n      color: theme.palette.grey[500],\n    },\n  });\n\nexport interface DialogTitleProps extends WithStyles<typeof styles> {\n  id: string;\n  children: React.ReactNode;\n  onClose: () => void;\n}\n\nexport const DialogTitle = withStyles(styles)((props: DialogTitleProps) => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography className={classes.title} variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});"],"sourceRoot":""}